[{"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\index.js":"1","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\App.js":"2","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reportWebVitals.js":"3","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Signin.js":"4","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Login.js":"5","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\Page.js":"6","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Home.js":"7","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ForgotId.js":"8","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ForgotPw.js":"9","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\userAction.js":"10","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\type.js":"11","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\util\\axios.js":"12","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\index.js":"13","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\userReducer.js":"14","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Logout.js":"15","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\hoc\\Auth.js":"16","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\hoc\\authHeader.js":"17","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\message.js":"18","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\validationInfo.js":"19","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\MyPage.js":"20","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\UserInfo.js":"21"},{"size":795,"mtime":1612400059608,"results":"22","hashOfConfig":"23"},{"size":242,"mtime":1613357374080,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":11533,"mtime":1613387411092,"results":"26","hashOfConfig":"23"},{"size":3396,"mtime":1613384054129,"results":"27","hashOfConfig":"23"},{"size":1065,"mtime":1613362628060,"results":"28","hashOfConfig":"23"},{"size":1231,"mtime":1613354026917,"results":"29","hashOfConfig":"23"},{"size":8516,"mtime":1613358133224,"results":"30","hashOfConfig":"23"},{"size":8259,"mtime":1613368030261,"results":"31","hashOfConfig":"23"},{"size":1392,"mtime":1613383210780,"results":"32","hashOfConfig":"23"},{"size":620,"mtime":1613306398176,"results":"33","hashOfConfig":"23"},{"size":262,"mtime":1612432301762,"results":"34","hashOfConfig":"23"},{"size":159,"mtime":1612428715181,"results":"35","hashOfConfig":"23"},{"size":590,"mtime":1613374341339,"results":"36","hashOfConfig":"23"},{"size":1117,"mtime":1613378034104,"results":"37","hashOfConfig":"23"},{"size":1253,"mtime":1612430224432,"results":"38","hashOfConfig":"23"},{"size":231,"mtime":1613384068155,"results":"39","hashOfConfig":"23"},{"size":407,"mtime":1612431383358,"results":"40","hashOfConfig":"23"},{"size":3314,"mtime":1613278643557,"results":"41","hashOfConfig":"23"},{"size":645,"mtime":1613370725653,"results":"42","hashOfConfig":"23"},{"size":6797,"mtime":1613388522137,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"uh50hp",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\index.js",[],["92","93"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\App.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reportWebVitals.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Signin.js",["94"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Login.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\Page.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Home.js",["95","96","97"],"import React, { useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { logoutUser } from '../actions/userAction'\r\nimport Signin from './Signin';\r\nimport Logout from './Logout';\r\nimport Login from './Login';\r\n\r\nconst Home = () => {\r\n    const [isSubmit, setIsSubmit] = useState(true)\r\n\r\n    const submitForm =()=> {\r\n        setIsSubmit(isSubmit)\r\n    }\r\n\r\n    const makeLoginElement = (\r\n            <>\r\n                <h1>Please Login First</h1>\r\n                <a href=\"/login\"><button>로그인</button></a>\r\n            </>\r\n        )\r\n    \r\n\r\n    const makeIntoSiteElement = (\r\n            <>\r\n                <h1>hello</h1>\r\n                <a href=\"/mypage\"><button>마이페이지</button></a>\r\n                <a href=\"/logout\"><button>로그아웃</button></a>\r\n            </>\r\n        )\r\n\r\n    return (\r\n        <>\r\n            <div className=\"full-screen\">\r\n                {/* {isSubmit ? makeLoginElement : makeIntoSiteElement} */}\r\n                {\r\n                    submitForm ? makeLoginElement : makeIntoSiteElement\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Home);","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ForgotId.js",["98"],"import React, {useCallback, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport testUtils from 'react-dom/test-utils';\r\n// import validate from './validationInfo';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst ForgotId = () => {\r\n    // const phoneCode =  \"https://childsnack-test.appspot.com/_ah/api/user/v1/getAuthNum?phone=%7bparam1%7d\";\r\n    const searchEmail = 'https://childsnack-test.appspot.com/_ah/api/user/v1/findEmail?phone=';\r\n    const sendEmail = 'https://childsnack-test.appspot.com/_ah/api/user/v1/sendEmail'\r\n    \r\n    // 기본 찾기항목\r\n    const [forgotInfo,setForgotInfo] = useState({\r\n        name : '',\r\n        phone : '',\r\n    })\r\n    console.log(\"forgotInfo\")\r\n    console.log(forgotInfo)\r\n    \r\n    // 코드 요청\r\n    const [rqustSwitch, setRqustSwitch] = useState(false)\r\n    // 입력받은 코드넘버\r\n    const [rqustAuth, setRqustAuth] = useState('')\r\n    // 입력한 코드넘버\r\n    const [codeNum, setCodeNum] = useState('')\r\n    //마지막 사용자가 찾은 아이디\r\n    const [userId, setUserId] = useState('')\r\n    console.log(\"rqustAuth\")\r\n    console.log(rqustAuth)\r\n\r\n    const [agreeRqst, setAgreeRqst] = useState(false)\r\n\r\n    // 최종확인\r\n    const [finalCheck, setFinalCheck] = useState(false)\r\n\r\n    // 아이디 보여주기\r\n    // const [showId, setShowId] = useState(false)\r\n\r\n    // 타이머\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    const codeNumChange = (e) =>{\r\n        setCodeNum(e.target.value)\r\n        console.log(\"codeNumChange\")\r\n        console.log(e.target.value)\r\n    }\r\n    \r\n    const handleChange = useCallback((e) =>{  \r\n        const {value, name} = e.target;\r\n        \r\n        setForgotInfo({\r\n            ...forgotInfo,\r\n            [name]:value\r\n        })\r\n    },[forgotInfo])\r\n\r\n    // 인증번호 요청 버튼 클릭\r\n    const handleCodeSwitch = useCallback((e) =>{\r\n        e.preventDefault()\r\n        console.log(\"sending Auth number\")\r\n        console.log(rqustSwitch)\r\n\r\n        setRqustSwitch(!rqustSwitch);\r\n        if(rqustSwitch === true){\r\n            console.log(\"통과\")\r\n        }else if(rqustSwitch === false && forgotInfo.phone === '' && forgotInfo.name === ''){\r\n            console.log(\"부합하지않음\")\r\n            alert(\"빈칸 내용을 정확히 입력해주세요\")\r\n            setRqustSwitch(false);\r\n            return\r\n        }\r\n        axios\r\n        .get(searchEmail + forgotInfo.phone + '&name=' + forgotInfo.name)\r\n        .then((response)=>{\r\n            if(response && response.data){\r\n            const parseJson = JSON.parse(response.data.authId)\r\n            console.log(\"response.data\")\r\n            console.log(parseJson)\r\n            setRqustAuth(parseJson)\r\n            setRqustSwitch(true);\r\n            setMinutes(3);\r\n            console.log(rqustSwitch)\r\n        }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    },[forgotInfo.name, forgotInfo.phone, rqustSwitch])\r\n\r\n\r\n    //인증번호 발송 후 입력과정\r\n    const pressCertiBtn = (\r\n        <>\r\n            <div>\r\n                <input\r\n                    // className=\"modal-input\"\r\n                    type='text'\r\n                    name=\"codeNum\"\r\n                    value={codeNum}\r\n                    onChange={codeNumChange}\r\n                />\r\n               \r\n                <button type=\"submit\" onClick={handleCodeSwitch}>다시인증</button>\r\n                <div className=\"footer\">\r\n                    <div className=\"modal-timer\">\r\n                        인증번호가 발송되었습니다 \r\n                        <div>(남은 시간 {minutes}:\r\n                        {seconds < 10 ? `0${seconds}` : seconds})\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" onClick={handleCFcode} style={{float:'right',width:'100%',backgroundColor:\"cyan\"}}>다음</button>\r\n            </div>\r\n        </>\r\n    )\r\n    //인증요청 발송 전\r\n    const notPressCertiBtn = (\r\n        <button onClick={handleCodeSwitch} style={{float:'right'}}> 인증요청 </button>\r\n    )\r\n\r\n    const makeInputElement = () =>{\r\n        return(\r\n            <>\r\n                <div>\r\n                    <h3 style={{display:'flex',justifyContent:'center'}}>\r\n                        Did you forgot own ID?\r\n                    </h3>\r\n                    <div className=\"mid-area\">\r\n                        <input\r\n                            className=\"sign-input\" \r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            type=\"text\" \r\n                            placeholder=\"사용자 이름 입력\" \r\n                            value={forgotInfo.name}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <input \r\n                            className=\"sign-input\"\r\n                            id=\"phone\"\r\n                            name=\"phone\"\r\n                            type=\"text\"\r\n                            placeholder=\"휴대폰번호 입력\"\r\n                            value={forgotInfo.phone}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{height:100}}>\r\n                        {rqustSwitch===true ? pressCertiBtn : notPressCertiBtn}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n   \r\n  \r\n    \r\n    function handleCFcode() {\r\n        console.log(\"일단 탔음\")\r\n        console.log(\"codeNum inside\")\r\n        console.log(codeNum)\r\n        if (codeNum.length !== 6 && agreeRqst === false) {\r\n            console.log(\"return까지 왔음\")\r\n            alert(\"정확한 수신인증번호를 입력해주세요.\")\r\n            return;\r\n        }\r\n        if (minutes === 0 && seconds === 0) {\r\n            return;\r\n        }\r\n        else {\r\n            console.log(\"통과\")\r\n            setRqustSwitch(true)\r\n            setAgreeRqst(true)\r\n        }\r\n        axios\r\n          .post(sendEmail,{\r\n            authId : rqustAuth, \r\n            code : codeNum, \r\n            phone : forgotInfo.phone, \r\n            name :  forgotInfo.name\r\n        } )\r\n          .then((response) => {\r\n            if(response && response.data){\r\n                const findId = response.data.email\r\n                setUserId(findId)\r\n            }\r\n            setAgreeRqst(true)\r\n            setFinalCheck(true)\r\n          })\r\n          .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n\r\n\r\n\r\n      }\r\n    \r\n    //최종 아이디 보여지는부분\r\n    const makeReqElement = () =>{\r\n        return(\r\n            <>\r\n            <div>\r\n                <h3 style={{display:'flex',justifyContent:'center'}}>\r\n                    Did you forgot own ID?\r\n                </h3>\r\n                <div className=\"mid-area\" style={{height:150}}>\r\n                    <div>고객님의 아이디를 알려드립니다.</div>\r\n                    {userId}\r\n                </div>\r\n        </div>\r\n        </>\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const countdown = setInterval(() => {\r\n          if (Number(seconds) > 0) {\r\n            setSeconds(Number(seconds) - 1);\r\n          }\r\n          if (Number(seconds) === 0) {\r\n            if (Number(minutes) === 0) {\r\n              clearInterval(countdown);\r\n            } else {\r\n              setMinutes(Number(minutes) - 1);\r\n              setSeconds(59);\r\n            }\r\n          }\r\n        }, 1000);\r\n        return () => clearInterval(countdown);\r\n      }, [minutes, seconds]);\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <div style={{border:\"1px solid\"}}>\r\n                <div className=\"full-screen\">\r\n                    <div className=\"outline\">\r\n                        {finalCheck ? makeReqElement() : makeInputElement()}\r\n                        <div>\r\n                            <a href=\"/login\"><button>back to Login</button></a>\r\n                            <a href=\"/\"><button>back to Home</button></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgotId;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ForgotPw.js",["99","100"],"import axios from 'axios';\r\nimport React, { useState, useCallback} from 'react';\r\n// import { updateProfile } from '../actions/userAction';\r\nimport PasswordMask from 'react-password-mask';\r\n\r\n// https://childsnack-test.appspot.com/_ah/api/auth/v1/findPassword?email=\r\n\r\nconst searchPass = 'https://childsnack-test.appspot.com/_ah/api/user/v1/findPassword?email=';\r\nconst sendPassword = 'https://childsnack-test.appspot.com/_ah/api/user/v1/sendPassword';\r\n\r\nconst ForgotPw = () => {\r\n    //기본 입력항목\r\n    const [forgotPw, setForgotInfo] = useState({\r\n        email : '',\r\n        phone : ''\r\n    })\r\n    console.log(\"forgotPw\")\r\n    console.log(forgotPw)\r\n\r\n    //비밀번호 재설정 \r\n    const [pwNum,setPwNum] = useState('')\r\n    //인증번호\r\n    const [pwCodeNum, setPwCodeNum] = useState('')\r\n    //다음버튼\r\n    const [pwSwitchCheck, setPwSwitchCheck] = useState(false)\r\n    //인증요청 버튼\r\n    const [agreeCheck, setAgreeCheck] = useState(false)\r\n    //입력 받은 Auth\r\n    const [rqstPsAuth, setRqstPsAuth] = useState('')\r\n    //기본입력항목 input\r\n    const handleChange = useCallback((e) =>{  \r\n        const {value, name} = e.target;\r\n        \r\n        setForgotInfo({\r\n            ...forgotPw,\r\n            [name]:value\r\n        })\r\n    },[forgotPw])\r\n\r\n  \r\n      //다음버튼, 입력 받은 코드넘버 보내기\r\n      function handlePwCF(){\r\n        console.log(\"인증번호 수신 부분\")\r\n        console.log(\"pwCodeNum\")\r\n        console.log(pwCodeNum)\r\n        setPwSwitchCheck(!pwSwitchCheck)\r\n\r\n        if(pwCodeNum.length !== 6 && agreeCheck === false){\r\n            console.log(\"return 까지왔음\")\r\n            alert(\"정확한 수신인증번호를 입력해주세요.\")\r\n            return\r\n        }\r\n        else{\r\n            console.log(\"비밀번호 통과\")\r\n            setPwSwitchCheck(true)\r\n            setAgreeCheck(true)\r\n        }\r\n\r\n        axios\r\n        .post(sendPassword,{\r\n            authId : rqstPsAuth, \r\n            code : pwCodeNum, \r\n            email :  forgotPw.email\r\n        })\r\n\r\n        .then((response) =>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            if(response && response.data){\r\n                console.log(\"response.data\")\r\n                console.log(response.data)\r\n                setPwSwitchCheck(true)\r\n            }\r\n        })\r\n\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n\r\n    }\r\n\r\n    // const onSubmitPwChage =()=>{\r\n    //     console.log(\"pwSwitchCheck\")\r\n    //     console.log(pwSwitchCheck)\r\n    // }\r\n\r\n    //인증버튼 스위치\r\n    const handlePwCodeSwitch = (e) =>{\r\n        e.preventDefault()\r\n        setAgreeCheck(!agreeCheck)\r\n        console.log(\"agreeCheck\")\r\n        console.log(agreeCheck)\r\n        if(pwSwitchCheck === true){\r\n            console.log(\"통과\")\r\n        }else if (pwSwitchCheck === false && forgotPw.email==='' && forgotPw.phone === ''){\r\n            console.log(\"부합하지않음\")\r\n            alert(\"빈칸 내용을 정확히 입력해주세요\")\r\n            setPwSwitchCheck(false);\r\n            setAgreeCheck(false);\r\n            return\r\n        }\r\n        axios\r\n        .get(searchPass + forgotPw.email + '&phone=' + forgotPw.phone)\r\n        .then((response)=>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            if(response&& response.data){\r\n                const parseJason = JSON.parse(response.data.authId)\r\n                setRqstPsAuth(parseJason)\r\n                console.log(\"parseJason\")\r\n                console.log(parseJason)\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    //인증번호 inputChage\r\n    const inputPwCode =(e)=>{\r\n        setPwCodeNum(e.target.value)\r\n        console.log(\"pwCodeNum\")\r\n        console.log(pwCodeNum)\r\n    }\r\n\r\n  \r\n\r\n    //비밀번호 재설정 input\r\n    const pwInputChange = (e) =>{\r\n        setPwNum(e.target.value)\r\n        console.log(\"pwNum\")\r\n        console.log(pwNum)\r\n    }\r\n\r\n    console.log(\"pwSwitchCheck\")\r\n    console.log(pwSwitchCheck)\r\n\r\n    //\r\n    const makePwInput = () =>{\r\n        return (\r\n        <>\r\n            <div>\r\n                <input \r\n                // className=\"sign-input\" \r\n                id=\"email\"\r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"이메일계정\" \r\n                onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <input \r\n                // className=\"sign-input\"\r\n                name=\"phone\"\r\n                type=\"tel\"\r\n                placeholder=\"전화번호\"\r\n                onChange={handleChange}\r\n                />\r\n            </div>\r\n                {agreeCheck===true ? pressPwCertifi : notPressPwCertifi}\r\n            <button type=\"submit\"  onClick={handlePwCF} style={{width:\"100%\"}}>다음</button>\r\n        </>\r\n        )\r\n    }\r\n\r\n    const makePwChange = () =>{\r\n        return(\r\n        <>\r\n            {/* <div>\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"비밀번호\"\r\n                onChange={pwInputChange}\r\n                />\r\n\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"비밀번호 재입력\"\r\n                onChange={pwInputChange}\r\n                />\r\n            </div> */}\r\n\r\n            <div>\r\n                <p>등록하신 휴대전화 문자로 임시 비밀번호를 발송하였습니다.</p>\r\n                <p>다시 로그인 해주세요.</p>\r\n            </div>\r\n\r\n            <a href=\"/login\"><button type=\"button\" style={{width:\"100%\"}}>확인</button></a>\r\n        </>\r\n        )\r\n    }\r\n    \r\n    const notPressPwCertifi = (\r\n        <div>\r\n            <div style={{height:100}}>\r\n                <button type=\"button\" style={{float:\"right\"}} onClick={handlePwCodeSwitch}>인증요청</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const pressPwCertifi = (\r\n        <div>\r\n            <div style={{height:100}}>\r\n                <input\r\n                    // className=\"modal-input\"\r\n                    type='text'\r\n                    name=\"codeNum\"\r\n                    value={pwCodeNum}\r\n                    onChange={inputPwCode}\r\n                    placeholder=\"인증번호 입력\"\r\n                />\r\n               \r\n                <button \r\n                    type=\"submit\" \r\n                    onClick={handlePwCodeSwitch}\r\n                >\r\n                    다시인증\r\n                </button>\r\n\r\n                <div className=\"footer\">\r\n                    <div className=\"modal-timer\">\r\n                        {/* 인증번호가 발송되었습니다  */}\r\n                        {/* <div>(남은 시간 {minutes}:\r\n                        {seconds < 10 ? `0${seconds}` : seconds})\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" style={{float:\"right\"}} onClick={handlePwCodeSwitch}>뒤로</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n       <>\r\n            <div style={{display:'flex',justifyContent:'center', border:\"1px solid\"}}>\r\n                <div className=\"full-screen\">\r\n                    <div className=\"outline\">\r\n                    \r\n                        <h4 style={{display:'flex',justifyContent:'center'}}>\r\n                            Did you forgot own PW?\r\n                        </h4>\r\n\r\n                        <div className=\"mid-area\">\r\n                            {pwSwitchCheck === true ? makePwChange() : makePwInput()}\r\n                        </div>\r\n\r\n                        <div style={{display:'flex',justifyContent:'center'}}>\r\n                            <a href=\"/login\"><button>back to Login</button></a>\r\n                            <a href=\"/\"><button>back to Home</button></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </>\r\n    );\r\n};\r\n\r\nexport default ForgotPw;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\userAction.js",["101"],"import {REGISTER_USER, LOGIN_USER, LOGOUT, UPDATE} from  \"./type\"\r\nimport { request } from \"../util/axios\";\r\n// import authHeader from \"../hoc/authHeader\";\r\nimport authHeader from \"../hoc/authHeader\"\r\n\r\nconst REGISTER_URL = \"https://childsnack-test.appspot.com/_ah/api/user/v1/join\"\r\nconst LOGIN_URL =\"https://childsnack-test.appspot.com/_ah/api/user/v1/login\"\r\nconst LOGOUT_URL =\"https://childsnack-test.appspot.com/_ah/api/user/v1/logout\"\r\nconst UPDATE_URL = \"https://childsnack-test.appspot.com/updateProfile\"\r\n\r\nexport function loginUser(toDataSubmit){\r\n    const data = request(\"post\", LOGIN_URL, toDataSubmit, {headers: authHeader()});\r\n    console.log(\"data\")\r\n    console.log(data)\r\n    return {\r\n        type:LOGIN_USER, \r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport function logoutUser(toDataSubmit){\r\n    const data = request(\"get\", LOGOUT_URL, toDataSubmit,  {headers: authHeader()});\r\n    return {\r\n        type:LOGOUT, \r\n        payload: data,\r\n    }\r\n}\r\nexport function registerUser(toDataSubmit){\r\n    const data = request(\"post\", REGISTER_URL, toDataSubmit, {headers: authHeader()});\r\n    return {\r\n        type: REGISTER_USER, \r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport function updateProfile(toDataSubmit){\r\n    const data = request(\"post\", UPDATE_URL, toDataSubmit, {headers: authHeader()});\r\n    return {\r\n        type: UPDATE_URL, \r\n        payload: data,\r\n    }\r\n}\r\n\r\n","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\type.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\util\\axios.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\index.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\userReducer.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Logout.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\hoc\\Auth.js",["102","103"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\hoc\\authHeader.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\message.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\validationInfo.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\MyPage.js",["104"],"import React, { useState } from 'react';\r\nimport Logout from './Logout';\r\n\r\nconst MyPage = () => {\r\n    // const [btnClick, setBtnClick] = useState(false)\r\n    // const serveToMyPage = ()=>{\r\n    //     setBtnClick(!btnClick)\r\n    //     console.log(\"btnClick\")\r\n    //     console.log(btnClick)\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h1>Welcome to My Page</h1>\r\n            <a href=\"/userInfo\"><button type=\"button\">회원정보관리</button></a>\r\n            {/* <button type=\"submit\" onClick={serveToMyPage}>회원정보관리</button> */}\r\n            \r\n            <Logout />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyPage;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\UserInfo.js",["105","106","107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":34,"column":19,"nodeType":"115","messageId":"116","endLine":34,"endColumn":27},{"ruleId":"113","severity":1,"message":"117","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":14},{"ruleId":"113","severity":1,"message":"118","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":14},{"ruleId":"113","severity":1,"message":"119","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":13},{"ruleId":"113","severity":1,"message":"120","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":17},{"ruleId":"113","severity":1,"message":"121","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":20},{"ruleId":"113","severity":1,"message":"122","line":131,"column":11,"nodeType":"115","messageId":"116","endLine":131,"endColumn":24},{"ruleId":"113","severity":1,"message":"123","line":1,"column":44,"nodeType":"115","messageId":"116","endLine":1,"endColumn":50},{"ruleId":"113","severity":1,"message":"124","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":36,"column":8,"nodeType":"127","endLine":36,"endColumn":10,"suggestions":"128"},{"ruleId":"113","severity":1,"message":"129","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"130","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":17},{"ruleId":"113","severity":1,"message":"131","line":9,"column":11,"nodeType":"115","messageId":"116","endLine":9,"endColumn":24},{"ruleId":"113","severity":1,"message":"132","line":23,"column":11,"nodeType":"115","messageId":"116","endLine":23,"endColumn":23},{"ruleId":"113","severity":1,"message":"133","line":32,"column":11,"nodeType":"115","messageId":"116","endLine":32,"endColumn":27},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'Signin' is defined but never used.","'Logout' is defined but never used.","'Login' is defined but never used.","'testUtils' is defined but never used.","'PasswordMask' is defined but never used.","'pwInputChange' is assigned a value but never used.","'UPDATE' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'useState' is defined but never used.","'request' is defined but never used.","'changeProfile' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleClickEvent' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [dispatch]",{"range":"139","text":"140"},[1039,1041],"[dispatch]"]