[{"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\index.js":"1","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\App.js":"2","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reportWebVitals.js":"3","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\Page.js":"4","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\userAction.js":"5","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\type.js":"6","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\util\\axios.js":"7","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\index.js":"8","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\userReducer.js":"9","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\message.js":"10","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\validationInfo.js":"11","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\ForgotId.js":"12","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\ForgotPw.js":"13","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Logout.js":"14","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Login.js":"15","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Signin.js":"16","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\main\\Home.js":"17","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\UserInfo.js":"18","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\MyPage.js":"19","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\ServiceCenter.js":"20","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\Navbar.js":"21","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\Products.js":"22","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\ProductDetail.js":"23","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\DownNav.js":"24","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\Review.js":"25","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\Story.js":"26","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\Event.js":"27","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\Cart.js":"28","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\Notice.js":"29","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\OrderHistory.js":"30","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\RvCenter.js":"31","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\EventCenter.js":"32","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\Coupon.js":"33","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\CartItem.js":"34","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\Category.js":"35","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\ReviewMore.js":"36","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\StoryMore.js":"37","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\CategoryDetail.js":"38","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\NewArrive.js":"39","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\NewDetail.js":"40","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\HotListMore.js":"41","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\HotListDetail.js":"42","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\StoryDetail.js":"43","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\Payment.js":"44","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\OrderNav.js":"45","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\EventMore.js":"46"},{"size":795,"mtime":1612400059608,"results":"47","hashOfConfig":"48"},{"size":299,"mtime":1613910750768,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"48"},{"size":2945,"mtime":1613983899415,"results":"51","hashOfConfig":"48"},{"size":1544,"mtime":1613552208059,"results":"52","hashOfConfig":"48"},{"size":476,"mtime":1613552418461,"results":"53","hashOfConfig":"48"},{"size":262,"mtime":1613530887475,"results":"54","hashOfConfig":"48"},{"size":159,"mtime":1612428715181,"results":"55","hashOfConfig":"48"},{"size":590,"mtime":1613530875224,"results":"56","hashOfConfig":"48"},{"size":407,"mtime":1612431383358,"results":"57","hashOfConfig":"48"},{"size":3314,"mtime":1613457451241,"results":"58","hashOfConfig":"48"},{"size":8576,"mtime":1613641352796,"results":"59","hashOfConfig":"48"},{"size":8251,"mtime":1613713317918,"results":"60","hashOfConfig":"48"},{"size":1112,"mtime":1613910761620,"results":"61","hashOfConfig":"48"},{"size":3262,"mtime":1613910740655,"results":"62","hashOfConfig":"48"},{"size":11537,"mtime":1613974255927,"results":"63","hashOfConfig":"48"},{"size":17215,"mtime":1613986584663,"results":"64","hashOfConfig":"48"},{"size":24421,"mtime":1613830443070,"results":"65","hashOfConfig":"48"},{"size":1113,"mtime":1613912846949,"results":"66","hashOfConfig":"48"},{"size":251,"mtime":1613555049801,"results":"67","hashOfConfig":"48"},{"size":4468,"mtime":1613954746671,"results":"68","hashOfConfig":"48"},{"size":2016,"mtime":1613979207506,"results":"69","hashOfConfig":"48"},{"size":11624,"mtime":1613983389459,"results":"70","hashOfConfig":"48"},{"size":1655,"mtime":1613981670018,"results":"71","hashOfConfig":"48"},{"size":1110,"mtime":1613979507898,"results":"72","hashOfConfig":"48"},{"size":1004,"mtime":1613970420616,"results":"73","hashOfConfig":"48"},{"size":619,"mtime":1613984220446,"results":"74","hashOfConfig":"48"},{"size":6721,"mtime":1613981973073,"results":"75","hashOfConfig":"48"},{"size":1135,"mtime":1613914102927,"results":"76","hashOfConfig":"48"},{"size":1113,"mtime":1613954621770,"results":"77","hashOfConfig":"48"},{"size":1096,"mtime":1613954618749,"results":"78","hashOfConfig":"48"},{"size":990,"mtime":1613983754114,"results":"79","hashOfConfig":"48"},{"size":190,"mtime":1613724751360,"results":"80","hashOfConfig":"48"},{"size":1865,"mtime":1613954663272,"results":"81","hashOfConfig":"48"},{"size":2717,"mtime":1613971207375,"results":"82","hashOfConfig":"48"},{"size":157,"mtime":1613979115340,"results":"83","hashOfConfig":"48"},{"size":1569,"mtime":1613970217190,"results":"84","hashOfConfig":"48"},{"size":993,"mtime":1613983451409,"results":"85","hashOfConfig":"48"},{"size":2008,"mtime":1613972068042,"results":"86","hashOfConfig":"48"},{"size":1086,"mtime":1613960807207,"results":"87","hashOfConfig":"48"},{"size":1919,"mtime":1613971887228,"results":"88","hashOfConfig":"48"},{"size":1086,"mtime":1613971851711,"results":"89","hashOfConfig":"48"},{"size":1077,"mtime":1613970394475,"results":"90","hashOfConfig":"48"},{"size":231,"mtime":1613981362901,"results":"91","hashOfConfig":"48"},{"size":595,"mtime":1613982369399,"results":"92","hashOfConfig":"48"},{"size":4222,"mtime":1613988540223,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"uh50hp",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\index.js",[],["195","196"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\App.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reportWebVitals.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\Page.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\userAction.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\type.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\util\\axios.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\index.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\userReducer.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\message.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\validationInfo.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\ForgotId.js",["197"],"import React, {useCallback, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport testUtils from 'react-dom/test-utils';\r\n// import validate from './validationInfo';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst ForgotId = () => {\r\n    // const phoneCode =  \"https://childsnack-test.appspot.com/_ah/api/user/v1/getAuthNum?phone=%7bparam1%7d\";\r\n    const searchEmail = 'https://childsnack-test.appspot.com/_ah/api/user/v1/findEmail?phone=';\r\n    const sendEmail = 'https://childsnack-test.appspot.com/_ah/api/user/v1/sendEmail'\r\n    \r\n    // 기본 찾기항목\r\n    const [forgotInfo,setForgotInfo] = useState({\r\n        name : '',\r\n        phone : '',\r\n    })\r\n    console.log(\"forgotInfo\")\r\n    console.log(forgotInfo)\r\n    \r\n    // 코드 요청\r\n    const [rqustSwitch, setRqustSwitch] = useState(false)\r\n    // 입력받은 코드넘버\r\n    const [rqustAuth, setRqustAuth] = useState('')\r\n    // 입력한 코드넘버\r\n    const [codeNum, setCodeNum] = useState('')\r\n    //마지막 사용자가 찾은 아이디\r\n    const [userId, setUserId] = useState('')\r\n    console.log(\"rqustAuth\")\r\n    console.log(rqustAuth)\r\n\r\n    const [agreeRqst, setAgreeRqst] = useState(false)\r\n\r\n    // 최종확인\r\n    const [finalCheck, setFinalCheck] = useState(false)\r\n\r\n    // 아이디 보여주기\r\n    // const [showId, setShowId] = useState(false)\r\n    \r\n    // 타이머\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    const codeNumChange = (e) =>{\r\n        setCodeNum(e.target.value)\r\n        console.log(\"codeNumChange\")\r\n        console.log(e.target.value)\r\n    }\r\n    \r\n    const handleChange = useCallback((e) =>{  \r\n        const {value, name} = e.target;\r\n        \r\n        setForgotInfo({\r\n            ...forgotInfo,\r\n            [name]:value\r\n        })\r\n    },[forgotInfo])\r\n\r\n    // 인증번호 요청 버튼 클릭\r\n    const handleCodeSwitch = useCallback((e) =>{\r\n        e.preventDefault()\r\n        console.log(\"sending Auth number\")\r\n        console.log(rqustSwitch)\r\n\r\n        setRqustSwitch(!rqustSwitch);\r\n        if(rqustSwitch === true){\r\n            console.log(\"통과\")\r\n        }else if(rqustSwitch === false && forgotInfo.phone === '' && forgotInfo.name === ''){\r\n            console.log(\"부합하지않음\")\r\n            alert(\"빈칸 내용을 정확히 입력해주세요\")\r\n            setRqustSwitch(false);\r\n            return\r\n        }\r\n        axios\r\n        .get(searchEmail + forgotInfo.phone + '&name=' + forgotInfo.name)\r\n        .then((response)=>{\r\n            if(response && response.data){\r\n            const parseJson = JSON.parse(response.data.authId)\r\n            console.log(\"response.data\")\r\n            console.log(parseJson)\r\n            setRqustAuth(parseJson)\r\n            setRqustSwitch(true);\r\n            setMinutes(3);\r\n            console.log(rqustSwitch)\r\n        }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    },[forgotInfo.name, forgotInfo.phone, rqustSwitch])\r\n\r\n    //인증번호 입력후 완료 절차\r\n    function handleCFcode() {\r\n        console.log(\"일단 탔음\")\r\n        console.log(\"codeNum inside\")\r\n        console.log(codeNum)\r\n        if (codeNum.length !== 6 && agreeRqst === false) {\r\n            console.log(\"return까지 왔음\")\r\n            alert(\"정확한 수신인증번호를 입력해주세요.\")\r\n            return;\r\n        }\r\n        if (minutes === 0 && seconds === 0) {\r\n            return;\r\n        }\r\n        else {\r\n            console.log(\"통과\")\r\n            setRqustSwitch(true)\r\n            setAgreeRqst(true)\r\n        }\r\n        axios\r\n          .post(sendEmail,{\r\n            authId : rqustAuth, \r\n            code : codeNum, \r\n            phone : forgotInfo.phone, \r\n            name :  forgotInfo.name\r\n        } )\r\n          .then((response) => {\r\n            if(response && response.data){\r\n                const findId = response.data.email\r\n                setUserId(findId)\r\n            }\r\n            setAgreeRqst(true)\r\n            setFinalCheck(true)\r\n          })\r\n          .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n\r\n\r\n\r\n      }\r\n      \r\n    //인증번호 발송 후 입력과정\r\n    const pressCertiBtn = (\r\n        <>\r\n            <div>\r\n                <input\r\n                    // className=\"modal-input\"\r\n                    type='text'\r\n                    name=\"codeNum\"\r\n                    value={codeNum}\r\n                    onChange={codeNumChange}\r\n                />\r\n               \r\n                <button type=\"submit\" onClick={handleCodeSwitch}>다시인증</button>\r\n                <div className=\"footer\">\r\n                    <div className=\"modal-timer\">\r\n                        인증번호가 발송되었습니다 \r\n                        <div>(남은 시간 {minutes}:\r\n                        {seconds < 10 ? `0${seconds}` : seconds})\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" onClick={handleCFcode} style={{float:'right',width:'100%',backgroundColor:\"cyan\"}}>다음</button>\r\n            </div>\r\n        </>\r\n    )\r\n    //인증요청 발송 전\r\n    const notPressCertiBtn = (\r\n        <button onClick={handleCodeSwitch} style={{float:'right'}}> 인증요청 </button>\r\n    )\r\n\r\n    const makeInputElement = () =>{\r\n        return(\r\n            <>\r\n                <div>\r\n                    <h3 style={{display:'flex',justifyContent:'center'}}>\r\n                        Did you forgot own ID?\r\n                    </h3>\r\n                    <div className=\"mid-area\">\r\n                        <input\r\n                            className=\"sign-input\" \r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            type=\"text\" \r\n                            placeholder=\"사용자 이름 입력\" \r\n                            value={forgotInfo.name}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <input \r\n                            className=\"sign-input\"\r\n                            id=\"phone\"\r\n                            name=\"phone\"\r\n                            type=\"text\"\r\n                            placeholder=\"휴대폰번호 입력\"\r\n                            value={forgotInfo.phone}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{height:100}}>\r\n                        {rqustSwitch===true ? pressCertiBtn : notPressCertiBtn}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n   \r\n  \r\n    \r\n    \r\n    \r\n    //최종 아이디 보여지는부분\r\n    const makeReqElement = () =>{\r\n        return(\r\n            <>\r\n            <div>\r\n                <h3 style={{display:'flex',justifyContent:'center'}}>\r\n                    Did you forgot own ID?\r\n                </h3>\r\n                <div className=\"mid-area\" style={{height:150}}>\r\n                    <div>고객님의 아이디를 알려드립니다.</div>\r\n                    {userId}\r\n                </div>\r\n        </div>\r\n        </>\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const countdown = setInterval(() => {\r\n          if (Number(seconds) > 0) {\r\n            setSeconds(Number(seconds) - 1);\r\n          }\r\n          if (Number(seconds) === 0) {\r\n            if (Number(minutes) === 0) {\r\n              clearInterval(countdown);\r\n            } else {\r\n              setMinutes(Number(minutes) - 1);\r\n              setSeconds(59);\r\n            }\r\n          }\r\n        }, 1000);\r\n        return () => clearInterval(countdown);\r\n      }, [minutes, seconds]);\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <div style={{border:\"1px solid\"}}>\r\n                <div className=\"full-screen\">\r\n                    <div className=\"outline\">\r\n                        {finalCheck ? makeReqElement() : makeInputElement()}\r\n                        <div>\r\n                            <a href=\"/login\"><button>back to Login</button></a>\r\n                            <a href=\"/\"><button>back to Home</button></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgotId;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\ForgotPw.js",["198","199"],"import axios from 'axios';\r\nimport React, { useState, useCallback} from 'react';\r\n// import { updateProfile } from '../actions/userAction';\r\nimport PasswordMask from 'react-password-mask';\r\n\r\n// https://childsnack-test.appspot.com/_ah/api/auth/v1/findPassword?email=\r\n\r\nconst searchPass = 'https://childsnack-test.appspot.com/_ah/api/user/v1/findPassword?email=';\r\nconst sendPassword = 'https://childsnack-test.appspot.com/_ah/api/user/v1/sendPassword';\r\n\r\nconst ForgotPw = () => {\r\n    //기본 입력항목\r\n    const [forgotPw, setForgotInfo] = useState({\r\n        email : '',\r\n        phone : ''\r\n    })\r\n    console.log(\"forgotPw\")\r\n    console.log(forgotPw)\r\n\r\n    //비밀번호 재설정 \r\n    const [pwNum,setPwNum] = useState('')\r\n    //인증번호\r\n    const [pwCodeNum, setPwCodeNum] = useState('')\r\n    //다음버튼\r\n    const [pwSwitchCheck, setPwSwitchCheck] = useState(false)\r\n    //인증요청 버튼\r\n    const [agreeCheck, setAgreeCheck] = useState(false)\r\n    //입력 받은 Auth\r\n    const [rqstPsAuth, setRqstPsAuth] = useState('')\r\n    //기본입력항목 input\r\n    const handleChange = useCallback((e) =>{  \r\n        const {value, name} = e.target;\r\n        \r\n        setForgotInfo({\r\n            ...forgotPw,\r\n            [name]:value\r\n        })\r\n    },[forgotPw])\r\n\r\n  \r\n      //다음버튼, 입력 받은 코드넘버 보내기\r\n      function handlePwCF(){\r\n        console.log(\"인증번호 수신 부분\")\r\n        console.log(\"pwCodeNum\")\r\n        console.log(pwCodeNum)\r\n        setPwSwitchCheck(!pwSwitchCheck)\r\n\r\n        if(pwCodeNum.length !== 6 && agreeCheck === false){\r\n            console.log(\"return 까지왔음\")\r\n            alert(\"정확한 수신인증번호를 입력해주세요.\")\r\n            return\r\n        }\r\n        else{\r\n            console.log(\"비밀번호 통과\")\r\n            setPwSwitchCheck(true)\r\n            setAgreeCheck(true)\r\n        }\r\n\r\n        axios\r\n        .post(sendPassword,{\r\n            authId : rqstPsAuth, \r\n            code : pwCodeNum, \r\n            email :  forgotPw.email\r\n        })\r\n\r\n        .then((response) =>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            if(response && response.data){\r\n                console.log(\"response.data\")\r\n                console.log(response.data)\r\n                setPwSwitchCheck(true)\r\n            }\r\n        })\r\n\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n\r\n    }\r\n\r\n    // const onSubmitPwChage =()=>{\r\n    //     console.log(\"pwSwitchCheck\")\r\n    //     console.log(pwSwitchCheck)\r\n    // }\r\n\r\n    //인증버튼 스위치\r\n    const handlePwCodeSwitch = (e) =>{\r\n        e.preventDefault()\r\n        setAgreeCheck(!agreeCheck)\r\n        console.log(\"agreeCheck\")\r\n        console.log(agreeCheck)\r\n        if(pwSwitchCheck === true){\r\n            console.log(\"통과\")\r\n        }else if (pwSwitchCheck === false && forgotPw.email==='' && forgotPw.phone === ''){\r\n            console.log(\"부합하지않음\")\r\n            alert(\"빈칸 내용을 정확히 입력해주세요\")\r\n            setPwSwitchCheck(false);\r\n            setAgreeCheck(false);\r\n            return\r\n        }\r\n        axios\r\n        .get(searchPass + forgotPw.email + '&phone=' + forgotPw.phone)\r\n        .then((response)=>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            if(response&& response.data){\r\n                const parseJason = JSON.parse(response.data.authId)\r\n                setRqstPsAuth(parseJason)\r\n                console.log(\"parseJason\")\r\n                console.log(parseJason)\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    //인증번호 inputChage\r\n    const inputPwCode =(e)=>{\r\n        setPwCodeNum(e.target.value)\r\n        console.log(\"pwCodeNum\")\r\n        console.log(pwCodeNum)\r\n    }\r\n\r\n  \r\n\r\n    //비밀번호 재설정 input\r\n    const pwInputChange = (e) =>{\r\n        setPwNum(e.target.value)\r\n        console.log(\"pwNum\")\r\n        console.log(pwNum)\r\n    }\r\n\r\n    console.log(\"pwSwitchCheck\")\r\n    console.log(pwSwitchCheck)\r\n\r\n    const makePwInput = () =>{\r\n        return (\r\n        <>\r\n            <div>\r\n                <input \r\n                // className=\"sign-input\" \r\n                id=\"email\"\r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"이메일계정\" \r\n                onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <input \r\n                // className=\"sign-input\"\r\n                name=\"phone\"\r\n                type=\"tel\"\r\n                placeholder=\"전화번호\"\r\n                onChange={handleChange}\r\n                />\r\n            </div>\r\n                {agreeCheck===true ? pressPwCertifi : notPressPwCertifi}\r\n            <button type=\"submit\"  onClick={handlePwCF} style={{width:\"100%\"}}>다음</button>\r\n        </>\r\n        )\r\n    }\r\n\r\n    const makePwChange = () =>{\r\n        return(\r\n        <>\r\n            {/* <div>\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"비밀번호\"\r\n                onChange={pwInputChange}\r\n                />\r\n\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"비밀번호 재입력\"\r\n                onChange={pwInputChange}\r\n                />\r\n            </div> */}\r\n\r\n            <div>\r\n                <p>등록하신 휴대전화 문자로 임시 비밀번호를 발송하였습니다.</p>\r\n                <p>다시 로그인 해주세요.</p>\r\n            </div>\r\n\r\n            <a href=\"/login\"><button type=\"button\" style={{width:\"100%\"}}>확인</button></a>\r\n        </>\r\n        )\r\n    }\r\n    \r\n    const notPressPwCertifi = (\r\n        <div>\r\n            <div style={{height:100}}>\r\n                <button type=\"button\" style={{float:\"right\"}} onClick={handlePwCodeSwitch}>인증요청</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const pressPwCertifi = (\r\n        <div>\r\n            <div style={{height:100}}>\r\n                <input\r\n                    // className=\"modal-input\"\r\n                    type='text'\r\n                    name=\"codeNum\"\r\n                    value={pwCodeNum}\r\n                    onChange={inputPwCode}\r\n                    placeholder=\"인증번호 입력\"\r\n                />\r\n               \r\n                <button \r\n                    type=\"submit\" \r\n                    onClick={handlePwCodeSwitch}\r\n                >\r\n                    다시인증\r\n                </button>\r\n\r\n                <div className=\"footer\">\r\n                    <div className=\"modal-timer\">\r\n                        {/* 인증번호가 발송되었습니다  */}\r\n                        {/* <div>(남은 시간 {minutes}:\r\n                        {seconds < 10 ? `0${seconds}` : seconds})\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" style={{float:\"right\"}} onClick={handlePwCodeSwitch}>뒤로</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n       <>\r\n            <div style={{display:'flex',justifyContent:'center', border:\"1px solid\"}}>\r\n                <div className=\"full-screen\">\r\n                    <div className=\"outline\">\r\n                    \r\n                        <h4 style={{display:'flex',justifyContent:'center'}}>\r\n                            Did you forgot own PW?\r\n                        </h4>\r\n\r\n                        <div className=\"mid-area\">\r\n                            {pwSwitchCheck === true ? makePwChange() : makePwInput()}\r\n                        </div>\r\n\r\n                        <div style={{display:'flex',justifyContent:'center'}}>\r\n                            <a href=\"/login\"><button>back to Login</button></a>\r\n                            <a href=\"/\"><button>back to Home</button></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </>\r\n    );\r\n};\r\n\r\nexport default ForgotPw;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Logout.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Login.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Signin.js",["200"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\main\\Home.js",["201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\UserInfo.js",["218"],"import axios from 'axios';\r\nimport { withRouter} from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport authHeader from \"../../actions/userAction\"\r\nimport {Modal, Button} from \"react-bootstrap\"\r\nimport \"./userinfo.css\"\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst UserInfo = ({props,history}) => {\r\n    const userInfomation = \"https://childsnack-test.appspot.com/_ah/api/user/v1/getAccount\"\r\n    const exitService = \"https://childsnack-test.appspot.com/_ah/api/user/v1/exitService\"\r\n    const phoneCode = \"https://childsnack-test.appspot.com/_ah/api/user/v1/getAuthNum?phone=\"\r\n    const phoneCodeCheck = \"https://childsnack-test.appspot.com/_ah/api/user/v1/checkAuthNum\"\r\n    const updateInfo = \"https://childsnack-test.appspot.com/updateProfile\"\r\n\r\n    const [clickAction, setClickAction] = useState(false)\r\n\r\n    const [passwordClick, setPasswordClick] = useState(false)\r\n\r\n    //회원정보 변경버튼 \r\n    const [sendClick, setSendClick] = useState(false)\r\n    console.log(\"sendClick\")\r\n    console.log(sendClick)\r\n\r\n    const [show, setShow] = useState(false);\r\n    //주소 모달 show\r\n    const [addShow, setAddShow] = useState(false)\r\n    //Phone 모달 show\r\n    const [phoneShow, setPhoneShow] = useState(false)\r\n    //비밀번호\r\n    const [agreeSign, setAgreeSign] = useState(false)\r\n\r\n    const handleShow = () => {setShow(true)}\r\n    const handleClose = () => {setShow(false)}\r\n    const handleAddShow = () =>{setAddShow(true)}\r\n    const handleAddClose = () =>{setAddShow(false)}\r\n    const handlePhoneShow = () =>{setPhoneShow(true)}\r\n    const handlePhoneClose = () =>{\r\n        setPhoneShow(false)\r\n        setSendClick(false)\r\n    }\r\n    //회원 정보\r\n    const [userInfo, setUserInfo]  = useState('')\r\n    //입력한 주소\r\n    const [isAddress, setIsAddress] = useState('');\r\n     //입력한 주소\r\n     const [isAddressDetail, setIsAddressDetail] = useState('');\r\n    //등록한 번호\r\n    const [phoneInput, setPhoneInput] = useState('')\r\n    //요청받은 코드번호\r\n    const [codeInput, setCodeInput] = useState('');\r\n    //수락여부 \r\n    const [allow,setAllow] = useState(false)\r\n    //상세주소\r\n    const [addDetail,setAddDetail] = useState(false)\r\n    //비밀번호 변경\r\n    const [oldPw, setOldPw] = useState('')\r\n    const [newPw, setNewPw] = useState('')\r\n    const [checkPw, setCheckPw] = useState('')\r\n    const [isAuthId, setIsAuthId] = useState('')\r\n    //Old Passward\r\n    const oldPwChange = (e) =>{setOldPw(e.target.value)}\r\n    //New Passward\r\n    const newPwChange = (e) =>{setNewPw(e.target.value)}\r\n    //신규 비밀번호 재입력\r\n    const checkPwChange = (e) =>{\r\n    setCheckPw(e.target.value)\r\n    }\r\n\r\n    //validation check Passward\r\n    const validatePw = () =>{\r\n        // if(userInfo.password !== oldPw){\r\n        //     alert(\"기존비밀번호와 다릅니다!\")\r\n        //     return\r\n        // }else{\r\n        //     console.log(\"통과\")\r\n        // }\r\n        if(oldPw.length < 6 || newPw.length < 6 ){\r\n            alert(\"비밀번호는 6자 이상으로 설정해주세요!\")\r\n            console.log(\"비밀번호 6자 이상으로 설정해주세요!.\")\r\n            return\r\n        }\r\n        if(oldPw === newPw){\r\n            alert(\"과거 비밀번호와 같습니다.\")\r\n            console.log(\"과거 비밀번호와 같습니다.\")\r\n            return\r\n        }\r\n        if(checkPw !== newPw || checkPw.length < 6){\r\n            alert(\"입력한 비밀번호가 틀립니다.\")\r\n            console.log(\"입력한 비밀번호가 틀립니다.\")\r\n            return\r\n        }else{\r\n            setAgreeSign(true)\r\n            console.log(\"통과\")\r\n            alert(\"통과\")\r\n            setNewPw(newPw)\r\n            setPasswordClick(false)\r\n        }\r\n    }\r\n\r\n     //상세주소 확인\r\n     const phoneNumChange = (e) =>{\r\n        console.log(\"phoneCodeChange\")\r\n        setPhoneInput(e.target.value)\r\n        console.log(phoneInput)\r\n    }\r\n\r\n    //신규번호 확인\r\n    const addDetailChange = (e) =>{\r\n        console.log(\"isAddressDetail\")\r\n        setIsAddressDetail(e.target.value)\r\n        console.log(isAddressDetail)\r\n    }\r\n    //인증코드 확인\r\n    const phoneCodeChange = (e) =>{\r\n        console.log(\"phoneCodeChange\")\r\n        setCodeInput(e.target.value)\r\n        console.log(codeInput)\r\n    }\r\n    // //뒤로가기\r\n    const goBack = () =>{\r\n        history.goBack();\r\n    }\r\n    //카카오 주소API\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.roadAddress;\r\n        let extraAddress = ''; \r\n\r\n        if (data.addressType === 'R') {\r\n            extraAddress += data.bname;\r\n            }  if (data.bname !== '') {\r\n            \r\n            if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setIsAddress(fullAddress)\r\n        setAddShow(false)\r\n        setAllow(true)\r\n    }\r\n\r\n    const handleClickEvent = () =>{\r\n        setClickAction(!clickAction)\r\n        console.log(\"clickAction\")\r\n        console.log(clickAction)\r\n    }\r\n    const handleAddDetailSwitch = () =>{\r\n        setAddDetail(!addDetail)\r\n        console.log(\"addDetail\")\r\n        console.log(addDetail)\r\n    }\r\n\r\n    //비밀번호 변경 여부 버튼\r\n    const handlePwClick = () =>{\r\n        setPasswordClick(!passwordClick)\r\n        console.log(passwordClick)\r\n        setAgreeSign(false)\r\n    }\r\n\r\n    // 인증번호 요청 버튼 클릭\r\n    const handleCodeSwitch = (e) =>{\r\n        e.preventDefault()\r\n        console.log(\"sendClick\")\r\n        console.log(sendClick)\r\n        // setReqstPhoneCode(!reqstPhoneCode);\r\n        // setSendClick(!sendClick);\r\n        if(sendClick === false && phoneInput.length !== 10 && phoneInput.length !== 11 ){\r\n            alert(\"전화번호를 정확히 입력해주세요\")\r\n            setSendClick(false);\r\n            return\r\n        }\r\n        axios\r\n        .get(phoneCode + phoneInput)\r\n        .then((response)=>{\r\n            if(response && response.data){\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            const parseJson = JSON.parse(response.data.authId)\r\n            console.log(\"response.data\")\r\n            console.log(parseJson)\r\n            setIsAuthId(parseJson)\r\n            setSendClick(true);\r\n        }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    //핸드폰 인증번호 입력후 완료절차\r\n    function handlePhoneCheck() {\r\n        console.log(\"최종변경절차까지 왔음\")\r\n        if(codeInput.length !== 6 ){\r\n            alert(\"정확한 수신인증번호를 입력해주세요.\")\r\n            return;\r\n        }\r\n        else{\r\n            console.log(\"통과\")\r\n        }\r\n        axios\r\n        .post(phoneCodeCheck,{\r\n            authId : isAuthId, \r\n            code : codeInput, \r\n            phone : phoneInput, \r\n            name : userInfo.name,\r\n        })\r\n        .then((response)=>{\r\n            if(response.data.code === \"1\"){\r\n                console.log(response)\r\n                setSendClick(false);\r\n                setAllow(true)\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    //변경완료 확인버튼\r\n    const changeSubmit = () =>{\r\n        console.log(\"최종변경\")\r\n        axios\r\n        .post(updateInfo, {\r\n            oldPassword : oldPw,\r\n            password : newPw,\r\n            address: isAddress,\r\n            addressDetail: isAddressDetail,\r\n            name : userInfo.name,\r\n        }, {headers: authHeader()})\r\n\r\n        .then((response)=>{\r\n            console.log(\"재등록 보냄\")\r\n            console.log(response)\r\n            if(response && response.data.code === \"1\"){\r\n                localStorage.getItem('user',JSON.stringify(response.payload))\r\n                alert(\"변경이 완료되었습니다\")\r\n                console.log( \"password : newPw\")\r\n                console.log(newPw)\r\n                // props.history.push(\"/myPage\")\r\n                goBack()\r\n            }\r\n        })\r\n        \r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            console.log(error)\r\n            console.log(error.response)\r\n            alert(error.response)\r\n        })\r\n    }\r\n\r\n\r\n    //회원 탈퇴 \r\n    const handleRemoveId = () =>{\r\n        console.log(\"탈퇴 시작\")\r\n        axios\r\n        .get(exitService,{headers: authHeader()})\r\n        .then((response)=>{\r\n            if(response.data.code === \"1\"){\r\n                props.history.push(\"./Home\")\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response)\r\n            alert(error.response)\r\n        })\r\n    } \r\n    \r\n\r\n    //전화번호 신규등록 모달\r\n    const PhoneModal = () => {\r\n        return (\r\n            <Button variant=\"primary\" onClick={handlePhoneShow}>\r\n                인증하기\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    //주소지 신규등록 모달\r\n    const AddresModal = () => {\r\n        return (\r\n            <Button variant=\"primary\" onClick={handleAddShow}>\r\n                주소검색\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    //회원탈퇴 모달\r\n    const RemoveModal = () => {\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={handleShow}>회원탈퇴</Button>\r\n                <Modal \r\n                    show={show} \r\n                    data-toggle=\"modal\"\r\n                    onHide={handleClose}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <h3>회원탈퇴를 진행할까요?</h3>\r\n                        <div>\r\n                            <button onClick={handleRemoveId}>진행할께요</button>\r\n                            <button onClick={handleClose}>취소</button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>   \r\n            </>\r\n        )\r\n    }\r\n\r\n    //모달 등록번호입력\r\n    const beforeChangePn= (\r\n        <>\r\n            <div>\r\n                <input \r\n                    value={phoneInput}\r\n                    type=\"text\" \r\n                    placeholder=\"번호를 입력해주세요.\" \r\n                    onChange={phoneNumChange}\r\n                    style={{border: \"1px solid\", width:300, height:30}}\r\n                />\r\n                <button \r\n                    type=\"button\"\r\n                    style={{float:\"right\", width:100}}\r\n                    onClick={handleCodeSwitch}\r\n                >\r\n                    인증요청\r\n                </button>\r\n            </div>\r\n            <button style={{float:\"right\"}} onClick={handlePhoneClose}>취소</button>\r\n        </>\r\n    )\r\n\r\n    //모달 인증코드입력\r\n    const phoneForm = (\r\n        <>\r\n            <div style={{width:\"100%\"}}>\r\n                <input \r\n                    value={codeInput}\r\n                    type='text'\r\n                    name=\"codeNum\"\r\n                    placeholder=\"인증번호\" \r\n                    onChange={phoneCodeChange}\r\n                    style={{border: \"1px solid\", width:300, height:30, float:\"left\"}}\r\n                />\r\n                <button \r\n                    type=\"button\" \r\n                    style={{width:100}}\r\n                    onClick={handleCodeSwitch}\r\n                >\r\n                    다시인증\r\n                </button>\r\n            </div>\r\n            <div style={{height:100,width:300}}>\r\n                <button style={{float:\"right\"}} onClick={handlePhoneCheck}>확인</button>\r\n                <button style={{float:\"right\"}} onClick={handlePhoneClose}>취소</button>\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n    // 신규 비밀번호 등록\r\n    const pwForm = (\r\n        <>\r\n            <p style={{textAlign:'left'}}>비밀번호 : </p>\r\n            <div style={{width:250, border:\"1px solid\", textAlign:'left'}}>\r\n                <p>기존 비밀번호</p>\r\n                <input value={oldPw} onChange={oldPwChange} style={{width:\"100%\"}} type=\"text\" placeholder=\"기존 비밀번호를 입력해주세요.\" />\r\n                <p>새로운 비밀번호</p>\r\n                <input value={newPw} onChange={newPwChange} style={{width:\"100%\"}} type=\"text\" placeholder=\"새로운 비밀번호를 입력해주세요.\" />\r\n                <input value={checkPw} onChange={checkPwChange} style={{width:\"100%\"}} type=\"text\" placeholder=\"다시 한번 입력해주세요.\" />\r\n                \r\n                \r\n                <button type=\"button\" onClick={handlePwClick}>취소</button>\r\n                <button onClick={validatePw}>확인</button>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    // 비밀번호 변경 전\r\n    const beforeChange = (\r\n        <>\r\n            <div style={{display:\"flex\"}}>\r\n                <p>비밀번호</p>\r\n                {agreeSign === false && (\r\n                    <div \r\n                    value={oldPw}\r\n                    type=\"text\" \r\n                    placeholder=\"비밀번호\" \r\n                    style={{border: \"1px solid\", width:100,height:30}} \r\n                    >\r\n                    {oldPw}\r\n                    </div>\r\n                )}\r\n                {agreeSign === true && (\r\n                    <div \r\n                    value={newPw}\r\n                    type=\"text\" \r\n                    placeholder=\"비밀번호\" \r\n                    style={{border: \"1px solid\", width:100,height:30}} \r\n                    >\r\n                    {newPw}\r\n                    </div>\r\n                )}\r\n                \r\n                <button type=\"button\" onClick={handlePwClick}>변경하기</button>\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n    //사용자 정보 수정 전\r\n    const provideInfo = (\r\n        <>\r\n            <div className=\"user-infoContent\">\r\n                <p>계정 이메일</p>\r\n                <div \r\n                    name=\"email\" \r\n                    value={userInfo.email}\r\n                    style={{border: \"1px solid\",height:30}}  \r\n                    placeholder=\"계정 이메일\" \r\n                >\r\n                    {userInfo.email}\r\n                </div>\r\n            </div>\r\n\r\n            <div  className=\"user-infoContent\"s>\r\n                <p>이름</p>\r\n                <div \r\n                    type=\"text\"\r\n                    name=\"name\" \r\n                    value={userInfo.name} \r\n                    style={{border: \"1px solid\", width:100,height:30}}  \r\n                    placeholder=\"이름\"\r\n                >\r\n                    {userInfo.name}\r\n                </div>\r\n            </div>\r\n\r\n            <div  className=\"user-infoContent\">\r\n                <p>생년월일</p>\r\n                <div \r\n                    name=\"birth\" \r\n                    value={userInfo.birth}\r\n                    style={{border: \"1px solid\", width:100,height:30}}  \r\n                    placeholder=\"생년월일\" \r\n                >\r\n                    {userInfo.birthday}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <p>비밀번호</p>\r\n                <div \r\n                    type=\"text\" \r\n                    placeholder=\"비밀번호\" \r\n                    style={{border: \"1px solid\", width:100,height:30}} \r\n                >\r\n                    {\"*******\"}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <p>전화번호</p>\r\n                <div \r\n                    type=\"text\" \r\n                    placeholder=\"전화번호\" \r\n                    style={{border: \"1px solid\", width:100, height:30}}\r\n                >\r\n                    {userInfo.phone}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <p>주소</p> \r\n                <div \r\n                    value={userInfo.address}\r\n                    type=\"text\" \r\n                    placeholder=\"주소\" \r\n                    style={{border: \"1px solid\",height:30}}\r\n                >\r\n                    {userInfo.address}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <p>상세주소</p> \r\n                <div \r\n                    value={userInfo.addressDetail}\r\n                    type=\"text\" \r\n                    placeholder=\"상세주소\" \r\n                    style={{border: \"1px solid\",width: 100,height:30}}\r\n                >\r\n                    {userInfo.addressDetail}\r\n                </div>\r\n            </div>\r\n\r\n            <a href=\"./myPage\"><button>마이페이지</button></a>\r\n            <button type=\"button\" onClick={handleClickEvent}>수정하기</button>\r\n        </>\r\n    )\r\n\r\n\r\n\r\n    //사용자 정보 수정 후\r\n    const modifiedInfo = (\r\n        <>\r\n            <div  className=\"user-infoContent\">\r\n                <p>계정 이메일</p>\r\n                <div \r\n                    name=\"email\" \r\n                    value={userInfo.email}\r\n                    style={{border: \"1px solid\",height:30}}  \r\n                    placeholder=\"계정 이메일\" \r\n                >\r\n                    {userInfo.email}\r\n                </div>\r\n            </div>\r\n\r\n            <div  className=\"user-infoContent\"s>\r\n                <p>이름</p>\r\n                <div \r\n                    type=\"text\"\r\n                    name=\"name\" \r\n                    value={userInfo.name} \r\n                    style={{border: \"1px solid\", width:100,height:30}}  \r\n                    placeholder=\"이름\"\r\n                >\r\n                    {userInfo.name}\r\n                </div>\r\n            </div>\r\n\r\n            <div  className=\"user-infoContent\">\r\n                <p>생년월일</p>\r\n                <div \r\n                    name=\"birth\" \r\n                    value={userInfo.birth}\r\n                    style={{border: \"1px solid\", width:100,height:30}}  \r\n                    placeholder=\"생년월일\" \r\n                >\r\n                    {userInfo.birthday}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <div>{passwordClick ? pwForm : beforeChange}</div>\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <p>전화번호</p>\r\n                <div \r\n                    type=\"text\" \r\n                    placeholder=\"전화번호\" \r\n                    style={{border: \"1px solid\", width:100, height:30}}\r\n                >\r\n                    {allow === true && (\r\n                        phoneInput\r\n                    )}\r\n                    {allow === false && (\r\n                        userInfo.phone\r\n                    )}\r\n                </div>\r\n                <PhoneModal type=\"button\" />\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <p>주소</p> \r\n                    <div \r\n                        type=\"text\" \r\n                        id=\"address\" \r\n                        name=\"address\"\r\n                        placeholder=\"주소\" \r\n                        value={isAddress}\r\n                        selected={isAddress}\r\n                        style={{border: \"1px solid\", maxWidth: 250}}\r\n                    >\r\n                        {allow === true && (\r\n                            isAddress\r\n                        )}\r\n                        {allow === false && (\r\n                            userInfo.address\r\n                        )}\r\n                    </div>\r\n                <AddresModal type=\"button\"/>\r\n            </div>\r\n            <div className=\"user-infoContent\">\r\n                <p>상세주소</p> \r\n                {addDetail === true && (\r\n                <>\r\n                    <input \r\n                        value={isAddressDetail}\r\n                        type=\"text\" \r\n                        placeholder=\"상세주소\" \r\n                        style={{border: \"1px solid\",width: 100,height:30}}\r\n                        onChange={addDetailChange}\r\n                    />\r\n                    <button onClick={handleAddDetailSwitch}>취소</button>\r\n                </>\r\n                )}\r\n                \r\n                {addDetail === false && (\r\n                <>\r\n                    <div \r\n                        value={userInfo.addressDetail}\r\n                        type=\"text\" \r\n                        placeholder=\"상세주소\" \r\n                        style={{border: \"1px solid\",width: 100,height:30}}\r\n                        onChange={addDetailChange}\r\n                    >\r\n                        {userInfo.addressDetail}\r\n                    </div>\r\n                    <button onClick={handleAddDetailSwitch}>입력하기</button>\r\n                </>\r\n                )}\r\n            </div>\r\n            <button onClick={handleClickEvent}>뒤로가기</button>\r\n            <button onClick={changeSubmit}>변경확인</button>\r\n        </>\r\n    )\r\n\r\n    //회원정보 진입시 첫화면\r\n    useEffect(()=>{\r\n        console.log(\"useEffect 들어옴\")\r\n        axios\r\n        .get(userInfomation,{headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(\"response 들어옴\")\r\n            console.log(response.data)\r\n            const userInfo = response.data\r\n            setUserInfo(userInfo)\r\n            console.log(\"userInfo.address\")\r\n            console.log(userInfo.address)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    },[])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>회원정보수정</h1>\r\n                <div \r\n                style={{display:\"flex\", justifyContent:\"center\",width:600, border:\"1px solid\", textAlign:\"right\"}}>\r\n                    <div style={{width:500, border:\"1px solid\", backgroundColor:\"lightGray\"}}>\r\n                        {!clickAction ? provideInfo : modifiedInfo}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* 모달 번호인증 확인 */}\r\n                <Modal \r\n                    show={phoneShow} \r\n                    data-toggle=\"modal\"\r\n                    onHide={handlePhoneClose}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>번호인증</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div style={{textAlign:\"center\"}}>\r\n                            <div style={{textAlign:\"center\"}}>\r\n                                <p >신규 번호</p>\r\n                                {sendClick ?  phoneForm : beforeChangePn}\r\n                            </div>\r\n                            <br />\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>   \r\n\r\n                {/* 모달 주소검색 확인 */}\r\n                <Modal \r\n                    show={addShow} \r\n                    data-toggle=\"modal\"\r\n                    onHide={handleAddClose}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>주소검색</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <DaumPostcode onComplete={handleComplete}/>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>   \r\n                {/* 모달 회원탈퇴여부 확인 */}\r\n                <RemoveModal type=\"button\" />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(UserInfo);","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\MyPage.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\ServiceCenter.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\Navbar.js",["219","220","221","222","223"],"import React, { useRef, useState } from 'react';\r\nimport Logout from '../log/Logout';\r\nimport authHeader from \"../../actions/userAction\"\r\nimport \"./navi.css\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Navbar = ({history},data) => {\r\n    const cartHistory = \"https://childsnack-test.appspot.com/_ah/api/cart/v1/getCartList\"\r\n\r\n    const [isSubmit, setIsSubmit] = useState(false)\r\n    //장바구니 버튼\r\n    const [cart, setCart] = useState(true)\r\n    \r\n    const navBar = useRef(null);\r\n    const logo = useRef(null);\r\n\r\n    const ticket = localStorage.getItem(\"user\")\r\n\r\n    //장바구니 버튼\r\n    const cartSwitch = () =>{\r\n        setCart(cart)\r\n        console.log(cart)\r\n    }\r\n\r\n\r\n    // const submitForm =()=> {\r\n    //     setIsSubmit(!isSubmit)\r\n    //     history.push(\"./login\")\r\n    // }\r\n\r\n    const query = window.location.search\r\n    // console.log(\"query\")\r\n    // console.log(query)\r\n    const urlParams = new URLSearchParams(query)\r\n    // console.log(\"urlParams\")\r\n    // console.log(urlParams)\r\n    const getId = urlParams.get('id')\r\n    // console.log(\"getId\")\r\n    // console.log(getId)\r\n\r\n\r\n\r\n\r\n\r\n    function scrollDown() {\r\n        if (navBar.current != null) {\r\n            // y scroll event\r\n            if (\r\n              document.body.scrollTop > 80 ||\r\n              document.documentElement.scrollTop > 80\r\n            ) {\r\n              navBar.current.style.height = '100px';\r\n              navBar.current.style.backgroundColor = 'rgba(0,0,0,0.85)';\r\n            } else {\r\n              navBar.current.style.height = '150px';\r\n              navBar.current.style.backgroundColor = 'rgba(0,0,0,0)';\r\n            }\r\n            // x scroll event\r\n            if (\r\n              document.body.scrollLeft > 0 ||\r\n              document.documentElement.scrollLeft > 0\r\n            ) {\r\n              const left =\r\n                document.body.scrollLeft === 0\r\n                  ? document.documentElement.scrollLeft\r\n                  : document.body.scrollLeft;\r\n      \r\n              navBar.current.style.left = `${0 - left}px`;\r\n            } else {\r\n              navBar.current.style.left = 0;\r\n            }\r\n          }\r\n    }\r\n\r\n    window.onscroll = () => {\r\n        scrollDown()\r\n    };\r\n\r\n    const handleCertificate =() =>{\r\n\r\n      if(cart === true){\r\n        if(ticket === null){\r\n          alert(\"로그인을 먼저 진행해주세요\")\r\n          history.push('./login')\r\n          return\r\n        }\r\n        axios\r\n        .get(cartHistory, {headers: authHeader()})\r\n        .then((response)=>{\r\n          console.log(\"장바구니 진입\")\r\n          console.log(response)\r\n\r\n            history.push(`./cart?id=+${cart}`)\r\n\r\n          // {data.map((cart)=>(\r\n          // ))\r\n        })\r\n        .catch((error)=>{\r\n          console.log(\"error log\")\r\n          console.log(error)\r\n        })\r\n        // .catch((error)=>{\r\n             \r\n        //       console.log(error.response.data.error.message)\r\n        //       alert(error.response.data.error.message)\r\n        //   })\r\n      }\r\n    }\r\n  \r\n  \r\n\r\n    return (\r\n        <>\r\n                <div className=\"nav-bar\" style={{width:\"100%\"}}>\r\n                    { ticket === null &&(\r\n                        <>\r\n                            <div style={{width:\"100%\"}}>\r\n                                <h1 style={{float:\"left\"}}>Before Login Page</h1>\r\n                                {/* <button style={{float:\"right\"}} onClick={submitForm}>로그인</button> */}\r\n                                <button type=\"button\" onClick={handleCertificate}>카트</button>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                    { ticket !== null &&(\r\n                        <>\r\n                            <div style={{width:\"100%\"}}>\r\n                                <h1 style={{float:\"left\"}}>After Login Page</h1>\r\n                                <div style={{float:\"right\", display:\"flex\"}}>\r\n                                    {/* <a href=\"/mypage\"><button >마이페이지</button></a> */}\r\n                                    <Logout />\r\n                                    <button type=\"button\" onClick={handleCertificate}>카트</button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Navbar);","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\Products.js",["224","225","226"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\ProductDetail.js",["227","228","229","230","231","232"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\DownNav.js",["233"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\Review.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\Story.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\Event.js",["234"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\Cart.js",["235","236","237","238","239"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\Notice.js",["240"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport authHeader from \"../../actions/userAction\"\r\n\r\nconst Notice = () => {\r\n\r\n    const NoticeUrl = \"https://childsnack-test.appspot.com/_ah/api/notice/v1/getAllList\"\r\n    const [notice, setNotice] = useState([])\r\n\r\n    useEffect(()=>{\r\n        console.log(\"공지사항\")\r\n        axios\r\n        .get(NoticeUrl,{headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(response)\r\n            const ListArr = []\r\n            response.data.items.map((notice)=>ListArr.push({\r\n                id:notice.id,\r\n                title:notice.title,\r\n                img:notice.img,\r\n                date:notice.createDate\r\n            }))\r\n            setNotice(ListArr)\r\n            console.log(ListArr)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n            console.log(error.response)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>Notice</h1>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notice;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\OrderHistory.js",["241"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport authHeader from \"../../actions/userAction\"\r\n\r\nconst OrderHistory = () => {\r\n\r\n    const OrderURL = \"https://childsnack-test.appspot.com/_ah/api/order/v1/getList\"\r\n\r\n    const [orderList, setOrderList] = useState([])\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(OrderURL,{headers: authHeader()})\r\n        .then((response)=>{\r\n            const ListArr = []\r\n            response.data.items.map((order)=>ListArr.push({\r\n                id:order.orderId,\r\n                buyer:order.buyer,\r\n                receiver:order.receiver,\r\n                shipmentStatus:order.shipmentStatus,\r\n                shippingPrice:order.shippingPrice\r\n            }))\r\n            setOrderList(ListArr)\r\n            console.log(ListArr)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n            console.log(error.response)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>OrderHistory</h1>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderHistory;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\RvCenter.js",["242"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport authHeader from \"../../actions/userAction\"\r\n\r\nconst RvCenter = () => {\r\n\r\n    const reviewListURL = \"https://childsnack-test.appspot.com/_ah/api/review/v1/getAccountReviewList?count=3&startCursor=0\"\r\n    const userReviewURL = \"https://childsnack-test.appspot.com/_ah/api/review/v1/getReviewList?count=5&startCursor=0\"\r\n\r\n    const [reviews,setReviews]= useState([])\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(reviewListURL,{headers: authHeader()})\r\n        .then((response)=>{\r\n            const ListArr = []\r\n            response.data.map((reviews)=>ListArr.push({\r\n\r\n            }))\r\n            setReviews(ListArr)\r\n            console.log(reviews)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n            console.log(error.response)\r\n        })\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>Review manage Center</h1>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RvCenter;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\EventCenter.js",["243"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\Coupon.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\CartItem.js",["244","245"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CartItem = ({\r\n    data,\r\n    containerLayout,\r\n    contentLayout,\r\n    imgLayout\r\n}) => {\r\n    const cartUserItem = \"https://childsnack-test.appspot.com/_ah/api/cart/v1/get?id=\"\r\n\r\n    const query = window.location.search\r\n    const urlParams = new URLSearchParams(query)\r\n    const getId = urlParams.get('id')\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(\"카트 id로 불러오기\")\r\n        axios\r\n        .get(cartUserItem + getId)\r\n        .then((response)=>{\r\n            console.log(response)\r\n            //여기서 id를 못받아옴\r\n\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <p>carItem</p>   \r\n                <div>\r\n                    {data.map((cartItem)=>(\r\n                        <div className={containerLayout} alt={cartItem.id}>\r\n                            <div className={contentLayout}>\r\n                            <div style={{border:\"1px solid\",display: \"flex\"}}>\r\n                                <img className={imgLayout} src={cartItem.img} alt={cartItem.id} />\r\n                                {cartItem.content}\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CartItem;\r\nCartItem.propTypes ={\r\n    data: PropTypes.arrayOf(PropTypes.object),\r\n    containerLayout : PropTypes.string,\r\n    contentLayout : PropTypes.string,\r\n    imgLayout: PropTypes.string,\r\n}\r\n\r\nPropTypes.defaultType = {\r\n    data :[],\r\n    containerLayout : 'cartContainer',\r\n    contencontentLayouttCss : 'cartContent',\r\n    imgLayout : 'cartImg'\r\n}\r\n","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\Category.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\ReviewMore.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\StoryMore.js",["246"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\CategoryDetail.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\NewArrive.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\NewDetail.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\HotListMore.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\HotListDetail.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\StoryDetail.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\Payment.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\OrderNav.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\EventMore.js",["247","248","249","250","251","252","253","254","255"],{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":3,"column":8,"nodeType":"262","messageId":"263","endLine":3,"endColumn":17},{"ruleId":"260","severity":1,"message":"264","line":4,"column":8,"nodeType":"262","messageId":"263","endLine":4,"endColumn":20},{"ruleId":"260","severity":1,"message":"265","line":131,"column":11,"nodeType":"262","messageId":"263","endLine":131,"endColumn":24},{"ruleId":"260","severity":1,"message":"266","line":33,"column":19,"nodeType":"262","messageId":"263","endLine":33,"endColumn":27},{"ruleId":"260","severity":1,"message":"267","line":12,"column":8,"nodeType":"262","messageId":"263","endLine":12,"endColumn":17},{"ruleId":"260","severity":1,"message":"268","line":15,"column":11,"nodeType":"262","messageId":"263","endLine":15,"endColumn":25},{"ruleId":"260","severity":1,"message":"269","line":16,"column":11,"nodeType":"262","messageId":"263","endLine":16,"endColumn":25},{"ruleId":"260","severity":1,"message":"270","line":18,"column":11,"nodeType":"262","messageId":"263","endLine":18,"endColumn":22},{"ruleId":"260","severity":1,"message":"271","line":21,"column":11,"nodeType":"262","messageId":"263","endLine":21,"endColumn":27},{"ruleId":"260","severity":1,"message":"272","line":24,"column":11,"nodeType":"262","messageId":"263","endLine":24,"endColumn":18},{"ruleId":"260","severity":1,"message":"273","line":29,"column":12,"nodeType":"262","messageId":"263","endLine":29,"endColumn":20},{"ruleId":"260","severity":1,"message":"274","line":29,"column":22,"nodeType":"262","messageId":"263","endLine":29,"endColumn":33},{"ruleId":"260","severity":1,"message":"275","line":47,"column":12,"nodeType":"262","messageId":"263","endLine":47,"endColumn":23},{"ruleId":"260","severity":1,"message":"276","line":47,"column":25,"nodeType":"262","messageId":"263","endLine":47,"endColumn":39},{"ruleId":"260","severity":1,"message":"277","line":48,"column":12,"nodeType":"262","messageId":"263","endLine":48,"endColumn":21},{"ruleId":"260","severity":1,"message":"278","line":53,"column":11,"nodeType":"262","messageId":"263","endLine":53,"endColumn":20},{"ruleId":"260","severity":1,"message":"279","line":53,"column":23,"nodeType":"262","messageId":"263","endLine":53,"endColumn":35},{"ruleId":"260","severity":1,"message":"280","line":54,"column":11,"nodeType":"262","messageId":"263","endLine":54,"endColumn":21},{"ruleId":"260","severity":1,"message":"281","line":54,"column":23,"nodeType":"262","messageId":"263","endLine":54,"endColumn":36},{"ruleId":"260","severity":1,"message":"282","line":55,"column":11,"nodeType":"262","messageId":"263","endLine":55,"endColumn":22},{"ruleId":"260","severity":1,"message":"283","line":55,"column":24,"nodeType":"262","messageId":"263","endLine":55,"endColumn":38},{"ruleId":"260","severity":1,"message":"284","line":8,"column":10,"nodeType":"262","messageId":"263","endLine":8,"endColumn":21},{"ruleId":"260","severity":1,"message":"285","line":11,"column":12,"nodeType":"262","messageId":"263","endLine":11,"endColumn":20},{"ruleId":"260","severity":1,"message":"286","line":11,"column":22,"nodeType":"262","messageId":"263","endLine":11,"endColumn":33},{"ruleId":"260","severity":1,"message":"287","line":16,"column":11,"nodeType":"262","messageId":"263","endLine":16,"endColumn":15},{"ruleId":"260","severity":1,"message":"288","line":21,"column":11,"nodeType":"262","messageId":"263","endLine":21,"endColumn":21},{"ruleId":"260","severity":1,"message":"289","line":38,"column":11,"nodeType":"262","messageId":"263","endLine":38,"endColumn":16},{"ruleId":"260","severity":1,"message":"290","line":1,"column":15,"nodeType":"262","messageId":"263","endLine":1,"endColumn":23},{"ruleId":"260","severity":1,"message":"291","line":1,"column":25,"nodeType":"262","messageId":"263","endLine":1,"endColumn":34},{"ruleId":"260","severity":1,"message":"292","line":3,"column":8,"nodeType":"262","messageId":"263","endLine":3,"endColumn":19},{"ruleId":"260","severity":1,"message":"293","line":4,"column":8,"nodeType":"262","messageId":"263","endLine":4,"endColumn":18},{"ruleId":"260","severity":1,"message":"294","line":11,"column":11,"nodeType":"262","messageId":"263","endLine":11,"endColumn":18},{"ruleId":"260","severity":1,"message":"295","line":20,"column":12,"nodeType":"262","messageId":"263","endLine":20,"endColumn":20},{"ruleId":"260","severity":1,"message":"296","line":20,"column":22,"nodeType":"262","messageId":"263","endLine":20,"endColumn":33},{"ruleId":"260","severity":1,"message":"297","line":23,"column":11,"nodeType":"262","messageId":"263","endLine":23,"endColumn":21},{"ruleId":"298","severity":1,"message":"299","line":112,"column":7,"nodeType":"300","endLine":112,"endColumn":9,"suggestions":"301"},{"ruleId":"260","severity":1,"message":"290","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"302","line":3,"column":8,"nodeType":"262","messageId":"263","endLine":3,"endColumn":14},{"ruleId":"260","severity":1,"message":"303","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":16},{"ruleId":"260","severity":1,"message":"304","line":12,"column":11,"nodeType":"262","messageId":"263","endLine":12,"endColumn":20},{"ruleId":"260","severity":1,"message":"305","line":36,"column":11,"nodeType":"262","messageId":"263","endLine":36,"endColumn":23},{"ruleId":"260","severity":1,"message":"306","line":41,"column":11,"nodeType":"262","messageId":"263","endLine":41,"endColumn":25},{"ruleId":"298","severity":1,"message":"307","line":117,"column":7,"nodeType":"300","endLine":117,"endColumn":9,"suggestions":"308"},{"ruleId":"260","severity":1,"message":"309","line":8,"column":12,"nodeType":"262","messageId":"263","endLine":8,"endColumn":18},{"ruleId":"260","severity":1,"message":"310","line":9,"column":12,"nodeType":"262","messageId":"263","endLine":9,"endColumn":21},{"ruleId":"260","severity":1,"message":"311","line":8,"column":11,"nodeType":"262","messageId":"263","endLine":8,"endColumn":24},{"ruleId":"260","severity":1,"message":"312","line":8,"column":12,"nodeType":"262","messageId":"263","endLine":8,"endColumn":18},{"ruleId":"260","severity":1,"message":"290","line":2,"column":28,"nodeType":"262","messageId":"263","endLine":2,"endColumn":36},{"ruleId":"298","severity":1,"message":"299","line":31,"column":7,"nodeType":"300","endLine":31,"endColumn":9,"suggestions":"313"},{"ruleId":"260","severity":1,"message":"314","line":7,"column":11,"nodeType":"262","messageId":"263","endLine":7,"endColumn":21},{"ruleId":"260","severity":1,"message":"282","line":9,"column":11,"nodeType":"262","messageId":"263","endLine":9,"endColumn":22},{"ruleId":"260","severity":1,"message":"283","line":9,"column":24,"nodeType":"262","messageId":"263","endLine":9,"endColumn":38},{"ruleId":"260","severity":1,"message":"278","line":10,"column":11,"nodeType":"262","messageId":"263","endLine":10,"endColumn":20},{"ruleId":"260","severity":1,"message":"279","line":10,"column":23,"nodeType":"262","messageId":"263","endLine":10,"endColumn":35},{"ruleId":"260","severity":1,"message":"315","line":18,"column":12,"nodeType":"262","messageId":"263","endLine":18,"endColumn":15},{"ruleId":"260","severity":1,"message":"316","line":18,"column":17,"nodeType":"262","messageId":"263","endLine":18,"endColumn":23},{"ruleId":"298","severity":1,"message":"299","line":74,"column":7,"nodeType":"300","endLine":74,"endColumn":9,"suggestions":"317"},{"ruleId":"260","severity":1,"message":"318","line":85,"column":14,"nodeType":"262","messageId":"263","endLine":85,"endColumn":29},{"ruleId":"260","severity":1,"message":"319","line":94,"column":14,"nodeType":"262","messageId":"263","endLine":94,"endColumn":31},"no-native-reassign",["320"],"no-negated-in-lhs",["321"],"no-unused-vars","'testUtils' is defined but never used.","Identifier","unusedVar","'PasswordMask' is defined but never used.","'pwInputChange' is assigned a value but never used.","'setError' is assigned a value but never used.","'NewArrive' is defined but never used.","'productGetList' is assigned a value but never used.","'productGetItem' is assigned a value but never used.","'getMainList' is assigned a value but never used.","'getProReviewList' is assigned a value but never used.","'getList' is assigned a value but never used.","'itemInfo' is assigned a value but never used.","'setItemInfo' is assigned a value but never used.","'certificate' is assigned a value but never used.","'setCertificate' is assigned a value but never used.","'itemClick' is assigned a value but never used.","'eventMeal' is assigned a value but never used.","'setEventMeal' is assigned a value but never used.","'eventSnack' is assigned a value but never used.","'setEventSnack' is assigned a value but never used.","'eventCoupon' is assigned a value but never used.","'setEventCoupon' is assigned a value but never used.","'useDispatch' is defined but never used.","'isSubmit' is assigned a value but never used.","'setIsSubmit' is assigned a value but never used.","'logo' is assigned a value but never used.","'cartSwitch' is assigned a value but never used.","'getId' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'urlPropType' is defined but never used.","'authHeader' is defined but never used.","'cartUrl' is assigned a value but never used.","'cartList' is assigned a value but never used.","'setCartList' is assigned a value but never used.","'handleShow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getId'. Either include it or remove the dependency array.","ArrayExpression",["322"],"'Review' is defined but never used.","'Products' is defined but never used.","'updateUrl' is assigned a value but never used.","'productTimes' is assigned a value but never used.","'handleCountNum' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'makeCartelement'. Either include it or remove the dependency array.",["323"],"'notice' is assigned a value but never used.","'orderList' is assigned a value but never used.","'userReviewURL' is assigned a value but never used.","'events' is assigned a value but never used.",["324"],"'getAllList' is assigned a value but never used.","'wat' is assigned a value but never used.","'setWat' is assigned a value but never used.",["325"],"'makeMealElement' is defined but never used.","'makeCouponElement' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"326","fix":"330"},{"desc":"326","fix":"331"},"Update the dependencies array to be: [getId]",{"range":"332","text":"333"},"Update the dependencies array to be: [makeCartelement]",{"range":"334","text":"335"},{"range":"336","text":"333"},{"range":"337","text":"333"},[3624,3626],"[getId]",[3288,3290],"[makeCartelement]",[736,738],[2756,2758]]