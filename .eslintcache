[{"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\index.js":"1","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\App.js":"2","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reportWebVitals.js":"3","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Signin.js":"4","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Login.js":"5","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\Page.js":"6","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Home.js":"7","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ForgotId.js":"8","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ForgotPw.js":"9","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\userAction.js":"10","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\type.js":"11","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\util\\axios.js":"12","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\index.js":"13","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\userReducer.js":"14","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Logout.js":"15","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\hoc\\Auth.js":"16","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\hoc\\authHeader.js":"17","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\message.js":"18","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\validationInfo.js":"19"},{"size":795,"mtime":1612400059608,"results":"20","hashOfConfig":"21"},{"size":242,"mtime":1612164035326,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":11382,"mtime":1613005245329,"results":"24","hashOfConfig":"21"},{"size":3146,"mtime":1613005102274,"results":"25","hashOfConfig":"21"},{"size":852,"mtime":1612432112011,"results":"26","hashOfConfig":"21"},{"size":2281,"mtime":1612841529394,"results":"27","hashOfConfig":"21"},{"size":9542,"mtime":1613278353916,"results":"28","hashOfConfig":"21"},{"size":2747,"mtime":1612842032417,"results":"29","hashOfConfig":"21"},{"size":1919,"mtime":1612483802138,"results":"30","hashOfConfig":"21"},{"size":588,"mtime":1612431610864,"results":"31","hashOfConfig":"21"},{"size":262,"mtime":1612432301762,"results":"32","hashOfConfig":"21"},{"size":159,"mtime":1612428715181,"results":"33","hashOfConfig":"21"},{"size":2297,"mtime":1612436666190,"results":"34","hashOfConfig":"21"},{"size":1131,"mtime":1612759677624,"results":"35","hashOfConfig":"21"},{"size":1253,"mtime":1612430224432,"results":"36","hashOfConfig":"21"},{"size":253,"mtime":1612436602103,"results":"37","hashOfConfig":"21"},{"size":407,"mtime":1612431383358,"results":"38","hashOfConfig":"21"},{"size":3312,"mtime":1612863998305,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"uh50hp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\index.js",[],["80","81"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\App.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reportWebVitals.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Signin.js",["82"],"import React, { useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../actions/userAction';\r\nimport validate from './validationInfo';\r\nimport moment from 'moment';\r\nimport DatePicker from \"react-datepicker\";\r\nimport './login.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Modal, Button} from \"react-bootstrap\"\r\nimport DaumPostcode from 'react-daum-postcode';\r\n\r\nconst Signin = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [checkAgree, setCheckAgree] = useState(false);\r\n    const [signInput,setSignInput] = useState({\r\n            email:'',\r\n            password:'',\r\n            name:'',\r\n            phone:'',\r\n            gender:'',\r\n            pswcheck:'',\r\n            addressDetail:''\r\n        })\r\n\r\n    const {email,password,name, phone,gender,pswcheck,addressDetail} = signInput;\r\n    const [birthday, setBirthday] = useState(new Date());\r\n    const [isAddress, setIsAddress] = useState('');\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [error, setError] = useState({})\r\n\r\n    const handleShow = () => {setShow(true);}\r\n    const handleClose = () => {setShow(false);}\r\n\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.roadAddress;\r\n        let extraAddress = ''; \r\n\r\n        if (data.addressType === 'R') {\r\n            extraAddress += data.bname;\r\n            }  if (data.bname !== '') {\r\n            \r\n            if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setIsAddress(fullAddress)\r\n        setShow(false)\r\n    }\r\n\r\n\r\n    const handleCheckYn = ()=>{\r\n        setCheckAgree(!checkAgree)\r\n        setDisabled(false)\r\n    }\r\n\r\n    const handleInfoChange = (e) =>{  \r\n        const {value, name} = e.target;\r\n        setSignInput({\r\n            ...signInput,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault()\r\n        let body = {\r\n            email : email,\r\n            name : name,\r\n            address: isAddress,\r\n            addressDetail: addressDetail,\r\n            birthday : moment(birthday).format('YYMMDD'),\r\n            gender: gender,\r\n            phone : phone,\r\n            password : password,\r\n            pswcheck : pswcheck\r\n        };\r\n        // checkValidate를 등록하여 \r\n        // validation이 통과할 경우,다음 단계로 진입을 하는 형식\r\n\r\n        let checkValidate = validate(body);\r\n        if(!checkValidate.success){\r\n            alert(checkValidate.message.content);\r\n        }\r\n        console.log('진입 성공')\r\n        dispatch(registerUser(body))\r\n        .then((response)=>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            localStorage.getItem('user')\r\n            alert(\"정상가입 성공!\")\r\n            props.history.push(\"/login\")\r\n        })\r\n\r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    const LogModal = () => {\r\n        return (\r\n            <>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                주소 찾기\r\n            </Button>\r\n            <Modal \r\n                show={show} \r\n                data-toggle=\"modal\"\r\n                onHide={handleClose}\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <DaumPostcode onComplete={handleComplete}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                </Modal.Footer>\r\n            </Modal>   \r\n            </>\r\n        );\r\n    };\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"full-screen\">\r\n                <div className=\"outline\">\r\n                    <header><h2> Please Sign Account </h2></header>\r\n                    <div className=\"mid-area\">\r\n                        <div>\r\n                            <input \r\n                            className=\"sign-input\" \r\n                            id=\"email\"\r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            placeholder=\"아이디\" \r\n                            value={signInput.email} \r\n                            onChange={handleInfoChange} \r\n                            />\r\n                            {error.email && <p>{error.email}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input \r\n                            className=\"sign-input\" \r\n                            id=\"password\"\r\n                            name=\"password\" \r\n                            type=\"text\" \r\n                            placeholder=\"비밀번호\" \r\n                            value={signInput.password} \r\n                            onChange={handleInfoChange} \r\n                            />\r\n                            {error.password && <p>{error.password}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input \r\n                                className=\"sign-input\" \r\n                                id=\"pswcheck\"\r\n                                name=\"pswcheck\" \r\n                                type=\"text\" \r\n                                placeholder=\"비밀번호 확인\"\r\n                                value={signInput.pswcheck}\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                                {error.pswcheck && <p>{error.pswcheck}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input \r\n                                className=\"sign-input\" \r\n                                value={signInput.name} name=\"name\" \r\n                                type=\"text\" \r\n                                placeholder=\"이름\" \r\n                                onChange={handleInfoChange} \r\n                            />\r\n                                {error.name && <p>{error.name}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input \r\n                                className=\"sign-input\"\r\n                                value={signInput.phone}\r\n                                name=\"phone\"\r\n                                type=\"tel\"\r\n                                placeholder=\"휴대폰\"\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                                {error.phone && <p>{error.phone}</p>}\r\n                        </div>\r\n\r\n                        {/* 다음주소 API */}\r\n                        <div>\r\n                            <div style={{display:\"flex\"}}>\r\n                                <input \r\n                                    className=\"sign-input\" \r\n                                    type=\"text\" \r\n                                    id=\"address\" \r\n                                    name=\"address\"\r\n                                    placeholder=\"도로명주소\"\r\n                                    value={isAddress}\r\n                                    selected={isAddress}\r\n                                />\r\n                                <LogModal  type=\"button\" value=\"도로명주소 찾기\" />\r\n                                {error.address && <p>{error.address}</p>}\r\n                            </div>\r\n\r\n                            <input \r\n                                className=\"sign-input\" \r\n                                type=\"text\" \r\n                                id=\"addressDetail\" \r\n                                name=\"addressDetail\"\r\n                                placeholder=\"상세주소\" \r\n                                value={signInput.addressDetail}\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                            {error.addressDetail && <p>{error.addressDetail}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <DatePicker\r\n                                className=\"sign-input\"\r\n                                name=\"birthday\"\r\n                                value={birthday}\r\n                                selected={birthday}     \r\n                                onChange={date => setBirthday(date)}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div \r\n                            className=\"sign-input\"  \r\n                            style={{display:\"flex\", \r\n                            justifyContent:'center', \r\n                            alignItems:'center',\r\n                            backgroundColor:'white'\r\n                            }}   \r\n                        >\r\n                            <div>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    name=\"gender\" \r\n                                    value=\"male\" \r\n                                    onChange={handleInfoChange} \r\n                                />\r\n                                Male\r\n                            </div>\r\n                            \r\n                            <div>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    name=\"gender\" \r\n                                    value=\"female\" \r\n                                    onChange={handleInfoChange} \r\n                                />\r\n                                Female\r\n                            </div>\r\n                            {error.gender && <p>{error.gender}</p>}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div style={{display:\"flex\"}}>\r\n                        <input style={{width:30, height:30}} onClick={handleCheckYn} type=\"checkbox\" /> \r\n                        <p>개인정보 수집/이용에 동의합니다.</p>\r\n                    </div>\r\n\r\n                    <div style={{display:\"flex\", paddingLeft:50}}>\r\n                        <a href=\"/login\"><button >back to Login</button></a>\r\n\r\n                        {(checkAgree === true) && (\r\n                            <form onSubmit={onSubmit} style={{marginLeft:50}}>\r\n                                <button type=\"submit\" value=\"submit\" >Sign in</button>\r\n                            </form>\r\n                            )\r\n                        }\r\n                        {(checkAgree === false) && (\r\n                            <form style={{marginLeft:50}}>\r\n                                <button type=\"submit\" value=\"submit\" disabled={!disabled}>Sign in</button>\r\n                            </form>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Signin);\r\n\r\n\r\n","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Login.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\Page.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Home.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ForgotId.js",["83","84","85","86"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ForgotPw.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\userAction.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\type.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\util\\axios.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\index.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\userReducer.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Logout.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\hoc\\Auth.js",["87","88"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\hoc\\authHeader.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\message.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\validationInfo.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":33,"column":19,"nodeType":"95","messageId":"96","endLine":33,"endColumn":27},{"ruleId":"93","severity":1,"message":"97","line":1,"column":39,"nodeType":"95","messageId":"96","endLine":1,"endColumn":48},{"ruleId":"93","severity":1,"message":"98","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":17},{"ruleId":"93","severity":1,"message":"99","line":9,"column":11,"nodeType":"95","messageId":"96","endLine":9,"endColumn":20},{"ruleId":"93","severity":1,"message":"100","line":43,"column":21,"nodeType":"95","messageId":"96","endLine":43,"endColumn":31},{"ruleId":"93","severity":1,"message":"101","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":36,"column":8,"nodeType":"104","endLine":36,"endColumn":10,"suggestions":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'testUtils' is defined but never used.","'phoneCode' is assigned a value but never used.","'setSeconds' is assigned a value but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [dispatch]",{"range":"111","text":"112"},[1039,1041],"[dispatch]"]