[{"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\index.js":"1","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\App.js":"2","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reportWebVitals.js":"3","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Signin.js":"4","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Login.js":"5","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\Page.js":"6","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Home.js":"7","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ForgotId.js":"8","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ForgotPw.js":"9","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\userAction.js":"10","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\type.js":"11","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\util\\axios.js":"12","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\index.js":"13","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\userReducer.js":"14","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Logout.js":"15","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\hoc\\Auth.js":"16","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\hoc\\authHeader.js":"17","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\message.js":"18","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\validationInfo.js":"19","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\MyPage.js":"20","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\UserInfo.js":"21","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ServiceCenter.js":"22"},{"size":795,"mtime":1612400059608,"results":"23","hashOfConfig":"24"},{"size":242,"mtime":1613357374080,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":11533,"mtime":1613439611735,"results":"27","hashOfConfig":"24"},{"size":3396,"mtime":1613384054129,"results":"28","hashOfConfig":"24"},{"size":1197,"mtime":1613472600004,"results":"29","hashOfConfig":"24"},{"size":1231,"mtime":1613354026917,"results":"30","hashOfConfig":"24"},{"size":8572,"mtime":1613464148719,"results":"31","hashOfConfig":"24"},{"size":8259,"mtime":1613368030261,"results":"32","hashOfConfig":"24"},{"size":1466,"mtime":1613472166059,"results":"33","hashOfConfig":"24"},{"size":623,"mtime":1613472159760,"results":"34","hashOfConfig":"24"},{"size":262,"mtime":1612432301762,"results":"35","hashOfConfig":"24"},{"size":159,"mtime":1612428715181,"results":"36","hashOfConfig":"24"},{"size":590,"mtime":1613374341339,"results":"37","hashOfConfig":"24"},{"size":1117,"mtime":1613378034104,"results":"38","hashOfConfig":"24"},{"size":1253,"mtime":1612430224432,"results":"39","hashOfConfig":"24"},{"size":231,"mtime":1613384068155,"results":"40","hashOfConfig":"24"},{"size":407,"mtime":1612431383358,"results":"41","hashOfConfig":"24"},{"size":3314,"mtime":1613457451241,"results":"42","hashOfConfig":"24"},{"size":717,"mtime":1613472658208,"results":"43","hashOfConfig":"24"},{"size":24064,"mtime":1613472477053,"results":"44","hashOfConfig":"24"},{"size":251,"mtime":1613472558256,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"uh50hp",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\index.js",[],["95","96"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\App.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reportWebVitals.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Signin.js",["97"],"import React, { useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../actions/userAction';\r\nimport validate from './validationInfo';\r\nimport moment from 'moment';\r\nimport DatePicker from \"react-datepicker\";\r\nimport './login.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Modal, Button} from \"react-bootstrap\"\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport PasswordMask from 'react-password-mask';\r\n\r\nconst Signin = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [checkAgree, setCheckAgree] = useState(false);\r\n    const [signInput,setSignInput] = useState({\r\n            email:'',\r\n            password:'',\r\n            name:'',\r\n            phone:'',\r\n            gender:'',\r\n            pswcheck:'',\r\n            addressDetail:''\r\n        })\r\n\r\n    const {email,password,name, phone,gender,pswcheck,addressDetail} = signInput;\r\n    const [birthday, setBirthday] = useState(new Date());\r\n    const [isAddress, setIsAddress] = useState('');\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [error, setError] = useState({})\r\n\r\n    const handleShow = () => {setShow(true);}\r\n    const handleClose = () => {setShow(false);}\r\n\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.roadAddress;\r\n        let extraAddress = ''; \r\n\r\n        if (data.addressType === 'R') {\r\n            extraAddress += data.bname;\r\n            }  if (data.bname !== '') {\r\n            \r\n            if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setIsAddress(fullAddress)\r\n        setShow(false)\r\n    }\r\n\r\n\r\n    const handleCheckYn = ()=>{\r\n        setCheckAgree(!checkAgree)\r\n        setDisabled(false)\r\n    }\r\n\r\n    const handleInfoChange = (e) =>{  \r\n        const {value, name} = e.target;\r\n        setSignInput({\r\n            ...signInput,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault()\r\n        let body = {\r\n            email : email,\r\n            name : name,\r\n            address: isAddress,\r\n            addressDetail: addressDetail,\r\n            birthday : moment(birthday).format('YYMMDD'),\r\n            gender: gender,\r\n            phone : phone,\r\n            password : password,\r\n            pswcheck : pswcheck\r\n        };\r\n        // checkValidate를 등록하여 \r\n        // validation이 통과할 경우,다음 단계로 진입을 하는 형식\r\n\r\n        let checkValidate = validate(body);\r\n        if(!checkValidate.success){\r\n            alert(checkValidate.message.content);\r\n        }\r\n        console.log('진입 성공')\r\n        dispatch(registerUser(body))\r\n        .then((response)=>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            localStorage.getItem('user',JSON.stringify(response.payload))\r\n            alert(\"정상가입 성공!\")\r\n            props.history.push(\"/login\")\r\n        })\r\n\r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    const LogModal = () => {\r\n        return (\r\n            <>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                주소 찾기\r\n            </Button>\r\n            <Modal \r\n                show={show} \r\n                data-toggle=\"modal\"\r\n                onHide={handleClose}\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <DaumPostcode onComplete={handleComplete}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                </Modal.Footer>\r\n            </Modal>   \r\n            </>\r\n        );\r\n    };\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"full-screen\">\r\n                <div className=\"outline\">\r\n                    <header><h2> Please Sign Account </h2></header>\r\n                    <div className=\"mid-area\">\r\n                        <div>\r\n                            <input \r\n                                className=\"sign-input\" \r\n                                id=\"email\"\r\n                                name=\"email\" \r\n                                type=\"email\" \r\n                                placeholder=\"아이디\" \r\n                                value={signInput.email} \r\n                                onChange={handleInfoChange} \r\n                            />\r\n                            {error.email && <p>{error.email}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <PasswordMask \r\n                                className=\"sign-input\" \r\n                                id=\"password\"\r\n                                name=\"password\" \r\n                                type=\"text\" \r\n                                placeholder=\"비밀번호\" \r\n                                value={signInput.password} \r\n                                onChange={handleInfoChange} \r\n                            />\r\n                            {error.password && <p>{error.password}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <PasswordMask \r\n                                className=\"sign-input\" \r\n                                id=\"pswcheck\"\r\n                                name=\"pswcheck\" \r\n                                type=\"text\" \r\n                                placeholder=\"비밀번호 확인\"\r\n                                value={signInput.pswcheck}\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                                {error.pswcheck && <p>{error.pswcheck}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input \r\n                                className=\"sign-input\" \r\n                                value={signInput.name} name=\"name\" \r\n                                type=\"text\" \r\n                                placeholder=\"이름\" \r\n                                onChange={handleInfoChange} \r\n                            />\r\n                                {error.name && <p>{error.name}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input \r\n                                className=\"sign-input\"\r\n                                value={signInput.phone}\r\n                                name=\"phone\"\r\n                                type=\"tel\"\r\n                                placeholder=\"휴대폰\"\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                                {error.phone && <p>{error.phone}</p>}\r\n                        </div>\r\n\r\n                        {/* 다음주소 API */}\r\n                        <div>\r\n                            <div style={{display:\"flex\"}}>\r\n                                <input \r\n                                    className=\"sign-input\" \r\n                                    type=\"text\" \r\n                                    id=\"address\" \r\n                                    name=\"address\"\r\n                                    placeholder=\"도로명주소\"\r\n                                    value={isAddress}\r\n                                    selected={isAddress}\r\n                                />\r\n                                <LogModal type=\"button\" value=\"도로명주소 찾기\" />\r\n                                {error.address && <p>{error.address}</p>}\r\n                            </div>\r\n\r\n                            <input \r\n                                className=\"sign-input\" \r\n                                type=\"text\" \r\n                                id=\"addressDetail\" \r\n                                name=\"addressDetail\"\r\n                                placeholder=\"상세주소\" \r\n                                value={signInput.addressDetail}\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                            {error.addressDetail && <p>{error.addressDetail}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <DatePicker\r\n                                className=\"sign-input\"\r\n                                name=\"birthday\"\r\n                                value={birthday}\r\n                                selected={birthday}     \r\n                                onChange={date => setBirthday(date)}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div \r\n                            className=\"sign-input\"  \r\n                            style={{display:\"flex\", \r\n                            justifyContent:'center', \r\n                            alignItems:'center',\r\n                            backgroundColor:'white'\r\n                            }}   \r\n                        >\r\n                            <div>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    name=\"gender\" \r\n                                    value=\"male\" \r\n                                    onChange={handleInfoChange} \r\n                                />\r\n                                Male\r\n                            </div>\r\n                            \r\n                            <div>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    name=\"gender\" \r\n                                    value=\"female\" \r\n                                    onChange={handleInfoChange} \r\n                                />\r\n                                Female\r\n                            </div>\r\n                            {error.gender && <p>{error.gender}</p>}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div style={{display:\"flex\"}}>\r\n                        <input style={{width:30, height:30}} onClick={handleCheckYn} type=\"checkbox\" /> \r\n                        <p>개인정보 수집/이용에 동의합니다.</p>\r\n                    </div>\r\n\r\n                    <div style={{display:\"flex\", paddingLeft:50}}>\r\n                        <a href=\"/login\"><button >back to Login</button></a>\r\n\r\n                        {(checkAgree === true) && (\r\n                            <form onSubmit={onSubmit} style={{marginLeft:50}}>\r\n                                <button type=\"submit\" value=\"submit\" >Sign in</button>\r\n                            </form>\r\n                            )\r\n                        }\r\n                        {(checkAgree === false) && (\r\n                            <form style={{marginLeft:50}}>\r\n                                <button type=\"submit\" value=\"submit\" disabled={!disabled}>Sign in</button>\r\n                            </form>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Signin);\r\n\r\n\r\n","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Login.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\Page.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Home.js",["98","99","100"],"import React, { useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { logoutUser } from '../actions/userAction'\r\nimport Signin from './Signin';\r\nimport Logout from './Logout';\r\nimport Login from './Login';\r\n\r\nconst Home = () => {\r\n    const [isSubmit, setIsSubmit] = useState(true)\r\n\r\n    const submitForm =()=> {\r\n        setIsSubmit(isSubmit)\r\n    }\r\n\r\n    const makeLoginElement = (\r\n            <>\r\n                <h1>Please Login First</h1>\r\n                <a href=\"/login\"><button>로그인</button></a>\r\n            </>\r\n        )\r\n    \r\n\r\n    const makeIntoSiteElement = (\r\n            <>\r\n                <h1>hello</h1>\r\n                <a href=\"/mypage\"><button>마이페이지</button></a>\r\n                <a href=\"/logout\"><button>로그아웃</button></a>\r\n            </>\r\n        )\r\n\r\n    return (\r\n        <>\r\n            <div className=\"full-screen\">\r\n                {/* {isSubmit ? makeLoginElement : makeIntoSiteElement} */}\r\n                {\r\n                    submitForm ? makeLoginElement : makeIntoSiteElement\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Home);","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ForgotId.js",["101"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ForgotPw.js",["102","103"],"import axios from 'axios';\r\nimport React, { useState, useCallback} from 'react';\r\n// import { updateProfile } from '../actions/userAction';\r\nimport PasswordMask from 'react-password-mask';\r\n\r\n// https://childsnack-test.appspot.com/_ah/api/auth/v1/findPassword?email=\r\n\r\nconst searchPass = 'https://childsnack-test.appspot.com/_ah/api/user/v1/findPassword?email=';\r\nconst sendPassword = 'https://childsnack-test.appspot.com/_ah/api/user/v1/sendPassword';\r\n\r\nconst ForgotPw = () => {\r\n    //기본 입력항목\r\n    const [forgotPw, setForgotInfo] = useState({\r\n        email : '',\r\n        phone : ''\r\n    })\r\n    console.log(\"forgotPw\")\r\n    console.log(forgotPw)\r\n\r\n    //비밀번호 재설정 \r\n    const [pwNum,setPwNum] = useState('')\r\n    //인증번호\r\n    const [pwCodeNum, setPwCodeNum] = useState('')\r\n    //다음버튼\r\n    const [pwSwitchCheck, setPwSwitchCheck] = useState(false)\r\n    //인증요청 버튼\r\n    const [agreeCheck, setAgreeCheck] = useState(false)\r\n    //입력 받은 Auth\r\n    const [rqstPsAuth, setRqstPsAuth] = useState('')\r\n    //기본입력항목 input\r\n    const handleChange = useCallback((e) =>{  \r\n        const {value, name} = e.target;\r\n        \r\n        setForgotInfo({\r\n            ...forgotPw,\r\n            [name]:value\r\n        })\r\n    },[forgotPw])\r\n\r\n  \r\n      //다음버튼, 입력 받은 코드넘버 보내기\r\n      function handlePwCF(){\r\n        console.log(\"인증번호 수신 부분\")\r\n        console.log(\"pwCodeNum\")\r\n        console.log(pwCodeNum)\r\n        setPwSwitchCheck(!pwSwitchCheck)\r\n\r\n        if(pwCodeNum.length !== 6 && agreeCheck === false){\r\n            console.log(\"return 까지왔음\")\r\n            alert(\"정확한 수신인증번호를 입력해주세요.\")\r\n            return\r\n        }\r\n        else{\r\n            console.log(\"비밀번호 통과\")\r\n            setPwSwitchCheck(true)\r\n            setAgreeCheck(true)\r\n        }\r\n\r\n        axios\r\n        .post(sendPassword,{\r\n            authId : rqstPsAuth, \r\n            code : pwCodeNum, \r\n            email :  forgotPw.email\r\n        })\r\n\r\n        .then((response) =>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            if(response && response.data){\r\n                console.log(\"response.data\")\r\n                console.log(response.data)\r\n                setPwSwitchCheck(true)\r\n            }\r\n        })\r\n\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n\r\n    }\r\n\r\n    // const onSubmitPwChage =()=>{\r\n    //     console.log(\"pwSwitchCheck\")\r\n    //     console.log(pwSwitchCheck)\r\n    // }\r\n\r\n    //인증버튼 스위치\r\n    const handlePwCodeSwitch = (e) =>{\r\n        e.preventDefault()\r\n        setAgreeCheck(!agreeCheck)\r\n        console.log(\"agreeCheck\")\r\n        console.log(agreeCheck)\r\n        if(pwSwitchCheck === true){\r\n            console.log(\"통과\")\r\n        }else if (pwSwitchCheck === false && forgotPw.email==='' && forgotPw.phone === ''){\r\n            console.log(\"부합하지않음\")\r\n            alert(\"빈칸 내용을 정확히 입력해주세요\")\r\n            setPwSwitchCheck(false);\r\n            setAgreeCheck(false);\r\n            return\r\n        }\r\n        axios\r\n        .get(searchPass + forgotPw.email + '&phone=' + forgotPw.phone)\r\n        .then((response)=>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            if(response&& response.data){\r\n                const parseJason = JSON.parse(response.data.authId)\r\n                setRqstPsAuth(parseJason)\r\n                console.log(\"parseJason\")\r\n                console.log(parseJason)\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    //인증번호 inputChage\r\n    const inputPwCode =(e)=>{\r\n        setPwCodeNum(e.target.value)\r\n        console.log(\"pwCodeNum\")\r\n        console.log(pwCodeNum)\r\n    }\r\n\r\n  \r\n\r\n    //비밀번호 재설정 input\r\n    const pwInputChange = (e) =>{\r\n        setPwNum(e.target.value)\r\n        console.log(\"pwNum\")\r\n        console.log(pwNum)\r\n    }\r\n\r\n    console.log(\"pwSwitchCheck\")\r\n    console.log(pwSwitchCheck)\r\n\r\n    //\r\n    const makePwInput = () =>{\r\n        return (\r\n        <>\r\n            <div>\r\n                <input \r\n                // className=\"sign-input\" \r\n                id=\"email\"\r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"이메일계정\" \r\n                onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <input \r\n                // className=\"sign-input\"\r\n                name=\"phone\"\r\n                type=\"tel\"\r\n                placeholder=\"전화번호\"\r\n                onChange={handleChange}\r\n                />\r\n            </div>\r\n                {agreeCheck===true ? pressPwCertifi : notPressPwCertifi}\r\n            <button type=\"submit\"  onClick={handlePwCF} style={{width:\"100%\"}}>다음</button>\r\n        </>\r\n        )\r\n    }\r\n\r\n    const makePwChange = () =>{\r\n        return(\r\n        <>\r\n            {/* <div>\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"비밀번호\"\r\n                onChange={pwInputChange}\r\n                />\r\n\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"비밀번호 재입력\"\r\n                onChange={pwInputChange}\r\n                />\r\n            </div> */}\r\n\r\n            <div>\r\n                <p>등록하신 휴대전화 문자로 임시 비밀번호를 발송하였습니다.</p>\r\n                <p>다시 로그인 해주세요.</p>\r\n            </div>\r\n\r\n            <a href=\"/login\"><button type=\"button\" style={{width:\"100%\"}}>확인</button></a>\r\n        </>\r\n        )\r\n    }\r\n    \r\n    const notPressPwCertifi = (\r\n        <div>\r\n            <div style={{height:100}}>\r\n                <button type=\"button\" style={{float:\"right\"}} onClick={handlePwCodeSwitch}>인증요청</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const pressPwCertifi = (\r\n        <div>\r\n            <div style={{height:100}}>\r\n                <input\r\n                    // className=\"modal-input\"\r\n                    type='text'\r\n                    name=\"codeNum\"\r\n                    value={pwCodeNum}\r\n                    onChange={inputPwCode}\r\n                    placeholder=\"인증번호 입력\"\r\n                />\r\n               \r\n                <button \r\n                    type=\"submit\" \r\n                    onClick={handlePwCodeSwitch}\r\n                >\r\n                    다시인증\r\n                </button>\r\n\r\n                <div className=\"footer\">\r\n                    <div className=\"modal-timer\">\r\n                        {/* 인증번호가 발송되었습니다  */}\r\n                        {/* <div>(남은 시간 {minutes}:\r\n                        {seconds < 10 ? `0${seconds}` : seconds})\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" style={{float:\"right\"}} onClick={handlePwCodeSwitch}>뒤로</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n       <>\r\n            <div style={{display:'flex',justifyContent:'center', border:\"1px solid\"}}>\r\n                <div className=\"full-screen\">\r\n                    <div className=\"outline\">\r\n                    \r\n                        <h4 style={{display:'flex',justifyContent:'center'}}>\r\n                            Did you forgot own PW?\r\n                        </h4>\r\n\r\n                        <div className=\"mid-area\">\r\n                            {pwSwitchCheck === true ? makePwChange() : makePwInput()}\r\n                        </div>\r\n\r\n                        <div style={{display:'flex',justifyContent:'center'}}>\r\n                            <a href=\"/login\"><button>back to Login</button></a>\r\n                            <a href=\"/\"><button>back to Home</button></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </>\r\n    );\r\n};\r\n\r\nexport default ForgotPw;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\userAction.js",["104"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\type.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\util\\axios.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\index.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\userReducer.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\Logout.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\hoc\\Auth.js",["105","106"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\hoc\\authHeader.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\message.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\validationInfo.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\MyPage.js",["107"],"import React, { useState } from 'react';\r\nimport Logout from './Logout';\r\n\r\nconst MyPage = () => {\r\n    // const [btnClick, setBtnClick] = useState(false)\r\n    // const serveToMyPage = ()=>{\r\n    //     setBtnClick(!btnClick)\r\n    //     console.log(\"btnClick\")\r\n    //     console.log(btnClick)\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h1>Welcome to My Page</h1>\r\n            <a href=\"/userInfo\"><button type=\"button\">회원정보관리</button></a>\r\n            <a href=\"/serviceCenter\"><button>고객센터</button></a>\r\n            {/* <button type=\"submit\" onClick={serveToMyPage}>회원정보관리</button> */}\r\n            \r\n            <Logout />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyPage;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\UserInfo.js",["108","109","110"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\ServiceCenter.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":34,"column":19,"nodeType":"117","messageId":"118","endLine":34,"endColumn":27},{"ruleId":"115","severity":1,"message":"119","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":14},{"ruleId":"115","severity":1,"message":"120","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":14},{"ruleId":"115","severity":1,"message":"121","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":13},{"ruleId":"115","severity":1,"message":"122","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":17},{"ruleId":"115","severity":1,"message":"123","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":20},{"ruleId":"115","severity":1,"message":"124","line":131,"column":11,"nodeType":"117","messageId":"118","endLine":131,"endColumn":24},{"ruleId":"115","severity":1,"message":"125","line":1,"column":44,"nodeType":"117","messageId":"118","endLine":1,"endColumn":50},{"ruleId":"115","severity":1,"message":"126","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":36,"column":8,"nodeType":"129","endLine":36,"endColumn":10,"suggestions":"130"},{"ruleId":"115","severity":1,"message":"131","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"132","line":2,"column":37,"nodeType":"117","messageId":"118","endLine":2,"endColumn":48},{"ruleId":"115","severity":1,"message":"133","line":9,"column":10,"nodeType":"117","messageId":"118","endLine":9,"endColumn":23},{"ruleId":"115","severity":1,"message":"134","line":18,"column":11,"nodeType":"117","messageId":"118","endLine":18,"endColumn":19},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'Signin' is defined but never used.","'Logout' is defined but never used.","'Login' is defined but never used.","'testUtils' is defined but never used.","'PasswordMask' is defined but never used.","'pwInputChange' is assigned a value but never used.","'UPDATE' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'useState' is defined but never used.","'useCallback' is defined but never used.","'updateProfile' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},"Update the dependencies array to be: [dispatch]",{"range":"140","text":"141"},[1039,1041],"[dispatch]"]