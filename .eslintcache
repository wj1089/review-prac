[{"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\index.js":"1","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\App.js":"2","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reportWebVitals.js":"3","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\Page.js":"4","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\userAction.js":"5","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\type.js":"6","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\util\\axios.js":"7","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\index.js":"8","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\userReducer.js":"9","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\message.js":"10","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\validationInfo.js":"11","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\ForgotId.js":"12","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\ForgotPw.js":"13","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Logout.js":"14","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Login.js":"15","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Signin.js":"16","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\main\\Home.js":"17","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\UserInfo.js":"18","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\MyPage.js":"19","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\ServiceCenter.js":"20","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\Navbar.js":"21","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\Products.js":"22","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\ProductDetail.js":"23","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\DownNav.js":"24","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\Review.js":"25","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\Story.js":"26","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\Event.js":"27","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\Cart.js":"28","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\Notice.js":"29","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\OrderHistory.js":"30","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\RvCenter.js":"31","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\EventCenter.js":"32","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\Coupon.js":"33","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\CartItem.js":"34","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\Category.js":"35","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\ReviewMore.js":"36","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\StoryMore.js":"37","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\CategoryDetail.js":"38","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\NewArrive.js":"39","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\NewDetail.js":"40","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\HotListMore.js":"41","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\HotListDetail.js":"42","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\StoryDetail.js":"43","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\Payment.js":"44","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\OrderNav.js":"45","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\EventMore.js":"46","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\EventDetail.js":"47","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\CategoryMore.js":"48","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\CategoryMenu.js":"49","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\TotalProducts.js":"50","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\ChangeAdrs.js":"51","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\CouponList.js":"52","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\AddressItems.js":"53","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\AddressForm.js":"54","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\NewAddress.js":"55","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\AdrsManage.js":"56","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\CheckPw.js":"57","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\ChangeProfile.js":"58"},{"size":795,"mtime":1612400059608,"results":"59","hashOfConfig":"60"},{"size":299,"mtime":1613910750768,"results":"61","hashOfConfig":"60"},{"size":362,"mtime":499162500000,"results":"62","hashOfConfig":"60"},{"size":4276,"mtime":1614819577350,"results":"63","hashOfConfig":"60"},{"size":1692,"mtime":1614845816831,"results":"64","hashOfConfig":"60"},{"size":476,"mtime":1613552418461,"results":"65","hashOfConfig":"60"},{"size":262,"mtime":1613530887475,"results":"66","hashOfConfig":"60"},{"size":159,"mtime":1612428715181,"results":"67","hashOfConfig":"60"},{"size":590,"mtime":1614758119275,"results":"68","hashOfConfig":"60"},{"size":407,"mtime":1612431383358,"results":"69","hashOfConfig":"60"},{"size":3314,"mtime":1613457451241,"results":"70","hashOfConfig":"60"},{"size":8576,"mtime":1614755970698,"results":"71","hashOfConfig":"60"},{"size":8251,"mtime":1613713317918,"results":"72","hashOfConfig":"60"},{"size":1112,"mtime":1613910761620,"results":"73","hashOfConfig":"60"},{"size":3249,"mtime":1614820860181,"results":"74","hashOfConfig":"60"},{"size":16588,"mtime":1614757516831,"results":"75","hashOfConfig":"60"},{"size":17299,"mtime":1614731848225,"results":"76","hashOfConfig":"60"},{"size":7720,"mtime":1614846210637,"results":"77","hashOfConfig":"60"},{"size":1119,"mtime":1614590639210,"results":"78","hashOfConfig":"60"},{"size":251,"mtime":1613555049801,"results":"79","hashOfConfig":"60"},{"size":4046,"mtime":1614748469090,"results":"80","hashOfConfig":"60"},{"size":2016,"mtime":1613979207506,"results":"81","hashOfConfig":"60"},{"size":12290,"mtime":1614736646583,"results":"82","hashOfConfig":"60"},{"size":1655,"mtime":1613981670018,"results":"83","hashOfConfig":"60"},{"size":1110,"mtime":1613979507898,"results":"84","hashOfConfig":"60"},{"size":1004,"mtime":1613970420616,"results":"85","hashOfConfig":"60"},{"size":619,"mtime":1613984220446,"results":"86","hashOfConfig":"60"},{"size":11909,"mtime":1614758129867,"results":"87","hashOfConfig":"60"},{"size":1135,"mtime":1613914102927,"results":"88","hashOfConfig":"60"},{"size":1148,"mtime":1614132899793,"results":"89","hashOfConfig":"60"},{"size":1457,"mtime":1614739893748,"results":"90","hashOfConfig":"60"},{"size":990,"mtime":1613983754114,"results":"91","hashOfConfig":"60"},{"size":3978,"mtime":1614739722726,"results":"92","hashOfConfig":"60"},{"size":2000,"mtime":1614574063187,"results":"93","hashOfConfig":"60"},{"size":2360,"mtime":1614135934696,"results":"94","hashOfConfig":"60"},{"size":157,"mtime":1613979115340,"results":"95","hashOfConfig":"60"},{"size":1569,"mtime":1613970217190,"results":"96","hashOfConfig":"60"},{"size":1112,"mtime":1614141222478,"results":"97","hashOfConfig":"60"},{"size":2008,"mtime":1613972068042,"results":"98","hashOfConfig":"60"},{"size":1086,"mtime":1613960807207,"results":"99","hashOfConfig":"60"},{"size":1919,"mtime":1614038968514,"results":"100","hashOfConfig":"60"},{"size":1086,"mtime":1614038880978,"results":"101","hashOfConfig":"60"},{"size":1077,"mtime":1613970394475,"results":"102","hashOfConfig":"60"},{"size":9322,"mtime":1614733708485,"results":"103","hashOfConfig":"60"},{"size":595,"mtime":1614061075265,"results":"104","hashOfConfig":"60"},{"size":2451,"mtime":1614135674606,"results":"105","hashOfConfig":"60"},{"size":1101,"mtime":1614132560097,"results":"106","hashOfConfig":"60"},{"size":4907,"mtime":1614141162919,"results":"107","hashOfConfig":"60"},{"size":1013,"mtime":1614136012991,"results":"108","hashOfConfig":"60"},{"size":2395,"mtime":1614135673974,"results":"109","hashOfConfig":"60"},{"size":3510,"mtime":1614730304028,"results":"110","hashOfConfig":"60"},{"size":876,"mtime":1614737590269,"results":"111","hashOfConfig":"60"},{"size":1168,"mtime":1614661998248,"results":"112","hashOfConfig":"60"},{"size":9783,"mtime":1614854602196,"results":"113","hashOfConfig":"60"},{"size":4933,"mtime":1614662670477,"results":"114","hashOfConfig":"60"},{"size":6549,"mtime":1614853755539,"results":"115","hashOfConfig":"60"},{"size":3313,"mtime":1614820787473,"results":"116","hashOfConfig":"60"},{"size":22918,"mtime":1614854602464,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"uh50hp",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"120"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"120"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"120"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"120"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"120"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"120"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\index.js",[],["260","261"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\App.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reportWebVitals.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\Page.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\userAction.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\type.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\util\\axios.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\index.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\userReducer.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\message.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\validationInfo.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\ForgotId.js",["262"],"import React, {useCallback, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport testUtils from 'react-dom/test-utils';\r\n// import validate from './validationInfo';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst ForgotId = () => {\r\n    // const phoneCode =  \"https://childsnack-test.appspot.com/_ah/api/user/v1/getAuthNum?phone=%7bparam1%7d\";\r\n    const searchEmail = 'https://childsnack-test.appspot.com/_ah/api/user/v1/findEmail?phone=';\r\n    const sendEmail = 'https://childsnack-test.appspot.com/_ah/api/user/v1/sendEmail'\r\n    \r\n    // 기본 찾기항목\r\n    const [forgotInfo,setForgotInfo] = useState({\r\n        name : '',\r\n        phone : '',\r\n    })\r\n    console.log(\"forgotInfo\")\r\n    console.log(forgotInfo)\r\n    \r\n    // 코드 요청\r\n    const [rqustSwitch, setRqustSwitch] = useState(false)\r\n    // 입력받은 코드넘버\r\n    const [rqustAuth, setRqustAuth] = useState('')\r\n    // 입력한 코드넘버\r\n    const [codeNum, setCodeNum] = useState('')\r\n    //마지막 사용자가 찾은 아이디\r\n    const [userId, setUserId] = useState('')\r\n    console.log(\"rqustAuth\")\r\n    console.log(rqustAuth)\r\n\r\n    const [agreeRqst, setAgreeRqst] = useState(false)\r\n\r\n    // 최종확인\r\n    const [finalCheck, setFinalCheck] = useState(false)\r\n\r\n    // 아이디 보여주기\r\n    // const [showId, setShowId] = useState(false)\r\n    \r\n    // 타이머\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    const codeNumChange = (e) =>{\r\n        setCodeNum(e.target.value)\r\n        console.log(\"codeNumChange\")\r\n        console.log(e.target.value)\r\n    }\r\n    \r\n    const handleChange = useCallback((e) =>{  \r\n        const {value, name} = e.target;\r\n        \r\n        setForgotInfo({\r\n            ...forgotInfo,\r\n            [name]:value\r\n        })\r\n    },[forgotInfo])\r\n\r\n    // 인증번호 요청 버튼 클릭\r\n    const handleCodeSwitch = useCallback((e) =>{\r\n        e.preventDefault()\r\n        console.log(\"sending Auth number\")\r\n        console.log(rqustSwitch)\r\n\r\n        setRqustSwitch(!rqustSwitch);\r\n        if(rqustSwitch === true){\r\n            console.log(\"통과\")\r\n        }else if(rqustSwitch === false && forgotInfo.phone === '' && forgotInfo.name === ''){\r\n            console.log(\"부합하지않음\")\r\n            alert(\"빈칸 내용을 정확히 입력해주세요\")\r\n            setRqustSwitch(false);\r\n            return\r\n        }\r\n        axios\r\n        .get(searchEmail + forgotInfo.phone + '&name=' + forgotInfo.name)\r\n        .then((response)=>{\r\n            if(response && response.data){\r\n            const parseJson = JSON.parse(response.data.authId)\r\n            console.log(\"response.data\")\r\n            console.log(parseJson)\r\n            setRqustAuth(parseJson)\r\n            setRqustSwitch(true);\r\n            setMinutes(3);\r\n            console.log(rqustSwitch)\r\n        }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    },[forgotInfo.name, forgotInfo.phone, rqustSwitch])\r\n\r\n    //인증번호 입력후 완료 절차\r\n    function handleCFcode() {\r\n        console.log(\"일단 탔음\")\r\n        console.log(\"codeNum inside\")\r\n        console.log(codeNum)\r\n        if (codeNum.length !== 6 && agreeRqst === false) {\r\n            console.log(\"return까지 왔음\")\r\n            alert(\"정확한 수신인증번호를 입력해주세요.\")\r\n            return;\r\n        }\r\n        if (minutes === 0 && seconds === 0) {\r\n            return;\r\n        }\r\n        else {\r\n            console.log(\"통과\")\r\n            setRqustSwitch(true)\r\n            setAgreeRqst(true)\r\n        }\r\n        axios\r\n          .post(sendEmail,{\r\n            authId : rqustAuth, \r\n            code : codeNum, \r\n            phone : forgotInfo.phone, \r\n            name :  forgotInfo.name\r\n        } )\r\n          .then((response) => {\r\n            if(response && response.data){\r\n                const findId = response.data.email\r\n                setUserId(findId)\r\n            }\r\n            setAgreeRqst(true)\r\n            setFinalCheck(true)\r\n          })\r\n          .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n\r\n\r\n\r\n      }\r\n      \r\n    //인증번호 발송 후 입력과정\r\n    const pressCertiBtn = (\r\n        <>\r\n            <div>\r\n                <input\r\n                    // className=\"modal-input\"\r\n                    type='text'\r\n                    name=\"codeNum\"\r\n                    value={codeNum}\r\n                    onChange={codeNumChange}\r\n                />\r\n               \r\n                <button type=\"submit\" onClick={handleCodeSwitch}>다시인증</button>\r\n                <div className=\"footer\">\r\n                    <div className=\"modal-timer\">\r\n                        인증번호가 발송되었습니다 \r\n                        <div>(남은 시간 {minutes}:\r\n                        {seconds < 10 ? `0${seconds}` : seconds})\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" onClick={handleCFcode} style={{float:'right',width:'100%',backgroundColor:\"cyan\"}}>다음</button>\r\n            </div>\r\n        </>\r\n    )\r\n    //인증요청 발송 전\r\n    const notPressCertiBtn = (\r\n        <button onClick={handleCodeSwitch} style={{float:'right'}}> 인증요청 </button>\r\n    )\r\n\r\n    const makeInputElement = () =>{\r\n        return(\r\n            <>\r\n                <div>\r\n                    <h3 style={{display:'flex',justifyContent:'center'}}>\r\n                        Did you forgot own ID?\r\n                    </h3>\r\n                    <div className=\"mid-area\">\r\n                        <input\r\n                            className=\"sign-input\" \r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            type=\"text\" \r\n                            placeholder=\"사용자 이름 입력\" \r\n                            value={forgotInfo.name}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <input \r\n                            className=\"sign-input\"\r\n                            id=\"phone\"\r\n                            name=\"phone\"\r\n                            type=\"text\"\r\n                            placeholder=\"휴대폰번호 입력\"\r\n                            value={forgotInfo.phone}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{height:100}}>\r\n                        {rqustSwitch===true ? pressCertiBtn : notPressCertiBtn}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n   \r\n  \r\n    \r\n    \r\n    \r\n    //최종 아이디 보여지는부분\r\n    const makeReqElement = () =>{\r\n        return(\r\n            <>\r\n            <div>\r\n                <h3 style={{display:'flex',justifyContent:'center'}}>\r\n                    Did you forgot own ID?\r\n                </h3>\r\n                <div className=\"mid-area\" style={{height:150}}>\r\n                    <div>고객님의 아이디를 알려드립니다.</div>\r\n                    {userId}\r\n                </div>\r\n        </div>\r\n        </>\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const countdown = setInterval(() => {\r\n          if (Number(seconds) > 0) {\r\n            setSeconds(Number(seconds) - 1);\r\n          }\r\n          if (Number(seconds) === 0) {\r\n            if (Number(minutes) === 0) {\r\n              clearInterval(countdown);\r\n            } else {\r\n              setMinutes(Number(minutes) - 1);\r\n              setSeconds(59);\r\n            }\r\n          }\r\n        }, 1000);\r\n        return () => clearInterval(countdown);\r\n      }, [minutes, seconds]);\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <div style={{border:\"1px solid\"}}>\r\n                <div className=\"full-screen\">\r\n                    <div className=\"outline\">\r\n                        {finalCheck ? makeReqElement() : makeInputElement()}\r\n                        <div>\r\n                            <a href=\"/login\"><button>back to Login</button></a>\r\n                            <a href=\"/\"><button>back to Home</button></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgotId;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\ForgotPw.js",["263","264"],"import axios from 'axios';\r\nimport React, { useState, useCallback} from 'react';\r\n// import { updateProfile } from '../actions/userAction';\r\nimport PasswordMask from 'react-password-mask';\r\n\r\n// https://childsnack-test.appspot.com/_ah/api/auth/v1/findPassword?email=\r\n\r\nconst searchPass = 'https://childsnack-test.appspot.com/_ah/api/user/v1/findPassword?email=';\r\nconst sendPassword = 'https://childsnack-test.appspot.com/_ah/api/user/v1/sendPassword';\r\n\r\nconst ForgotPw = () => {\r\n    //기본 입력항목\r\n    const [forgotPw, setForgotInfo] = useState({\r\n        email : '',\r\n        phone : ''\r\n    })\r\n    console.log(\"forgotPw\")\r\n    console.log(forgotPw)\r\n\r\n    //비밀번호 재설정 \r\n    const [pwNum,setPwNum] = useState('')\r\n    //인증번호\r\n    const [pwCodeNum, setPwCodeNum] = useState('')\r\n    //다음버튼\r\n    const [pwSwitchCheck, setPwSwitchCheck] = useState(false)\r\n    //인증요청 버튼\r\n    const [agreeCheck, setAgreeCheck] = useState(false)\r\n    //입력 받은 Auth\r\n    const [rqstPsAuth, setRqstPsAuth] = useState('')\r\n    //기본입력항목 input\r\n    const handleChange = useCallback((e) =>{  \r\n        const {value, name} = e.target;\r\n        \r\n        setForgotInfo({\r\n            ...forgotPw,\r\n            [name]:value\r\n        })\r\n    },[forgotPw])\r\n\r\n  \r\n      //다음버튼, 입력 받은 코드넘버 보내기\r\n      function handlePwCF(){\r\n        console.log(\"인증번호 수신 부분\")\r\n        console.log(\"pwCodeNum\")\r\n        console.log(pwCodeNum)\r\n        setPwSwitchCheck(!pwSwitchCheck)\r\n\r\n        if(pwCodeNum.length !== 6 && agreeCheck === false){\r\n            console.log(\"return 까지왔음\")\r\n            alert(\"정확한 수신인증번호를 입력해주세요.\")\r\n            return\r\n        }\r\n        else{\r\n            console.log(\"비밀번호 통과\")\r\n            setPwSwitchCheck(true)\r\n            setAgreeCheck(true)\r\n        }\r\n\r\n        axios\r\n        .post(sendPassword,{\r\n            authId : rqstPsAuth, \r\n            code : pwCodeNum, \r\n            email :  forgotPw.email\r\n        })\r\n\r\n        .then((response) =>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            if(response && response.data){\r\n                console.log(\"response.data\")\r\n                console.log(response.data)\r\n                setPwSwitchCheck(true)\r\n            }\r\n        })\r\n\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n\r\n    }\r\n\r\n    // const onSubmitPwChage =()=>{\r\n    //     console.log(\"pwSwitchCheck\")\r\n    //     console.log(pwSwitchCheck)\r\n    // }\r\n\r\n    //인증버튼 스위치\r\n    const handlePwCodeSwitch = (e) =>{\r\n        e.preventDefault()\r\n        setAgreeCheck(!agreeCheck)\r\n        console.log(\"agreeCheck\")\r\n        console.log(agreeCheck)\r\n        if(pwSwitchCheck === true){\r\n            console.log(\"통과\")\r\n        }else if (pwSwitchCheck === false && forgotPw.email==='' && forgotPw.phone === ''){\r\n            console.log(\"부합하지않음\")\r\n            alert(\"빈칸 내용을 정확히 입력해주세요\")\r\n            setPwSwitchCheck(false);\r\n            setAgreeCheck(false);\r\n            return\r\n        }\r\n        axios\r\n        .get(searchPass + forgotPw.email + '&phone=' + forgotPw.phone)\r\n        .then((response)=>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            if(response&& response.data){\r\n                const parseJason = JSON.parse(response.data.authId)\r\n                setRqstPsAuth(parseJason)\r\n                console.log(\"parseJason\")\r\n                console.log(parseJason)\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    //인증번호 inputChage\r\n    const inputPwCode =(e)=>{\r\n        setPwCodeNum(e.target.value)\r\n        console.log(\"pwCodeNum\")\r\n        console.log(pwCodeNum)\r\n    }\r\n\r\n  \r\n\r\n    //비밀번호 재설정 input\r\n    const pwInputChange = (e) =>{\r\n        setPwNum(e.target.value)\r\n        console.log(\"pwNum\")\r\n        console.log(pwNum)\r\n    }\r\n\r\n    console.log(\"pwSwitchCheck\")\r\n    console.log(pwSwitchCheck)\r\n\r\n    const makePwInput = () =>{\r\n        return (\r\n        <>\r\n            <div>\r\n                <input \r\n                // className=\"sign-input\" \r\n                id=\"email\"\r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"이메일계정\" \r\n                onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <input \r\n                // className=\"sign-input\"\r\n                name=\"phone\"\r\n                type=\"tel\"\r\n                placeholder=\"전화번호\"\r\n                onChange={handleChange}\r\n                />\r\n            </div>\r\n                {agreeCheck===true ? pressPwCertifi : notPressPwCertifi}\r\n            <button type=\"submit\"  onClick={handlePwCF} style={{width:\"100%\"}}>다음</button>\r\n        </>\r\n        )\r\n    }\r\n\r\n    const makePwChange = () =>{\r\n        return(\r\n        <>\r\n            {/* <div>\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"비밀번호\"\r\n                onChange={pwInputChange}\r\n                />\r\n\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"비밀번호 재입력\"\r\n                onChange={pwInputChange}\r\n                />\r\n            </div> */}\r\n\r\n            <div>\r\n                <p>등록하신 휴대전화 문자로 임시 비밀번호를 발송하였습니다.</p>\r\n                <p>다시 로그인 해주세요.</p>\r\n            </div>\r\n\r\n            <a href=\"/login\"><button type=\"button\" style={{width:\"100%\"}}>확인</button></a>\r\n        </>\r\n        )\r\n    }\r\n    \r\n    const notPressPwCertifi = (\r\n        <div>\r\n            <div style={{height:100}}>\r\n                <button type=\"button\" style={{float:\"right\"}} onClick={handlePwCodeSwitch}>인증요청</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const pressPwCertifi = (\r\n        <div>\r\n            <div style={{height:100}}>\r\n                <input\r\n                    // className=\"modal-input\"\r\n                    type='text'\r\n                    name=\"codeNum\"\r\n                    value={pwCodeNum}\r\n                    onChange={inputPwCode}\r\n                    placeholder=\"인증번호 입력\"\r\n                />\r\n               \r\n                <button \r\n                    type=\"submit\" \r\n                    onClick={handlePwCodeSwitch}\r\n                >\r\n                    다시인증\r\n                </button>\r\n\r\n                <div className=\"footer\">\r\n                    <div className=\"modal-timer\">\r\n                        {/* 인증번호가 발송되었습니다  */}\r\n                        {/* <div>(남은 시간 {minutes}:\r\n                        {seconds < 10 ? `0${seconds}` : seconds})\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" style={{float:\"right\"}} onClick={handlePwCodeSwitch}>뒤로</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n       <>\r\n            <div style={{display:'flex',justifyContent:'center', border:\"1px solid\"}}>\r\n                <div className=\"full-screen\">\r\n                    <div className=\"outline\">\r\n                    \r\n                        <h4 style={{display:'flex',justifyContent:'center'}}>\r\n                            Did you forgot own PW?\r\n                        </h4>\r\n\r\n                        <div className=\"mid-area\">\r\n                            {pwSwitchCheck === true ? makePwChange() : makePwInput()}\r\n                        </div>\r\n\r\n                        <div style={{display:'flex',justifyContent:'center'}}>\r\n                            <a href=\"/login\"><button>back to Login</button></a>\r\n                            <a href=\"/\"><button>back to Home</button></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </>\r\n    );\r\n};\r\n\r\nexport default ForgotPw;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Logout.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Login.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Signin.js",["265","266"],"import React, { useState,useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../../actions/userAction';\r\nimport validate from '../validationInfo';\r\nimport moment from 'moment';\r\nimport DatePicker from \"react-datepicker\";\r\nimport './login.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Modal, Button} from \"react-bootstrap\"\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport PasswordMask from 'react-password-mask';\r\n\r\nconst Signin = (props) => {\r\n\r\n\r\n    const searchPhone = 'https://childsnack-test.appspot.com/_ah/api/user/v1/getAuthNum?phone=';\r\n    const checkAuthNum = 'https://childsnack-test.appspot.com/_ah/api/user/v1/checkAuthNum'\r\n\r\n    const dispatch = useDispatch();\r\n    const [checkAgree, setCheckAgree] = useState(false);\r\n    const [signInput,setSignInput] = useState({\r\n            email:'',\r\n            password:'',\r\n            name:'',\r\n            phone:'',\r\n            gender:'',\r\n            pswcheck:'',\r\n            addressDetail:''\r\n        })\r\n    console.log(\"signInput\")\r\n    console.log(signInput)\r\n\r\n    const {email,password,name, phone,gender,pswcheck,addressDetail} = signInput;\r\n    const [birthday, setBirthday] = useState(new Date());\r\n    const [isAddress, setIsAddress] = useState('');\r\n\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [error, setError] = useState({})\r\n    const [show, setShow] = useState(false);\r\n\r\n \r\n    // 코드 요청\r\n    const [rqustSwitch, setRqustSwitch] = useState(false)\r\n    // 입력받은 코드넘버\r\n    const [rqustAuth, setRqustAuth] = useState('')\r\n    // 입력한 코드넘버\r\n    const [codeNum, setCodeNum] = useState('')\r\n    const [agreeRqst, setAgreeRqst] = useState(false)\r\n    // 최종확인\r\n    const [finalCheck, setFinalCheck] = useState(false)\r\n\r\n\r\n\r\n\r\n    const codeNumChange = (e) =>{\r\n        setCodeNum(e.target.value)\r\n        console.log(\"codeNum\")\r\n        console.log(codeNum)\r\n    }\r\n\r\n    const handleShow = () => {setShow(true);}\r\n    const handleClose = () => {setShow(false);}\r\n\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.roadAddress;\r\n        let extraAddress = ''; \r\n\r\n        if (data.addressType === 'R') {\r\n            extraAddress += data.bname;\r\n            }  if (data.bname !== '') {\r\n            \r\n            if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setIsAddress(fullAddress)\r\n        setShow(false)\r\n    }\r\n\r\n\r\n    const handleCheckYn = ()=>{\r\n        setCheckAgree(!checkAgree)\r\n        setDisabled(false)\r\n    }\r\n\r\n    const handleInfoChange = (e) =>{  \r\n        const {value, name} = e.target;\r\n        setSignInput({\r\n            ...signInput,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault()\r\n        let body = {\r\n            email : email,\r\n            name : name,\r\n            address: isAddress,\r\n            addressDetail: addressDetail,\r\n            birthday : moment(birthday).format('YYMMDD'),\r\n            gender: gender,\r\n            phone : phone,\r\n            password : password,\r\n            pswcheck : pswcheck\r\n        };\r\n        if(finalCheck === false){\r\n            alert(\"인증절차를 다시 진행해주세요.\")\r\n            return\r\n        }\r\n        // checkValidate를 등록하여 \r\n        // validation이 통과할 경우,다음 단계로 진입을 하는 형식\r\n\r\n        let checkValidate = validate(body);\r\n        if(!checkValidate.success){\r\n            alert(checkValidate.message.content);\r\n            return\r\n        }\r\n        console.log('진입 성공')\r\n        dispatch(registerUser(body))\r\n        .then((response)=>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            localStorage.getItem('user',JSON.stringify(response.payload))\r\n            alert(\"정상가입 성공!\")\r\n            props.history.push(\"/login\")\r\n        })\r\n\r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n    \r\n    // 인증번호 요청 버튼 클릭\r\n    const handleCodeSwitch = useCallback(() =>{\r\n        // e.preventDefault()\r\n        setRqustSwitch(true)\r\n        console.log(\"sending Auth number\")\r\n        console.log(rqustSwitch)\r\n        // setRqustSwitch(rqustSwitch);\r\n\r\n        if(signInput.phone.length > 11 || signInput.phone.length < 10){\r\n            alert(\"전화번호 입력이 틀림\")\r\n            setRqustSwitch(false);\r\n            console.log(rqustSwitch)\r\n            return\r\n        }else{\r\n            setRqustSwitch(true);\r\n        }\r\n        axios\r\n        .get(searchPhone+signInput.phone)\r\n        .then((response)=>{\r\n            if(response && response.data){\r\n            const parseJson = JSON.parse(response.data.authId)\r\n            console.log(\"response.data\")\r\n            console.log(parseJson)\r\n            setRqustAuth(parseJson)\r\n            // setRqustSwitch(true);\r\n            // setMinutes(3);\r\n            console.log(rqustSwitch)\r\n        }\r\n        })\r\n        // .catch((error)=>{\r\n        //     console.log(\"error log\")\r\n        //     console.log(error.response.data.error.message)\r\n        //     alert(error.response.data.error.message)\r\n        // })\r\n    },[])\r\n\r\n     //인증번호 입력후 완료 절차\r\n     function handleCFcode() {\r\n        if (codeNum.length !== 6 && agreeRqst === false) {\r\n            console.log(\"return까지 왔음\")\r\n            alert(\"인증번호 틀림\")\r\n            return;\r\n        }\r\n        // if (minutes === 0 && seconds === 0) {\r\n        //     return;\r\n        // }\r\n        // else {\r\n        //     console.log(\"통과\")\r\n        //     setRqustSwitch(true)\r\n        //     setAgreeRqst(true)\r\n        // }\r\n        axios\r\n          .post(checkAuthNum,{\r\n            authId : rqustAuth, \r\n            code : codeNum\r\n        } )\r\n          .then((response) => {\r\n            if(response && response.data.code === \"1\"){\r\n                console.log(\"완료\")\r\n                console.log(response)\r\n                alert(\"인증 성공!\")\r\n                setAgreeRqst(true)\r\n                setFinalCheck(true)\r\n            }\r\n          })\r\n          .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n    console.log(\"signInput\")\r\n    console.log(signInput)\r\n\r\n\r\n\r\n\r\n    // forgotInfo.name, forgotInfo.phone, rqustSwitch\r\n\r\n    const LogModal = () => {\r\n        return (\r\n            <>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                주소 찾기\r\n            </Button>\r\n            <Modal \r\n                show={show} \r\n                data-toggle=\"modal\"\r\n                onHide={handleClose}\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <DaumPostcode onComplete={handleComplete}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                </Modal.Footer>\r\n            </Modal>   \r\n            </>\r\n        );\r\n    };\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"full-screen\">\r\n                <div className=\"outline\">\r\n                    <header><h2> Please Sign Account </h2></header>\r\n                    <div className=\"mid-area\">\r\n                        <div>\r\n                            <input \r\n                                className=\"sign-input\" \r\n                                id=\"email\"\r\n                                name=\"email\" \r\n                                type=\"email\" \r\n                                placeholder=\"아이디\" \r\n                                value={signInput.email} \r\n                                onChange={handleInfoChange} \r\n                            />\r\n                            {error.email && <p>{error.email}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <PasswordMask \r\n                                className=\"sign-input\" \r\n                                id=\"password\"\r\n                                name=\"password\" \r\n                                type=\"text\" \r\n                                placeholder=\"비밀번호\" \r\n                                value={signInput.password} \r\n                                onChange={handleInfoChange} \r\n                            />\r\n                            {error.password && <p>{error.password}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <PasswordMask \r\n                                className=\"sign-input\" \r\n                                id=\"pswcheck\"\r\n                                name=\"pswcheck\" \r\n                                type=\"text\" \r\n                                placeholder=\"비밀번호 확인\"\r\n                                value={signInput.pswcheck}\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                                {error.pswcheck && <p>{error.pswcheck}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input \r\n                                className=\"sign-input\" \r\n                                value={signInput.name} \r\n                                name=\"name\" \r\n                                type=\"text\" \r\n                                placeholder=\"이름\" \r\n                                onChange={handleInfoChange} \r\n                            />\r\n                                {error.name && <p>{error.name}</p>}\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <div style={{}}>\r\n                            <input \r\n                                className=\"sign-input\"\r\n                                value={signInput.phone}\r\n                                name=\"phone\"\r\n                                type=\"tel\"\r\n                                placeholder=\"휴대폰\"\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                            <button type=\"button\" onClick={handleCodeSwitch}>인증하기</button>\r\n                            \r\n                            {rqustSwitch === false &&\r\n                                (\r\n                                    <div>\r\n\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            {rqustSwitch === true &&\r\n                                (\r\n                                    <>\r\n                                        <input \r\n                                            type='text'\r\n                                            name=\"codeNum\"\r\n                                            value={codeNum}\r\n                                            onChange={codeNumChange}\r\n                                            style={{width:\"100%\",border:\"1px solid\"}}\r\n                                            placeholder=\"인증번호를 입력해주세요.\"\r\n                                        />\r\n                                            \r\n                                        <div style={{width:\"100%\",border:\"1px solid\"}}>\r\n                                            <button type=\"button\" onClick={handleCodeSwitch}>다시전송</button>\r\n                                            <button type=\"submit\" onClick={handleCFcode}>확인</button>\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            {error.phone && <p>{error.phone}</p>}\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        {/* 다음주소 API */}\r\n                        <div>\r\n                            <div style={{display:\"flex\"}}>\r\n                                <input \r\n                                    className=\"sign-input\" \r\n                                    type=\"text\" \r\n                                    id=\"address\" \r\n                                    name=\"address\"\r\n                                    placeholder=\"도로명주소\"\r\n                                    value={isAddress}\r\n                                    selected={isAddress}\r\n                                />\r\n                                <LogModal type=\"button\" value=\"도로명주소 찾기\" />\r\n                                {error.address && <p>{error.address}</p>}\r\n                            </div>\r\n\r\n                            <input \r\n                                className=\"sign-input\" \r\n                                type=\"text\" \r\n                                id=\"addressDetail\" \r\n                                name=\"addressDetail\"\r\n                                placeholder=\"상세주소\" \r\n                                value={signInput.addressDetail}\r\n                                onChange={handleInfoChange}\r\n                            />\r\n\r\n                            {error.addressDetail && <p>{error.addressDetail}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <DatePicker\r\n                                className=\"sign-input\"\r\n                                name=\"birthday\"\r\n                                value={birthday}\r\n                                selected={birthday}     \r\n                                onChange={date => setBirthday(date)}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div \r\n                            className=\"sign-input\"  \r\n                            style={{display:\"flex\", \r\n                            justifyContent:'center', \r\n                            alignItems:'center',\r\n                            backgroundColor:'white'\r\n                            }}   \r\n                        >\r\n                            <div>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    name=\"gender\" \r\n                                    value=\"male\" \r\n                                    onChange={handleInfoChange} \r\n                                />\r\n                                Male\r\n                            </div>\r\n                            \r\n                            <div>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    name=\"gender\" \r\n                                    value=\"female\" \r\n                                    onChange={handleInfoChange} \r\n                                />\r\n                                Female\r\n                            </div>\r\n                            {error.gender && <p>{error.gender}</p>}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div style={{display:\"flex\"}}>\r\n                        <input style={{width:30, height:30}} onClick={handleCheckYn} type=\"checkbox\" /> \r\n                        <p>개인정보 수집/이용에 동의합니다.</p>\r\n                    </div>\r\n\r\n                    <div style={{display:\"flex\", paddingLeft:50}}>\r\n                        <a href=\"/login\"><button >back to Login</button></a>\r\n\r\n                        {(checkAgree === true) && (\r\n                            <form onSubmit={onSubmit} style={{marginLeft:50}}>\r\n                                <button type=\"submit\" value=\"submit\" >Sign in</button>\r\n                            </form>\r\n                            )\r\n                        }\r\n                        {(checkAgree === false) && (\r\n                            <form style={{marginLeft:50}}>\r\n                                <button type=\"submit\" value=\"submit\" disabled={!disabled}>Sign in</button>\r\n                            </form>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Signin);\r\n\r\n\r\n","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\main\\Home.js",["267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"import axios from 'axios';\r\nimport React,{ useEffect, useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Navbar from '../navi/Navbar';\r\nimport authHeader from \"../../actions/userAction\"\r\nimport Products from \"../products/Products\"\r\nimport DownNav from '../navi/DownNav';\r\nimport Review from '../review/Review';\r\nimport Story from '../story/Story';\r\nimport Event from '../event/Event'\r\nimport \"./home.css\"\r\nimport NewArrive from '../products/NewArrive';\r\n\r\nconst Home = () => {\r\n    const productGetList = \"https://childsnack-test.appspot.com/_ah/api/product/v1/getProductList?count=10&startCursor=0\";\r\n    const productGetItem = \"https://childsnack-test.appspot.com/_ah/api/product/v1/get?id=\"\r\n    const getAllList = \"https://childsnack-test.appspot.com/_ah/api/category/v1/getAllList\"\r\n    const getMainList = \"https://childsnack-test.appspot.com/_ah/api/category/v1/getMainList\"\r\n    \r\n    const getReviewList = \"https://childsnack-test.appspot.com/_ah/api/review/v1/getReviewList?count=10&startCursor=0\"\r\n    const getProReviewList = \"https://childsnack-test.appspot.com/_ah/api/review/v1/getProductReviewList?count=10&startCursor=0&productId=\"\r\n    \r\n    const getStoryList = \"https://childsnack-test.appspot.com/_ah/api/blogcontent/v1/list?count=5&startCursor=0\"\r\n    const getList = \"https://childsnack-test.appspot.com/_ah/api/category/v1/getList?id=\"\r\n    const eventBenerList = \"https://childsnack-test.appspot.com/_ah/api/event/v1/getAllEvent?type=1\"\r\n    const eventLink = \"https://storage.googleapis.com/igre-event/event%20landing.html\"\r\n\r\n    //임의로 넣은 product info\r\n    const [itemInfo, setItemInfo] = useState([])\r\n    //상품 전체 리스트\r\n    const [itemList,setItemList] = useState([])\r\n    //MD 추천 리스트\r\n    const [mdRecommend, setMdRecommend] = useState([])\r\n    //상품후기\r\n    const [userReview, setUserReview] = useState([])\r\n    //Tag 추천\r\n    const [tagRecommend, setTagRecommend] = useState([])\r\n    //중간베너\r\n    // const [mdRecommend, setMdRecommend] = useState([])\r\n    //인기상품\r\n    const [hotProduct, setHotProduct] = useState([])\r\n    //스토리\r\n    const [story, setStory] = useState([])\r\n    // const [mdRecommend, setMdRecommend] = useState([])\r\n\r\n    const [certificate, setCertificate] = useState('')\r\n    const [itemClick, setItemClick] = useState(false)\r\n\r\n\r\n    //이벤트\r\n    const [event, setEvent] = useState([])\r\n    const[eventMeal , setEventMeal ] = useState([])\r\n    const[eventSnack, setEventSnack] = useState([])\r\n    const[eventCoupon, setEventCoupon] = useState([])\r\n\r\n\r\n    //신상품 리스트 가져오기\r\n    useEffect(()=>{\r\n        axios\r\n        .get(getAllList)\r\n        .then((response)=>{\r\n            //신상품\r\n            if(response.data.items[7]){\r\n                const listArr = [];\r\n                response.data.items[7].products.map((item)=>listArr.push({\r\n                    id: item.productId,\r\n                    img: item.thumnail,\r\n                    content: makeGetItemElement(\r\n                        item.originClassification,\r\n                        item.name,\r\n                        item.retailPrice,\r\n                        item.price,\r\n                        )\r\n                }))\r\n                    setItemList(listArr)\r\n            }\r\n\r\n            //tag추천\r\n            if(response.data.items[0]){\r\n                const listArr = [];\r\n                response.data.items[0].products.map((item)=>listArr.push({\r\n                    id: item.productId,\r\n                    img: item.thumnail,\r\n                    tag : item.tags,\r\n                    content: makeTagRecomendElement(\r\n                        item.originClassification,\r\n                        item.name,\r\n                        item.retailPrice,\r\n                        item.price,\r\n                        )\r\n                }))\r\n                setTagRecommend(listArr)\r\n            }\r\n\r\n            //hotProduct추천\r\n            if(response.data.items[5]){\r\n                const listArr = [];\r\n                response.data.items[5].products.map((item)=>listArr.push({\r\n                    id: item.productId,\r\n                    img: item.thumnail,\r\n                    content: makeHotProductElement(\r\n                        item.originClassification,\r\n                        item.name,\r\n                        item.retailPrice,\r\n                        item.price,\r\n                        )\r\n                }))\r\n                setHotProduct(listArr)\r\n            }\r\n\r\n            //md 추천\r\n            if(response.data.items[1]){\r\n                const listArr = [];\r\n                response.data.items[1].products.map((item)=>listArr.push({\r\n                    id: item.productId,\r\n                    img: item.thumnail,\r\n                    content: makeMdRecomendElement(\r\n                        item.originClassification,\r\n                        item.name,\r\n                        item.retailPrice,\r\n                        item.price,\r\n                    )\r\n                }))\r\n                setMdRecommend(listArr)\r\n            }\r\n                setItemClick(true)\r\n            });\r\n    }, []);\r\n\r\n    // 상품 후기 불러오기\r\n    useEffect(()=>{\r\n        axios\r\n        .get(getReviewList, {headers: authHeader()})\r\n        .then((response)=>{\r\n            const listArr = [];\r\n            console.log(\"review response\")\r\n            console.log(response)\r\n            response.data.item.map((review)=>listArr.push({\r\n                id : review.id,\r\n                img : review.product.thumnail,\r\n                productId :review.product.productId,\r\n                content: makeReviewElement(\r\n                    review.product.name,\r\n                    review.point,\r\n                    review.description,\r\n                    review.shippingFee\r\n                )\r\n            }))\r\n            setUserReview(listArr)\r\n        })\r\n    },[])\r\n\r\n    // 상단 event bener\r\n    useEffect(()=>{\r\n        axios\r\n        .get(eventBenerList)\r\n        .then((response)=>{\r\n            // console.log(\"상단 event bener 내부 response\")\r\n            // console.log(response)\r\n            const listArr = [];\r\n            response.data.items.map((event)=>listArr.push({\r\n                id : event.id,\r\n                img : event.thumbnail\r\n            }))\r\n            setEvent(listArr)\r\n        })\r\n    },[])\r\n\r\n    \r\n\r\n    //스토리\r\n    // useEffect(()=>{\r\n    //     console.log(\"스토리\")\r\n    //     axios\r\n    //     .get(getStoryList, {headers: authHeader()})\r\n    //     .then((response)=>{\r\n    //         const listArr = [];\r\n    //         response.data.item.map((story)=>listArr.push({\r\n    //             id:story.id,\r\n    //             img:story.thumbnail,\r\n    //             title:story.title,\r\n    //             blogUrl:story.blogUrl\r\n    //         }))\r\n    //         setStory(listArr)\r\n    //     })\r\n    // },[])\r\n\r\n    //상품이용 후기 \r\n    function makeReviewElement (name,point,description){\r\n        return(\r\n            <>\r\n                <div className=\"reviewText\">\r\n                    <p className=\"reviewName\">{name}</p>\r\n                    <p className=\"reviewPoint\">{point}</p>\r\n                    <p className=\"reviewDescrip\">{description}</p>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    //신상품\r\n    function makeGetItemElement(name, originClassification,retailPrice,price) {\r\n        return (\r\n          <>\r\n            <div className=\"contentText\">\r\n              <p className=\"contentName\">{name}</p>\r\n              <p className=\"contentCompany\">{originClassification}</p>\r\n\r\n              <div style={{display:\"flex\", alignItems:\"center\"}}>\r\n                <p className=\"contentPrice\">{price}</p>\r\n                <p className=\"contentRetailPrice\">{retailPrice}</p>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n\r\n    ///MD추천\r\n    function makeMdRecomendElement(name,price,retailPrice) {\r\n        return (\r\n          <>\r\n            <div className=\"mdAdviceText\">\r\n                <p className=\"mdAdviceName\">{name}</p>\r\n                <div style={{display:\"flex\", alignItems:\"center\"}}>\r\n                    <p className=\"contentRetailPrice\">{retailPrice}</p>\r\n                    <p className=\"contentPrice\">{price}</p>\r\n                </div>\r\n                <div>\"더보기\"</div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n\r\n    //tag추천\r\n    function makeTagRecomendElement(name,price,retailPrice) {\r\n        return (\r\n          <>\r\n            <div className=\"tagRecomText\">\r\n                <p className=\"tagRecomName\">{name}</p>\r\n                <div style={{display:\"flex\", alignItems:\"center\"}}>\r\n                    <p className=\"contentRetailPrice\">{retailPrice}</p>\r\n                    <p className=\"contentPrice\">{price}</p>\r\n                </div>\r\n                <div>\"더보기\"</div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n\r\n    //hotProduct 추천\r\n    function makeHotProductElement(name,price,retailPrice) {\r\n        return (\r\n          <>\r\n            <div className=\"reviewText\">\r\n                <p className=\"reviewName\">{name}</p>\r\n                <div style={{display:\"flex\", alignItems:\"center\"}}>\r\n                    <p className=\"contentRetailPrice\">{retailPrice}</p>\r\n                    <p className=\"contentPrice\">{price}</p>\r\n                </div>\r\n                <div>\"더보기\"</div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n     \r\n    return (\r\n        <>\r\n            <div className=\"full-screen\">\r\n\r\n\r\n                <div className=\"screen-main\">\r\n                    <div className=\"main-center\">\r\n\r\n                    <div className=\"nav-header\">\r\n                        <Navbar />\r\n                    </div>\r\n                    {/* marginTop:\"60px\",  */}\r\n                        <div style={{\r\n                            width:\"100%\",\r\n                            // height:328.3,\r\n                            border:\"1px solid\", \r\n                            backgroundColor:\"lightgray\"}}>\r\n                            <div style={{display:\"flex\"}}>\r\n                                <Event \r\n                                    data={event}\r\n                                    eventImg=\"evt-img\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <body style={{ border:\"1px solid\"}}>\r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\", padding:\" 20px 0 0 20px\"}}>\r\n                                <h3>신상품</h3>\r\n                                <a href=\"./newArrive\">\r\n                                    <button type=\"button\" style={{float:'right'}} >더보기</button>\r\n                                </a>\r\n                            </div>\r\n                            <div style={{display:\"flex\", alignContent:\"center\",justifyContent:\"center\", height:400, border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <Products \r\n                                    data={itemList}\r\n                                    containerCss=\"itemContainer\"\r\n                                    contentCss=\"contentLayout\"\r\n                                    imgCss=\"imgLayout\"\r\n                                />\r\n                            </div>\r\n\r\n                            \r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\", padding:\" 20px 0 0 20px\"}}>\r\n                                <h3>MD 추천</h3>\r\n                                {/* <p style={{float:'right'}}>더보기</p> */}\r\n                            </div>\r\n                            <div style={{display:\"flex\", alignContent:\"center\",justifyContent:\"center\", height:400, border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <Products \r\n                                    data={mdRecommend}\r\n                                    containerCss=\"itemContainer\"\r\n                                    contentCss=\"contentLayout\"\r\n                                    imgCss=\"imgLayout\"\r\n                                />\r\n                            </div>\r\n\r\n                            \r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\", padding:\" 20px 0 0 20px\"}}>\r\n                                <h3>상품후기</h3>\r\n                            </div>\r\n                            <div style={{display:\"flex\", height:400, border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <Review \r\n                                    data={userReview}\r\n                                    reviewContainer=\"rw-containter\"\r\n                                    reviewcontent=\"rw-content\"\r\n                                    reviewImg= \"rw-img\"\r\n                                />\r\n                            </div>\r\n\r\n                            \r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\", padding:\" 20px 0 0 20px\"}}>\r\n                                <h3>#TAG 추천</h3>\r\n                            </div>\r\n                            <div style={{display:\"flex\", alignContent:\"center\",justifyContent:\"center\", height:400, border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <Products \r\n                                    data={tagRecommend}\r\n                                    containerCss=\"itemContainer\"\r\n                                    contentCss=\"contentLayout\"\r\n                                    imgCss=\"imgLayout\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div style={{width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\", padding:\" 20px 0 0 20px\"}}>\r\n                                <h3>중간 베너</h3>\r\n                            </div>\r\n                            <div style={{ display:\"flex\",border:\"1px solid\",justifyContent:\"center\"}}>\r\n                                {/* <Event \r\n                                    data={event}\r\n                                    eventImg=\"evt-img\"\r\n                                /> */}\r\n                                <a href={eventLink} style={{ border:\"1px solid\",width:150, height:150}}>이미지 링크</a>\r\n                            </div>\r\n\r\n\r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\", padding:\" 20px 0 0 20px\"}}>\r\n                                <h3>인기상품</h3>\r\n                                <a href=\"./hotListMore\">\r\n                                    <button type=\"button\" style={{float:'right'}} >더보기</button>\r\n                                </a>\r\n                                {/* <a href=\"./\"><p style={{float:'right'}}>더보기</p></a> */}\r\n                            </div>\r\n                            <div style={{ height:400,display:\"flex\", alignContent:\"center\",justifyContent:\"center\",border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <Products \r\n                                    data={hotProduct}\r\n                                    containerCss=\"itemContainer\"\r\n                                    contentCss=\"contentLayout\"\r\n                                    imgCss=\"imgLayout\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\", padding:\" 20px 0 0 20px\"}}>\r\n                                <h3>스토리</h3>\r\n                                <a href=\"./storyMore\">\r\n                                    <button type=\"button\" style={{float:'right'}} >더보기</button>\r\n                                </a>\r\n                            </div>\r\n                            <div style={{ height:400, border:\"1px solid\",textAlign:\"center\",display:\"flex\"}}>\r\n                                <Story\r\n                                    data={story}\r\n                                    containerCss=\"st-containter\"\r\n                                    contentCss=\"st-content\"\r\n                                    imgCss=\"st-img\"\r\n                                />\r\n                            </div>\r\n\r\n                            \r\n                            <div style={{ height:400, border:\"1px solid\",textAlign:\"center\"}}>\r\n                                {/* <div style={{ width:\"100%\", border:\"1px solid\",display:\"flex\", padding:\" 20px 0 0 20px\"}}> */}\r\n                                    <h3>하단 베너</h3>\r\n                                    <button>자세히보기</button>\r\n                                {/* </div> */}\r\n                            </div>\r\n\r\n                        </body>\r\n\r\n                        <footer style={{backgroundColor:\"lightBlue\", height:400, border:\"1px solid\"}}>\r\n                            <div>\r\n                                footer\r\n                            </div>\r\n                        </footer>\r\n\r\n                        <DownNav />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Home);\r\n\r\n","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\UserInfo.js",["286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\MyPage.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\ServiceCenter.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\Navbar.js",["308","309","310","311","312","313","314","315","316"],"import React, { useRef, useState,useEffect } from 'react';\r\nimport Logout from '../log/Logout';\r\nimport authHeader from \"../../actions/userAction\"\r\nimport \"./navi.css\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Navbar = ({history},data) => {\r\n\r\n    const cartHistory = \"https://childsnack-test.appspot.com/_ah/api/cart/v1/getCartList\"\r\n\r\n    const [isSubmit, setIsSubmit] = useState(false)\r\n    //장바구니 버튼\r\n    const [cart, setCart] = useState(true)\r\n    const navBar = useRef(null);\r\n    const logo = useRef(null);\r\n\r\n    const ticket = localStorage.getItem(\"user\")\r\n\r\n    //장바구니 버튼\r\n    // const cartSwitch = () =>{\r\n    //     setCart(cart)\r\n    //     console.log(cart)\r\n    // }\r\n\r\n    const query = window.location.search\r\n    const urlParams = new URLSearchParams(query)\r\n    const getId = urlParams.get('id')\r\n\r\n    function scrollDown() {\r\n      if (navBar.current != null) {\r\n          // y scroll event\r\n          if (\r\n            document.body.scrollTop > 80 ||\r\n            document.documentElement.scrollTop > 80\r\n          ) {\r\n            navBar.current.style.height = '100px';\r\n            navBar.current.style.backgroundColor = 'rgba(0,0,0,0.85)';\r\n          } else {\r\n            navBar.current.style.height = '150px';\r\n            navBar.current.style.backgroundColor = 'rgba(0,0,0,0)';\r\n          }\r\n          // x scroll event\r\n          if (\r\n            document.body.scrollLeft > 0 ||\r\n            document.documentElement.scrollLeft > 0\r\n          ) {\r\n            const left =\r\n              document.body.scrollLeft === 0\r\n                ? document.documentElement.scrollLeft\r\n                : document.body.scrollLeft;\r\n    \r\n            navBar.current.style.left = `${0 - left}px`;\r\n          } else {\r\n            navBar.current.style.left = 0;\r\n          }\r\n        }\r\n    }\r\n    window.onscroll = () => {\r\n        scrollDown()\r\n    };\r\n\r\n    const handleCertificate =() =>{\r\n      if(cart === true){\r\n        if(ticket === null){\r\n          alert(\"로그인을 먼저 진행해주세요\")\r\n          history.push('./login')\r\n          return\r\n        }else{\r\n          history.push(`./cart`)\r\n        }\r\n          // axios\r\n          // .get(cartHistory, {headers: authHeader()})\r\n          // .then((response)=>{\r\n          //     console.log(\"장바구니 진입\")\r\n          //     console.log(response)\r\n          //     const demo = response.data.items.map((item)=>(item.cartId))\r\n          //       history.push(`./cart?id=${demo.cartId}`)\r\n          //       console.log(demo)\r\n          // })\r\n          // .catch((error)=>{\r\n          //   console.log(\"error log\")\r\n          //   console.log(error)\r\n          // })\r\n      }\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <div className=\"nav-bar\" style={{width:\"100%\"}}>\r\n              { ticket === null &&(\r\n                  <>\r\n                      <div style={{width:\"100%\"}}>\r\n                          <h1 style={{float:\"left\"}}>Before Login Page</h1>\r\n                          {/* <button style={{float:\"right\"}} onClick={submitForm}>로그인</button> */}\r\n                          <button type=\"button\" onClick={handleCertificate}>카트</button>\r\n                      </div>\r\n                  </>\r\n              )}\r\n\r\n              { ticket !== null &&(\r\n                  <>\r\n                      <div style={{width:\"100%\"}}>\r\n                          <h1 style={{float:\"left\"}}>After Login Page</h1>\r\n                          <a href=\"./\"><button>매인화면</button></a>\r\n                          <div style={{float:\"right\", display:\"flex\"}}>\r\n                              {/* <a href=\"/mypage\"><button >마이페이지</button></a> */}\r\n                              <Logout />\r\n                              <button type=\"button\" onClick={handleCertificate}>카트</button>\r\n                          </div>\r\n                      </div>\r\n                  </>\r\n              )}\r\n          </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Navbar);","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\Products.js",["317","318","319"],"import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport urlPropType from 'url-prop-type';\r\nimport \"./product.css\"\r\n\r\n\r\nconst Products = ({\r\n    data,\r\n    containerCss,\r\n    contentCss,\r\n    imgCss\r\n}) => {\r\n\r\n    \r\n    // const [slideBtn, setSlideBtn] = useState({\r\n    //     left:false,\r\n    //     right:false\r\n    // })\r\n    \r\n    // const handleDirect = (e) =>{\r\n    //     // const [value, name] = e.target\r\n    //     // setSlideBtn({\r\n    //     //     ...slideBtn,\r\n    //     //     [name]:value\r\n    //     // })\r\n    //     setSlideBtn(!slideBtn)\r\n    //     console.log(\"slideBtn Click\")\r\n    //     console.log(slideBtn)\r\n    // }\r\n    \r\n\r\n    return (\r\n        <>\r\n            {/* <button type=\"button\" onClick={handleDirect}>left</button> */}\r\n            <div className=\"productZone\">\r\n                <div className=\"slide-area\">\r\n                    <div className=\"show-slide\">\r\n                        {data.map((item)=>(\r\n                            <a href={`/productDetail?id=${item.id}`}>\r\n                                <div className={containerCss}>\r\n                                    <div className={contentCss}>\r\n                                        <img className={imgCss} src={item.img} alt={item.id} />\r\n                                        {item.content}\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <button type=\"button\" onClick={handleDirect}>right</button> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n\r\nProducts.propTypes ={\r\n    data: PropTypes.arrayOf(PropTypes.object),\r\n    containerCss : PropTypes.string,\r\n    contentCss : PropTypes.string,\r\n    imgCss: PropTypes.string,\r\n}\r\n\r\nPropTypes.defaultType = {\r\n    data :[],\r\n    containerCss : 'itemContainer',\r\n    contentCss : 'contentLayout',\r\n    imgCss : 'imgLayout'\r\n}\r\n","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\ProductDetail.js",["320","321","322","323","324","325","326"],"import React,{useEffect, useState, useRef} from 'react';\r\nimport axios from 'axios'\r\nimport Navbar from \"../navi/Navbar\"\r\nimport authHeader from \"../../actions/userAction\"\r\nimport {Modal, Button} from \"react-bootstrap\"\r\n\r\n\r\nconst ProductDetail = ({history}) => {\r\n    \r\n    const productGetItem = \"https://childsnack-test.appspot.com/_ah/api/product/v1/get?id=\"\r\n    const addItemURL = \"https://childsnack-test.appspot.com/_ah/api/cart/v1/insert\"\r\n    const cartUrl = 'https://childsnack-test.appspot.com/_ah/api/cart/v1/getCartList';\r\n    const reviewUrl = \"/_ah/api/review/v1/getProductReviewList?productId=\"\r\n   \r\n\r\n    const query = window.location.search\r\n    const urlParams = new URLSearchParams(query)\r\n    const getId = urlParams.get('id')\r\n\r\n    const [toggle, setToggle] = useState(1)\r\n    const [count, setCount] = useState(0)\r\n    const [infoMenu, setInfoMenu] = useState([])\r\n    const [option, setOption] = useState([])\r\n    console.log(\"option\")\r\n    console.log(option)\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [onOptionBtn, setOnOptionBtn] = useState(false)\r\n\r\n    const handleShow = () => {setShow(true);}\r\n    const handleClose = () => {setShow(false);}\r\n\r\n    //count 숫자 parse int로 계산\r\n    const turnToNum = JSON.stringify(infoMenu.price)\r\n    const countNum = parseInt(count)\r\n    const calcItems = parseInt(turnToNum)*countNum;\r\n\r\n    console.log(countNum)\r\n\r\n    //뒤로가기\r\n    const goBack = () =>{\r\n        history.goBack();\r\n    }\r\n    //갯수증가\r\n    const increaseNum = ()=>{\r\n        setCount(count +1)\r\n    }\r\n    //갯수감소\r\n    const decreaseNum = ()=>{\r\n        setCount(count -1)\r\n        if(count <= 0){\r\n            setCount(0)\r\n        }\r\n    }\r\n    \r\n    const payModal =()=>{\r\n        setShow(true)\r\n    }\r\n    console.log(\"infoMenu.listArr\")\r\n    console.log(infoMenu.listArr)\r\n\r\n    //장바구니 담기\r\n    const addProduct = () =>{\r\n        console.log(\"추가하기\")\r\n        if(count === 0){\r\n            alert(\"옵션을 선택해주세요!\")\r\n            console.log(\"옵션을 선택해주세요!\")\r\n            return\r\n        }\r\n        axios\r\n        .post(addItemURL,{\r\n            cartItems: [ // 상품정보 목록\r\n            {\r\n                productId: infoMenu.altId,\r\n                optionId: infoMenu.listArr[0].optionId,\r\n                quantity: countNum\r\n            }\r\n            ],\r\n        },{ headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(\"추가버튼 useEffect\")\r\n            console.log(response)\r\n            history.push(\"./\")\r\n            alert(\"장바구니에 추가되었습니다.\")\r\n            setShow(false)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n            console.log(error.response.message)\r\n        })\r\n    }\r\n\r\n    const onClickDetailInfo = (index) =>{\r\n        console.log(index)\r\n        setToggle(index)\r\n    }\r\n\r\n    const handleOptionMenu=()=>{\r\n        setOnOptionBtn(!onOptionBtn)\r\n        console.log(onOptionBtn)\r\n        // if(onOptionBtn === true){\r\n        //     console.log(\"옵션선택\")\r\n        // }\r\n    }\r\n    const [selectOption, setSelectOption] = useState(false)\r\n\r\n    const chooseOption =()=>{\r\n        setSelectOption(!selectOption)\r\n        console.log(\"옵션 선택\")\r\n        console.log(selectOption)\r\n\r\n        // if(selectOption){\r\n        // }\r\n    }\r\n\r\n\r\n    //옵션 선택시\r\n    function makeOptionMenu(){\r\n        return(\r\n            <>\r\n                {option.map((review)=>(\r\n                    <div>\r\n                        <div className=\"optionName\">{review.name}</div> \r\n                        <div style={{display:\"flex\"}}>\r\n                            <button type=\"button\" onClick={decreaseNum}>-</button>\r\n                            <div>{count}</div>\r\n                            <button type=\"button\" onClick={increaseNum}>+</button>\r\n                            <button onClick={chooseOption}>선택</button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n    //상품 정보\r\n    useEffect(()=>{\r\n        axios\r\n        .get(productGetItem + getId)\r\n        .then((response)=>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            const baseUrl = response.data\r\n            const altId = baseUrl.productId\r\n            const headImg = baseUrl.detailImage\r\n          \r\n            const distributor = baseUrl.distributor\r\n            const description = baseUrl.description\r\n            const name = baseUrl.name\r\n            const price = baseUrl.price\r\n            const retailPrice = baseUrl.retailPrice\r\n            // const shippingFee = baseUrl.shippingCompany.shippingFee\r\n            const detailImg = baseUrl.detailImage\r\n            const exchangeInfo = baseUrl.exchangeInfo\r\n            const paymentInfo = baseUrl.paymentInfo\r\n            const shippingInfo = baseUrl.shippingInfo\r\n            const serviceInfo = baseUrl.serviceInfo\r\n            const addressInfo = baseUrl.madeInfo\r\n            \r\n            const listArr = []\r\n            //option map list\r\n            baseUrl.options.map((option)=>listArr.push({\r\n                optionId : option.optionId,\r\n                name : option.name\r\n            }))\r\n\r\n            setOption(listArr)\r\n            console.log(\"option\")\r\n            console.log(option)\r\n\r\n            const detailInfo = {altId,headImg,distributor,description,name,shippingInfo,addressInfo,listArr,\r\n                price,retailPrice,detailImg,exchangeInfo,paymentInfo,serviceInfo}\r\n            \r\n            setInfoMenu(detailInfo)\r\n        })\r\n    },[])\r\n\r\n    // 리뷰가져오기\r\n    // useEffect(()=>{\r\n    //     axios\r\n    //     .get(reviewUrl+getId+ &count=5&startCursor=0)\r\n    //     .then((response)=>{\r\n    //         console.log(response)\r\n    //     })\r\n    //     .catch((error)=>{\r\n    //         console.log(error)\r\n    //     })\r\n    // },[])\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Navbar />\r\n                <h4>Product Detail</h4>\r\n                <button type=\"button\" onClick={goBack}>뒤로가기</button>\r\n                <div \r\n                    style={{\r\n                    backgroundColor:\"lightYellow\",\r\n                    width:500, \r\n                    border:\"1px solid\"}}>\r\n                    <div style={{width:\"100%\", height:150, border:\"1px solid\", textAlign:\"center\"}}>\r\n                        <img src={infoMenu.headImg} alt={infoMenu.altId} />\r\n                    </div>\r\n                    <div style={{border:\"1px solid\"}}>\r\n                        <p>{infoMenu.distributor}</p>\r\n                        <b>{infoMenu.name}</b>\r\n                        <p>{infoMenu.description}</p>\r\n                        {/* <p>product name {infoMenu.name}</p> */}\r\n                        <div style={{display:\"flex\", fontSize:25}}>\r\n                            <b>{infoMenu.price}원</b>\r\n                            <p style={{textDecoration:\"line-through\",color:\"gray\"}}>\r\n                                {infoMenu.retailPrice}원\r\n                            </p>\r\n                        </div>\r\n                        {/* <div style={{display:\"flex\"}}>\r\n                            <button type=\"button\" onClick={handleOptionMenu}>옵션</button>\r\n                            <div>\r\n                                {onOptionBtn? makeOptionMenu(): <div>필요한 옵션을 선택해주세요</div>}\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        <div style={{display:\"flex\"}}>\r\n                            <div style={{width:50,border:\"1px solid\"}}>배송비{infoMenu.shippingFee}</div>\r\n                            <p>제주, 도서지역 추가 3,000원</p>\r\n                        {/* <p>{infoMenu.addressInfo}</p> */}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div style={{width:\"100%\"}}>\r\n                        <div style={{ display:\"flex\",width:\"100%\"}}>\r\n                            <div style={{width:100}}  type=\"button\" id=\"productExplain\" className={toggle === 1?\"able\":\"disable\"} onClick={()=>onClickDetailInfo(1)}>상품설명</div>\r\n                            <div style={{width:100}}  type=\"button\" id=\"productInfo\" className={toggle === 2?\"able\":\"disable\"} onClick={()=>onClickDetailInfo(2)}>상세정보</div>\r\n                            <div style={{width:100}}  type=\"button\" id=\"review\"  className={toggle === 3?\"able\":\"disable\"} onClick={()=>onClickDetailInfo(3)}>리뷰</div>\r\n                        </div>\r\n                        <div>\r\n                            {toggle === 1 &&(\r\n                                <>\r\n                                    <img src={infoMenu.detailImg} alt={infoMenu.productId} />\r\n                                </>\r\n                            )}\r\n                            {toggle === 2 &&(\r\n                                <>\r\n                                    <p><b>필수표기정보</b><br />\r\n                                    {infoMenu.serviceInfo}</p>\r\n\r\n                                    <p><b>문의관련정보</b><br />\r\n                                    {infoMenu.shippingInfo}</p>\r\n\r\n                                    <p><b>주문취소 안내</b><br />\r\n                                    {infoMenu.paymentInfo}</p>\r\n\r\n                                    <p><b>교환 및 환불안내</b><br />\r\n                                    {infoMenu.exchangeInfo}</p>\r\n                                </>\r\n                            )}\r\n                            {toggle === 3 &&(\r\n                                <>\r\n                                    <h1>리뷰</h1>\r\n                                    <div style={{ display:\"flex\",width:\"100%\",justifyContent:\"center\"}}>\r\n                                        <p>구매자평점({0})</p>\r\n                                        <div>point{0}</div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div>\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                {/* 모달 */}\r\n                <Button variant=\"primary\" onClick={payModal}>\r\n                    추가하기\r\n                </Button>\r\n                <Modal \r\n                    show={show} \r\n                    data-toggle=\"modal\"\r\n                    onHide={handleClose}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>상품선택</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div>\r\n                            {option.map((review)=>(\r\n                                <div style={{display:\"flex\", justifyContent:\"right\"}}>\r\n                                    <div className=\"optionName\">{review.name}</div> \r\n                                    <p>{infoMenu.price}</p>\r\n                                    <div style={{display:\"flex\"}}>\r\n                                        <button type=\"button\" onClick={decreaseNum}>-</button>\r\n                                        <div>{count}</div>\r\n                                        <button type=\"button\" onClick={increaseNum}>+</button>\r\n                                        {/* <button onClick={chooseOption}>선택</button> */}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            <p>총 금액 : {calcItems}원</p>\r\n                            <div style={{width:\"100%\", display:\"flex\", justifyContent:\"center\"}}>\r\n                                <button type=\"button\" onClick={addProduct}>장바구니 담기</button>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>   \r\n\r\n\r\n\r\n\r\n\r\n            </div>  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductDetail;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\DownNav.js",["327"],"import React, { useState }  from 'react';\r\n\r\nconst DownNav = () => {\r\n\r\n    const categoryStyle = {\r\n        width:\"95px\", \r\n        border:\"1px solid\", fontSize:15, \r\n        display:\"flex\", \r\n        justifyContent:\"center\",\r\n        alignItems:\"center\",\r\n        outline:\"none\"\r\n    }\r\n\r\n    // const [isSubmit, setIsSubmit] = useState(false)\r\n    // const submitForm =()=> {\r\n    //     setIsSubmit(!isSubmit)\r\n    //     props.history.push(\"./login\")\r\n    // }\r\n\r\n    const ticket = localStorage.getItem(\"user\")\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{width:\"100%\",bottom:0, position:'fixed', backgroundColor:\"lightsalmon\", height:150,display:\"flex\"}}>\r\n            { ticket === null &&(\r\n                <>\r\n                    <a href={'./login'} style={categoryStyle}><div>video</div></a>\r\n                    <a href={'./login'} style={categoryStyle}><div>home</div></a>\r\n                    <a href={'./login'} style={categoryStyle}><div>category</div></a>\r\n                    <a href={'./login'} style={categoryStyle}><div>my</div></a>\r\n                </>\r\n            )}\r\n\r\n            {ticket !== null &&(\r\n                <>\r\n                    <a href={'./video'} style={categoryStyle}><div type=\"button\">video</div></a>\r\n                    <a href={'./'} style={categoryStyle}><div type=\"button\">home</div></a>\r\n                    <a href={'./category'} style={categoryStyle}><div type=\"button\">category</div></a>\r\n                    <a href={'./mypage'} style={categoryStyle}><div type=\"button\">my</div></a>\r\n                </>\r\n            )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DownNav;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\Review.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\Story.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\Event.js",["328"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Review from '../review/Review';\r\n\r\nconst Event = ({\r\n    data,\r\n    eventImg\r\n}) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            {data.map((event)=>(\r\n                <a href={`./eventMore?id=${event.id}`}>\r\n                    <img className={eventImg} src={event.img} alt={event.id} />\r\n                </a>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Event;\r\nEvent.propTypes ={\r\n    data:PropTypes.arrayOf(PropTypes.object),\r\n    eventImg : PropTypes.string\r\n}\r\nPropTypes.defaultType={\r\n    data:[],\r\n    eventImg : \"evt-img\"\r\n}","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\Cart.js",["329","330","331","332","333","334","335","336","337","338","339","340"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport \"./cart.css\"\r\nimport authHeader from \"../../actions/userAction\"\r\n// import Products from \"../products/Products\"\r\n// import CartItem from './CartItem';\r\n// import OrderNav from '../navi/OrderNav';\r\n// import {Modal, Button} from \"react-bootstrap\"\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Cart = ({\r\n    history,\r\n    containerLayout,\r\n    contentLayout,\r\n    imgLayout}) => {\r\n    const cartUrl = 'https://childsnack-test.appspot.com/_ah/api/cart/v1/getCartList';\r\n    const orderUrl = \"https://childsnack-test.appspot.com/_ah/api/order/v1/insert\";\r\n    const updateUrl = \"https://childsnack-test.appspot.com/_ah/api/cart/v1/update\";\r\n    const receiverUrl = \"https://childsnack-test.appspot.com/_ah/api/receiver/v1/getReceiver\"\r\n    const removeCartUrl = \"https://childsnack-test.appspot.com/_ah/api/cart/v1/delete\";\r\n\r\n    const [count, setCount] = useState(1)\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => {setShow(true);}\r\n    const handleClose = () => {setShow(false);}\r\n    const [addMenu,setAddMenu] = useState(true)\r\n    const [removeMenu, setRemoveMenu] = useState(false)\r\n    const [sendOrder, setSendOrder] = useState(false)\r\n    const [checkAgree, setCheckAgree] = useState(false)\r\n\r\n    const [check, setCheck] = useState([])\r\n    const [cartList, setCartList] = useState([]) \r\n    const [receiver,setReceiver] = useState([])\r\n\r\n    const goBack = () =>{\r\n        history.push(\"./\");\r\n    }\r\n\r\n    const increaseNum = ()=>{\r\n        setCount(count +1)\r\n    }\r\n    const decreaseNum = ()=>{\r\n        setCount(count -1)\r\n        if(count <= 0){\r\n            setCount(0)\r\n        }\r\n    }\r\n   \r\n\r\n    //전체체크\r\n    const handleAllCheck = (e) =>{\r\n        setCheckAgree(false)\r\n        const checkInfo = e.target.checked\r\n        const wrapId = cartList.map((cart)=>cart.id);\r\n\r\n        if(checkInfo === true){\r\n            const total = check.indexOf(wrapId);\r\n            console.log(\"wrapId\")\r\n            console.log(wrapId)\r\n            setCheckAgree(true)\r\n                \r\n            if(total >= -1){\r\n                setCheck(wrapId)\r\n            }\r\n        }else{ \r\n            console.log(\"초기화\")\r\n            setCheck([])\r\n        }\r\n    }\r\n    console.log(\"check\")\r\n    console.log(check)\r\n\r\n    //개별체크\r\n    const handleCheckBox = (e) =>{\r\n        setCheckAgree(false)\r\n        const checkInfo = e.target.checked\r\n        const checkValue = e.target.name\r\n        if(checkInfo === true){\r\n            let result = check.includes(checkValue)\r\n            if(result === false){               \r\n                setCheck([...check, checkValue])\r\n                setCheckAgree(true)\r\n            }\r\n        }else{\r\n            let result = check.indexOf(checkValue)            \r\n            if(result > -1){\r\n                setCheck(check.filter(num => checkValue !== num))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const query = window.location.search\r\n    const urlParams = new URLSearchParams(query)\r\n    const getId = urlParams.get('id')\r\n    const wrapId = cartList.map((cart)=>cart.id);\r\n    \r\n    // console.clear()\r\n\r\n\r\n\r\n    //항목삭제\r\n    const removeItem = () =>{\r\n        // setRemoveMenu(true)\r\n        const deleteUrl = JSON.stringify(check)\r\n        console.log(\"deleteUrl\")\r\n        console.log(deleteUrl)\r\n        axios\r\n        .delete(\r\n            removeCartUrl,\r\n            {cartItems:[{id:deleteUrl}]},\r\n            {headers: authHeader()}\r\n            )\r\n        .then((response)=>{\r\n            console.log(\"삭제 들어왔음\")\r\n            console.log(response)\r\n            // window.location.reload();\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    //항목 추가하기 버튼\r\n    const handleAddItem = () =>{\r\n        setAddMenu(addMenu)\r\n        console.log(\"항목추가하러가기\")\r\n        console.log(addMenu)\r\n        history.push(\"./\")\r\n    } \r\n\r\n    \r\n    //기본 카트 아이템 항목들\r\n    useEffect(()=>{\r\n        console.log(\"카트에 진입\")\r\n        axios\r\n        .get(cartUrl, {headers: authHeader()})\r\n        .then((response)=>{\r\n            const listArr = []\r\n            response.data.items.map((cart)=>listArr.push({\r\n                id: cart.cartId,\r\n                // img: cart.product.thumnail,\r\n                productId:cart.product.productId,              \r\n                shippingFee : cart.product.shippingCompany.shippingFee,\r\n                optionId : cart.option.optionId,\r\n                optionName : cart.option.name,\r\n                quantity: cart.quantity,\r\n                product : cart.product\r\n            }))\r\n            setCartList(listArr)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"error\")\r\n            console.log(error)\r\n        })\r\n    },[])\r\n\r\n    \r\n\r\n    //주문버튼 클릭\r\n    const ClickOrder = (e)=>{\r\n        e.preventDefault()\r\n        console.log(\"주문버튼 클릭\")\r\n        console.log(\"localStorage에 들어감\")\r\n        const go = []\r\n        check.forEach(id=>{\r\n            const data = cartList.find(arr =>arr.id === id)\r\n            go.push(data)\r\n        })\r\n        localStorage.setItem(\"save\", JSON.stringify(go));\r\n        history.push(\"./payment\")\r\n    }\r\n\r\n    //수신자 정보\r\n    useEffect(()=>{\r\n        axios\r\n        .get(receiverUrl, {headers: authHeader()})\r\n        .then((response)=>{\r\n            const receiverArr = []\r\n            response.data.items.map((userInfo)=>receiverArr.push({\r\n                id: userInfo.receiverId,\r\n                name:userInfo.name,\r\n                address:userInfo.address,\r\n                addressDetail:userInfo.addressDetail,\r\n                phone:userInfo.phone\r\n            }))\r\n            setReceiver(receiverArr)\r\n        })\r\n    },[])\r\n\r\n    function makeCartelement(id,name,price,distributor,option,shippingFee){\r\n        return(\r\n            <>\r\n                <div>\r\n                    <p className=\"cartItemName\">{name}</p>\r\n                </div>\r\n\r\n                <div style={{display:\"flex\"}} \r\n                >\r\n                    {/* 아이템 개별체크박스 */}\r\n                    <input \r\n                        type=\"checkBox\" \r\n                        name = {id}\r\n                        checked={check.includes(id)}\r\n                        onChange={handleCheckBox}\r\n                        style={{width:30,height:30, border:\"1px solid\"}} \r\n                    />\r\n                    \r\n                    <div style={{float:\"right\", width:\"100%\", border:\"1px solid\"}}>\r\n                        <div style={{textAlign:\"right\"}}>\r\n                            <p className=\"cartItemFee\">{price}</p>\r\n                            <p>제주, 도서지역 추가 3,000원(개별 연락)</p>\r\n                        </div>\r\n                        {/* style={{display:\"flex\"}} */}\r\n                        <div >\r\n                            <p className=\"cartProductName\">{distributor}</p>\r\n\r\n                            <div style={{display:\"flex\"}}>\r\n                                <div>옵션 : </div>\r\n                                <h4 className=\"carItemIngred\">{option.name}</h4>\r\n                            </div>\r\n                            \r\n                            <div style={{display:\"flex\"}}>\r\n                                <button type=\"button\" onClick={decreaseNum}>-</button>\r\n                                <div>{count}</div>\r\n                                <button type=\"button\" onClick={increaseNum}>+</button>\r\n                            </div>\r\n\r\n                            {/* <p>가격 : {price}</p>\r\n                            <p>배송비 : {shippingFee}</p> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{height: 600,alignItems: \"center\"}}>\r\n            <div style={{width:500, border:\"1px solid\"}}>\r\n                <div style={{display:\"flex\"}}>\r\n                    <button onClick={goBack}>뒤로</button>\r\n                    <p>장바구니</p>\r\n                </div>\r\n                <div style={{width:\"100%\", border:\"1px solid\"}}>\r\n                    <div style={{display:\"flex\", width:\"100%\", border:\"1px solid\"}}>\r\n                        \r\n                        \r\n                        {/* 장바구니 클릭 */}\r\n                        <div style={{display:\"flex\",alignItems:\"center\", float:\"right\", width:\"100%\"}}>\r\n                            <input \r\n                                type=\"checkbox\"\r\n                                checked={cartList.length === check.length}\r\n                                onClick={handleAllCheck} \r\n                                style={{width:30,height:30, border:\"1px solid\"}} \r\n                            />\r\n                            <p style={{float:\"right\"}}>전체선택</p>\r\n                        </div>\r\n\r\n\r\n                        <button type=\"button\" style={{width:150}} onClick={removeItem}>선택상품 삭제</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{border:\"1px solid\", backgroundColor:\"lightgray\"}}>\r\n                    <div>\r\n                        {cartList.map((cartItem)=>(\r\n                            <div className={containerLayout} alt={cartItem.id}>\r\n                                <div className={contentLayout}>\r\n                                <div style={{border:\"1px solid\",display: \"flex\"}}>\r\n                                    <img className={imgLayout} src={cartItem.img} alt={cartItem.id} />\r\n                                    {makeCartelement(\r\n                                        cartItem.id,\r\n                                        cartItem.product.distributor,\r\n                                        cartItem.product.name,\r\n                                        cartItem.product.description,\r\n                                        cartItem.product.price,\r\n                                    )}\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div style={{width:\"100%\", border:\"1px solid\", height:100, display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\r\n                    <button onClick={handleAddItem}>다른 상품 추가하기</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <div>상품금액</div>\r\n                    {cartList.price}\r\n                    <div>배송비</div>\r\n                    {cartList.shippingFee}\r\n                    <div>총 결제금액</div>\r\n                    {cartList.price}+{cartList.shippingFee}\r\n                </div>\r\n\r\n                <div style={{width:\"100%\", height:50, display:\"flex\", justifyContent:\"center\", border:\"1px solid\"}}>\r\n                    \r\n                    {checkAgree === false  &&(\r\n                        <button type=\"button\" style={{backgroundColor:\"lightGray\"}}>주문하기</button>\r\n                    )}\r\n                    {checkAgree === true  &&(\r\n                        <button type=\"button\" style={{backgroundColor:\"lightcyan\"}}\r\n                        name=\"save\" \r\n                        // id=\"save\" \r\n                        onClick={ClickOrder}>주문하기</button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\nCart.propTypes={\r\n    data:PropTypes.arrayOf(PropTypes.object),\r\n    containerCss: PropTypes.string,\r\n    contentCss: PropTypes.string,\r\n    imgCss: PropTypes.string\r\n}\r\n\r\nPropTypes.defaultType= {\r\n    data:[],\r\n    containerCss:\"categoryContainer\",\r\n    contentCss:\"categoryContent\",\r\n    imgCss:\"categoryImg\"\r\n}\r\n","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\Notice.js",["341"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport authHeader from \"../../actions/userAction\"\r\n\r\nconst Notice = () => {\r\n\r\n    const NoticeUrl = \"https://childsnack-test.appspot.com/_ah/api/notice/v1/getAllList\"\r\n    const [notice, setNotice] = useState([])\r\n\r\n    useEffect(()=>{\r\n        console.log(\"공지사항\")\r\n        axios\r\n        .get(NoticeUrl,{headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(response)\r\n            const ListArr = []\r\n            response.data.items.map((notice)=>ListArr.push({\r\n                id:notice.id,\r\n                title:notice.title,\r\n                img:notice.img,\r\n                date:notice.createDate\r\n            }))\r\n            setNotice(ListArr)\r\n            console.log(ListArr)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n            console.log(error.response)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>Notice</h1>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notice;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\OrderHistory.js",["342"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport authHeader from \"../../actions/userAction\"\r\n\r\nconst OrderHistory = () => {\r\n\r\n    const OrderURL = \"https://childsnack-test.appspot.com/_ah/api/order/v1/getList\"\r\n\r\n    const [orderList, setOrderList] = useState([])\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(OrderURL,{headers: authHeader()})\r\n        .then((response)=>{\r\n            const ListArr = []\r\n            console.log(response)\r\n            response.data.items.map((order)=>ListArr.push({\r\n                id:order.orderId,\r\n                buyer:order.buyer,\r\n                receiver:order.receiver,\r\n                shipmentStatus:order.shipmentStatus,\r\n                shippingPrice:order.shippingPrice\r\n            }))\r\n            setOrderList(ListArr)\r\n            console.log(ListArr)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n            console.log(error.response)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>OrderHistory</h1>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderHistory;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\RvCenter.js",["343"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport authHeader from \"../../actions/userAction\"\r\n\r\nconst RvCenter = () => {\r\n\r\n    const reviewListURL = \"https://childsnack-test.appspot.com/_ah/api/review/v1/getAccountReviewList?count=3&startCursor=0\"\r\n    const userReviewURL = \"https://childsnack-test.appspot.com/_ah/api/review/v1/getReviewList?count=5&startCursor=0\"\r\n\r\n    const [reviews,setReviews]= useState([])\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(reviewListURL,{headers: authHeader()})\r\n        .then((response)=>{\r\n            const ListArr = []\r\n            console.log(\"review response\")\r\n            console.log(response)\r\n            \r\n            response.data.map((reviews)=>ListArr.push({\r\n                count : reviews.count,\r\n                total : reviews.totalCount,\r\n            }))\r\n            setReviews(ListArr)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n            console.log(error.response)\r\n        })\r\n    })\r\n    console.log(\"reviews\")\r\n    console.log(reviews)\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>Review manage Center</h1>\r\n                <div>\r\n                    <p>작성가능한 리뷰</p>\r\n\r\n                </div>\r\n                <div>\r\n                    <p>작성한 리뷰</p>\r\n                    \r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RvCenter;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\EventCenter.js",["344"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport authHeader from \"../../actions/userAction\"\r\n\r\nconst EventCenter = () => {\r\n    const EventURL = \"https://childsnack-test.appspot.com/_ah/api/event/v1/getAllEvent?type=pc\"\r\n\r\n    const [events, setEvents] = useState([])\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(EventURL,{headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(response)\r\n            const ListArr = []\r\n            response.data.items.map((event)=>ListArr.push({\r\n                id:event.id,\r\n                name:event.name,\r\n                img:event.thumbnail\r\n            }))\r\n            setEvents(ListArr)\r\n            console.log(ListArr)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n            console.log(error.response)\r\n        })\r\n    },[])\r\n    \r\n    return (\r\n        <>\r\n            <h1>EventCenter</h1>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EventCenter;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\Coupon.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\CartItem.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\Category.js",["345","346"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport authHeader from \"../../actions/userAction\"\r\nimport CategoryMenu from './CategoryMenu';\r\nimport CategoryMore from './CategoryMore';\r\n\r\nimport \"./category.css\";\r\n\r\nconst Category = ({history}) => {\r\n\r\n    const CategoryURL=\"https://childsnack-test.appspot.com/_ah/api/category/v1/getMainList\"\r\n    const CategoryAllURL=\"https://childsnack-test.appspot.com/_ah/api/category/v1/getAllList\"\r\n\r\n    const [category, setCategory] = useState([])\r\n\r\n    //뒤로가기\r\n    const goBack = () =>{\r\n        history.goBack();\r\n    }\r\n\r\n        useEffect(()=>{\r\n            axios\r\n            .get(CategoryURL,{headers: authHeader()})\r\n            .then((response)=>{\r\n                console.log(\"get mainList\")\r\n                console.log(response)\r\n                const ListArr = []\r\n                response.data.items.map((category)=>ListArr.push({\r\n                    id:category.categoryId,\r\n                    img:category.thumbnail,\r\n                    fullName:category.fullName,\r\n                    name:category.name\r\n                }))\r\n                setCategory(ListArr)\r\n                console.log(ListArr)\r\n            })\r\n        },[])\r\n\r\n      \r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>Categorys</h1>\r\n                <button type=\"button\" onClick={goBack}>뒤로가기</button>\r\n                <a href=\"./totalProducts\">\r\n                    <button type=\"button\" style={{textAlign:\"center\", width:\"100%\",height:50, border:\"1px solid\", backgroundColor:\"lightpink\"}}>\r\n                        전체보기\r\n                    </button>\r\n                </a>\r\n                <div style={{border:\"1px solid\",display:\"flex\"}}>\r\n                    <CategoryMenu\r\n                        data={category}\r\n                        containerCss=\"categoryContainer\"\r\n                        contentCss=\"categoryContent\"\r\n                        imgCss=\"categoryImg\"\r\n                    />\r\n                    {/* <CategoryMore \r\n                    data={category}\r\n                    containerCss=\"categoryContainer\"\r\n                    contentCss=\"categoryContent\"\r\n                    imgCss=\"categoryImg\"\r\n                    /> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Category;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\ReviewMore.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\StoryMore.js",["347"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport StoryDetail from './StoryDetail';\r\nimport authHeader from \"../../actions/userAction\"\r\n\r\nconst StoryMore = () => {\r\n    const getAllList = \"https://childsnack-test.appspot.com/_ah/api/category/v1/getAllList\"\r\n    // const blogLink =\"https://childsnack-test.appspot.com/_ah/api/blogcontent/v1/list?count=5\"\r\n    const getStoryList = \"https://childsnack-test.appspot.com/_ah/api/blogcontent/v1/list?count=10&startCursor=0\"\r\n\r\n    const [story, setStory] = useState([])\r\n    // const query = window.location.search\r\n    // const urlParams = new URLSearchParams(query)\r\n    // const getId = urlParams.get('id')\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(getStoryList, {headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(\"스토리 more\")\r\n            console.log(response)\r\n            const ListArr = [];\r\n            response.data.item.map((story)=>ListArr.push({\r\n                id:story.id,\r\n                blogUrl:story.blogUrl,\r\n                img:story.thumbnail,\r\n                title:story.title\r\n            }))\r\n            setStory(ListArr)\r\n        })\r\n    },[])\r\n    console.log(\"story\")\r\n    console.log(story)\r\n\r\n    return (\r\n        <>\r\n            <h1>스토리 리스트</h1>\r\n            <StoryDetail \r\n            data={story}\r\n            containerCss=\"story-Container\"\r\n            contentCss=\"story-contentLayout\"\r\n            imgCss=\"story-imgLayout\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StoryMore;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\CategoryDetail.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\NewArrive.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\NewDetail.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\HotListMore.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\HotListDetail.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\StoryDetail.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\Payment.js",["348","349","350","351","352","353","354","355","356","357","358","359","360"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CartItem from './CartItem';\r\nimport authHeader from \"../../actions/userAction\"\r\nimport Products from '../products/Products';\r\nimport { isDate } from 'moment';\r\n\r\nconst Payment = ({\r\n    history,props,\r\n    containerLayout,\r\n    contentLayout,\r\n    imgLayout\r\n}) => {\r\n    const getAccount = \"https://childsnack-test.appspot.com/_ah/api/user/v1/getAccount\"\r\n    const paymentRquest = \"https://childsnack-test.appspot.com/_ah/api/order/v1/pay\"\r\n    const receiverUrl = \"https://childsnack-test.appspot.com/_ah/api/receiver/v1/setDefault\"\r\n    const getCartList = \"https://childsnack-test.appspot.com/_ah/api/cart/v1/getCartList\"\r\n    \r\n    const getJumon = \"https://childsnack-test.appspot.com/_ah/api/cart/v1/get?id=\"\r\n    const getOrderList = \"https://childsnack-test.appspot.com/_ah/api/order/v1/getList\"\r\n    const orderInsert = \"https://childsnack-test.appspot.com/_ah/api/order/v1/insert\"\r\n    const getReceiverUrl = \"https://childsnack-test.appspot.com/_ah/api/receiver/v1/getDefault\"\r\n   \r\n    const [delivInput,setDelivInput] = useState('')\r\n    const [defAddress,setDefAddress] = useState([])\r\n    const [receiverInfo, setReceiverInfo] = useState([])\r\n    const [productInfo, setProductInfo] = useState([])\r\n    const [clickAgree, setClickAgree] = useState(false)\r\n    const [orderBill, setOrderBill] = useState([])\r\n    \r\n    //배송메모\r\n    const deliveryInput = (e) =>{\r\n        setDelivInput(e.currentTarget.value)\r\n    }\r\n\r\n    //배송지 변경 버튼\r\n    const adrsChange =()=>{\r\n        console.log(\"배송지 변경\")\r\n        history.push(\"./changeAdrs\")\r\n    }\r\n    \r\n    //쿠폰 클릭\r\n    const clickCoupon =()=>{\r\n        console.log(\"쿠폰 선택\")\r\n        history.push(\"./couponList\")\r\n    }\r\n    //동의 버튼 클릭\r\n    const agreePayment = ()=>{\r\n        setClickAgree(!clickAgree)\r\n        {clickAgree? (console.log(\"비동의\")):(console.log(\"동의\"))}\r\n    }\r\n    \r\n    //결제 버튼\r\n    const payItems = ()=>{\r\n        console.log(\"주문을 시작합니다\")\r\n        if(clickAgree === true){\r\n            axios\r\n            .post(orderInsert,\r\n                { orderItems: [ // 상품정보 목록\r\n                    {\r\n                        productId: orderBill.productId,\r\n                        optionId: orderBill.optionId,\r\n                        quantity: orderBill.quantity\r\n                    }\r\n                   ],\r\n                //    pointSpentAmount: 사용 포인트\r\n                //    receiver: { //  수령인\r\n                //     id: receiverInfo.id,\r\n                //     shippingMessage: delivInput\r\n                //    }\r\n                },\r\n                //   \"regularDelivery\": (1 : 정기, 0 : 일반 )\r\n                //   \"deliveryType\": 정기배송 타입(0: 주, 1 : 월 )\r\n                //   \"deliveryValue\": 정기배송 일 ( 주 :  0 ~ 6, 월 : 0 ~ 말일 )},\r\n                {headers: authHeader()})\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(\"상품정보 가져오기\")\r\n        axios\r\n        .get(getJumon, {headers: authHeader()})\r\n        .then((response)=>{\r\n\r\n            console.log(\"성공!\")\r\n            console.log(response)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n        })\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(getOrderList, {headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(\"리스트 주문 들어옴\")\r\n            console.log(response)\r\n            \r\n            // const baseUrl = response.data.items[0]\r\n            // // console.log(\"baseUrl\")\r\n            // // console.log(baseUrl)\r\n            // const receiver = baseUrl.receiver\r\n            // const listArr = []\r\n            // baseUrl.orderItems.map((items)=>listArr.push({\r\n            //     productId:items.product.productId,\r\n            //     name : items.product.name,\r\n            //     img : items.product.thumnail,\r\n            //     distributor : items.product.distributor,\r\n            //     price : items.product.price,\r\n            //     option : items.option,\r\n            //     optionId : items.option.optionId,\r\n            //     quantity : items.quantity,\r\n            //     shippingCompany : items.shippingCompany,\r\n            //     shippingFee : items.shippingCompany.shippingFee,\r\n            //     shippingMessage : delivInput\r\n            // }))\r\n            const cartMemo = localStorage.getItem(\"save\")\r\n            const parsingMemo = JSON.parse(cartMemo)\r\n            setOrderBill(parsingMemo)\r\n            // setProductInfo(listArr)\r\n            // setReceiverInfo(receiver)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"error\")\r\n            console.log(error)\r\n        })\r\n    },[])\r\n    \r\n    //수신자 정보\r\n    useEffect(()=>{\r\n        axios\r\n        .get(getReceiverUrl,\r\n        {headers: authHeader()})\r\n        .then((response)=>{\r\n            const baseUrl = response.data\r\n            setDefAddress(baseUrl)\r\n        })\r\n    },[])\r\n    \r\n\r\n    return (\r\n        <>\r\n\r\n            <div style={{border:\"1px solid\", width:400}}>\r\n                <h1>결제화면</h1>\r\n                <a href=\"/cart\"><button type=\"button\">뒤로가기</button></a>\r\n                <div style={{border:\"1px solid\"}}>\r\n                    <h3>배송지 정보</h3>\r\n                    <div>\r\n                        <p>수령인 : {defAddress.name}</p>\r\n                        <p>연락처 : {defAddress.phone}</p>\r\n                        <p>주소 : {defAddress.address + defAddress.addressDetail }  </p>\r\n                    </div>\r\n                    <button type=\"button\" onClick={adrsChange}>배송지변경</button>\r\n                </div>\r\n                <div style={{border:\"1px solid\"}}>\r\n                    <h3>배송메모</h3>\r\n                    <input \r\n                        type=\"text\" \r\n                        style={{width:\"100%\", height:200}} \r\n                        placeholder=\"배송메모를 입력해주세요.\" \r\n                        onChange={deliveryInput} \r\n                    />\r\n                </div>\r\n                <h3>상품 정보</h3>\r\n                <div>\r\n                    {orderBill.map((cartItem)=>(\r\n                            <div className={containerLayout} alt={cartItem.id}>\r\n                                <div className={contentLayout}>\r\n                                <div style={{border:\"1px solid\"}}>\r\n                                    <div style={{display:\"inlineFlex\", border:\"1px solid\"}}>\r\n                                        <h4 className=\"cartItem-distributor\">{cartItem.distributor}</h4>\r\n                                        {/* <div className=\"cartItem-shippingFee\">배송비 {cartItem.shippingCompany.shippingFee}원</div> */}\r\n                                        {/* <p>제주, 도서지역 {cartItem.shippingCompany.shippingFee}원(개별연락)</p> */}\r\n                                    </div>\r\n                                    <div style={{display:\"flex\", border:\"1px solid\"}}>\r\n                                        <img \r\n                                            className={imgLayout} \r\n                                            src={cartItem.img} \r\n                                            alt={cartItem.id} \r\n                                            style={{width:150}}\r\n                                        />\r\n                                        <div>\r\n                                            <div>옵션</div>\r\n                                            <p className=\"cartItem-name\">{cartItem.name}</p>\r\n                                            <p className=\"cartItem-quantity\">{cartItem.quantity}개</p>\r\n                                            <b><p className=\"cartItem-price\">{cartItem.price}</p></b>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                </div>\r\n                <div style={{border:\"1px solid\" ,height:100}}>\r\n                    <h3>할인쿠폰</h3>\r\n                    <input type=\"text\"/>\r\n                    <button type=\"button\" onClick={clickCoupon}>쿠폰선택</button>\r\n                </div>\r\n                <div style={{border:\"1px solid\"}}>\r\n                    <h3>최종결제 금액</h3>\r\n                    <div>상품금액 : </div>\r\n                    <div>배송비 : </div>\r\n                    <div>쿠폰할인 : </div>\r\n                    <div>총 결제금액 : </div>\r\n                </div>\r\n                <div style={{display:\"flex\",alignItems:\"center\"}}>\r\n                    <input type=\"checkbox\" onClick={agreePayment} />\r\n                    <div>동의버튼</div>\r\n                </div>\r\n            </div>\r\n                {clickAgree === true && \r\n                    (<button type=\"submit\" style={{backgroundColor:\"lightCyan\"}} onClick={payItems}>결제하기</button>)}\r\n                {clickAgree === false && \r\n                    (<button type=\"submit\" style={{backgroundColor:\"lightgray\"}}>결제하기</button>)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Payment;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\OrderNav.js",[],["361","362"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\EventMore.js",["363"],"import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\"\r\nimport EventDetail from './EventDetail';\r\n\r\nconst EventMore = ({history}) => {\r\n\r\n    const eventBener = \"https://childsnack-test.appspot.com/_ah/api/event/v1/getEvent?id=\"\r\n    const [eventSnack, setEventSnack] = useState([])\r\n    const [snackImg, setSnackImg] = useState('')\r\n\r\n    const query = window.location.search\r\n    const urlParams = new URLSearchParams(query)\r\n    const getId = urlParams.get('id')\r\n    console.log(getId)\r\n\r\n    //뒤로가기\r\n    const goBack = () =>{\r\n        history.goBack();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(eventBener + getId)\r\n        .then((response)=>{\r\n            const mainImg = response.data.detailImg\r\n            const listArr = []\r\n            if(response.data.products){\r\n            response.data.products.map((eventlist)=>listArr.push({\r\n                id: eventlist.productId,\r\n                img:eventlist.thumnail,\r\n                content:makeEventElement(\r\n                    eventlist.name,\r\n                    eventlist.description,\r\n                    eventlist.distributor,\r\n                    eventlist.retailPrice,\r\n                    eventlist.price\r\n                )\r\n            }))\r\n            }\r\n                setSnackImg(mainImg)\r\n                setEventSnack(listArr)\r\n        })\r\n        },[])\r\n\r\n        \r\n    function makeEventElement (name,distributor,description,retailPrice,price){\r\n        return(\r\n            <>\r\n                <div>\r\n                    <p className=\"eventCompany\">{distributor}</p>\r\n                    <p className=\"eventDescription\">{description}</p>\r\n                    <p className=\"eventName\">{name}</p>\r\n                    <p className=\"eventPrice\">{price}</p>\r\n                    <p className=\"eventRetailPrice\">{retailPrice}</p>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button type=\"button\" onClick={goBack}>뒤로가기</button>\r\n            <div>\r\n                <h1>이벤트 리스트페이지</h1>\r\n                <img src={snackImg} alt={eventSnack.id} />\r\n                <EventDetail \r\n                    data={eventSnack} \r\n                    containerCss=\"itemContainer\"\r\n                    contentCss=\"contentLayout\"\r\n                    imgCss=\"imgLayout\"\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EventMore;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\EventDetail.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\CategoryMore.js",["364"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CategoryDetail from './CategoryDetail';\r\n\r\nconst CategoryMore = ({history}) => {\r\n\r\n    const categoryAllUrl = \"https://childsnack-test.appspot.com/_ah/api/category/v1/getList?id=\";\r\n    const [cateList, setCateList] = useState([])\r\n    // const [cateList, setCateList] = useState([])\r\n    // const [cateList, setCateList] = useState([])\r\n\r\n    const query = window.location.search\r\n    const urlParams = new URLSearchParams(query)\r\n    const getId = urlParams.get('id')\r\n\r\n    //뒤로가기\r\n      const goBack = () =>{\r\n        history.goBack();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(categoryAllUrl+getId)\r\n        .then((response)=>{\r\n            console.log(\"get id list 들어옴\")\r\n            console.log(response)\r\n            const listArr = []\r\n            // const shippingFee = response.data.items.products.shippingCompany.shippingFee\r\n            response.data.items[0].products.map((category)=>listArr.push({\r\n                id:category.productId,\r\n                // cateId: category.categoryId,\r\n                // fullNo:category.fullNo,\r\n                // fullName:category.fullName,\r\n                name:category.name,\r\n                mainDisplay:category.mainDisplay,\r\n                content:makeCategoryElement(\r\n                    category.thumnail,\r\n                    category.distributor,\r\n                    category.name,\r\n                    category.retailPrice,\r\n                    category.price,\r\n                    category.reviewCount,\r\n                    category.reviewPoint,\r\n                )\r\n            }))\r\n            setCateList(listArr)\r\n\r\n            // response.data.items[1].products.map((category)=>listArr.push({\r\n            //     id: category.categoryId,\r\n            //     fullName:category.fullName,\r\n            //     name:category.name,\r\n            //     mainDisplay:category.mainDisplay,\r\n            //     // content:makeCategoryElement(\r\n            //     //     category.products.thumnail,\r\n            //     //     category.products.distributor,\r\n            //     //     category.products.name,\r\n            //     //     category.products.retailPrice,\r\n            //     //     category.products.price,\r\n            //     //     category.products.reviewCount,\r\n            //     //     category.products.reviewPoint,\r\n            //     // )\r\n            // }))\r\n            // setCateList(listArr)\r\n\r\n            // response.data.items[2].products.map((category)=>listArr.push({\r\n            //     id: category.categoryId,\r\n            //     fullName:category.fullName,\r\n            //     name:category.name,\r\n            //     mainDisplay:category.mainDisplay,\r\n            //     content:makeCategoryElement(\r\n            //         category.products.thumnail,\r\n            //         category.products.distributor,\r\n            //         category.products.name,\r\n            //         category.products.retailPrice,\r\n            //         category.products.price,\r\n            //         category.products.reviewCount,\r\n            //         category.products.reviewPoint,\r\n            //     )\r\n            // }))\r\n            // setCateList(listArr)\r\n        })\r\n    },[])\r\n    console.log(\"cateList\")\r\n    console.log(cateList)\r\n\r\n    function makeCategoryElement(thumnail,distributor,name,retailPrice,price,reviewCount,reviewPoint){\r\n        return(\r\n            <>\r\n                <div>\r\n                    <div className=\"category-thumnail\">{thumnail}</div>\r\n                    <p className=\"category-distributor\">{distributor}</p>\r\n                    <p className=\"category-name\">{name}</p>\r\n\r\n                    <div style={{display:\"flex\"}}>\r\n                        <p className=\"category-retailPrice\">{retailPrice}</p>\r\n                        <p className=\"category-price\">{price}</p>\r\n                    </div>\r\n\r\n                    <div style={{display:\"flex\"}}>\r\n                        <p className=\"category-reviewCount\">{reviewCount}</p>\r\n                        <p className=\"category-reviewPoint\">{reviewPoint}</p>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button type=\"button\" onClick={goBack}>뒤로가기</button>\r\n                category More\r\n                <div style={{border:\"1px solid\", width:500}}>\r\n                    <h1>{cateList.name}</h1>\r\n                    <h3>{cateList.fullName}</h3>\r\n                    <CategoryDetail \r\n                        data={cateList}\r\n                        containerCss=\"itemContainer\"\r\n                        contentCss=\"contentLayout\"\r\n                        imgCss=\"imgLayout\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CategoryMore;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\CategoryMenu.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\TotalProducts.js",["365"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport authHeader from \"../../actions/userAction\"\r\nimport CategoryDetail from './CategoryDetail';\r\n\r\nconst TotalProducts = ({history}) => {\r\n\r\n    const TotalList = \"https://childsnack-test.appspot.com/_ah/api/product/v1/getProductList?count=20&startCursor=0\"\r\n    const [productTotal, setProductTotal] = useState([])\r\n    \r\n    \r\n    \r\n    \r\n    useEffect(()=>{\r\n        axios\r\n        .get(TotalList,{headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(\"전체가져오기\")\r\n            console.log(response)\r\n            const listArr = []\r\n            response.data.item.map((totalList)=>listArr.push({\r\n                id: totalList.productId,\r\n                img: totalList.thumnail,\r\n                content: makeTotalListElement(\r\n                    totalList.name,\r\n                    totalList.description,\r\n                    totalList.distributor,\r\n                    totalList.retailPrice,\r\n                    totalList.price\r\n                )\r\n            }))\r\n            setProductTotal(listArr)\r\n            console.log(\"productTotal\")\r\n            console.log(productTotal)\r\n        })\r\n    },[])\r\n\r\n    function makeTotalListElement(name,description,distributor,retailPrice,price){\r\n        return(\r\n            <>\r\n                <div>\r\n                    <p>{name}</p>\r\n                    <p>{description}</p>\r\n                    <p>{distributor}</p>\r\n                    <div style={{display:\"flex\"}}>\r\n                        <p>{retailPrice}</p>\r\n                        <p>{price}</p>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    //뒤로가기\r\n    const goBack = () =>{\r\n        history.goBack();\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{width:500, border:\"1xp solid\"}}>\r\n                <h1>Total Products</h1>\r\n                <button type=\"button\" onClick={goBack}>뒤로가기</button>\r\n                <div>\r\n                    <CategoryDetail\r\n                        data={productTotal}\r\n                        containerCss=\"categoryContainer\"\r\n                        contentCss=\"categoryContent\"\r\n                        imgCss=\"categoryImg\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TotalProducts;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\ChangeAdrs.js",["366"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport authHeader from \"../../actions/userAction\"\r\nimport AddressItems from './AddressItems';\r\n\r\nconst ChangeAdrs = ({history}) => {\r\n\r\n    const addressUrl = \"https://childsnack-test.appspot.com/_ah/api/receiver/v1/getReceiver\"\r\n    const defaultAddres = \"https://childsnack-test.appspot.com/_ah/api/receiver/v1/setDefault\"\r\n    const [isAddress, setIsAddres] = useState([])\r\n\r\n    //뒤로가기\r\n    const goBack = () =>{\r\n        history.push(\"./payment\");\r\n    }\r\n\r\n    const selectAdrs =(e)=>{\r\n        console.log(\" 선택 버튼 클릭\")\r\n        const targerName = e.target.name\r\n            console.log(isAddress.reverse())\r\n            axios\r\n            .post(defaultAddres,\r\n                {id: targerName},\r\n                {headers: authHeader()})\r\n            .then((response)=>{\r\n                console.log(response)\r\n                isAddress.reverse()\r\n                console.log(\"대표 주소 바뀜\")\r\n                // window.location.reload();\r\n                history.push(\"./payment\")\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(addressUrl, {headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(\"주소 리스트\")\r\n            console.log(response)\r\n            const listArr = []\r\n            response.data.items.map(personInfo=>listArr.push({\r\n                address : personInfo.address,\r\n                addressDetail : personInfo.addressDetail,\r\n                defaultReceiver : personInfo.defaultReceiver,\r\n                name : personInfo.name,\r\n                receiverId : personInfo.receiverId,\r\n                phone : personInfo.phone\r\n            }))\r\n            setIsAddres(listArr)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <div style={{border:\"1px solid\"}}>\r\n                <div style={{display:\"flex\"}}>\r\n                    <button type=\"button\" onClick={goBack}>뒤로가기</button>\r\n                    <h3>배송지변경</h3>\r\n                </div>\r\n                <div>\r\n                    {isAddress.map((adrs)=>(\r\n                        <div style={{border:\"1px solid\"}}>\r\n                            <div>{adrs.defaultReceiver}</div>\r\n                            <p>수령인 : {adrs.name}</p>\r\n                            <p>연락처 : {adrs.phone}</p>\r\n                            <p>주소 : {adrs.address + \"(\"+adrs.addressDetail+\")\"}</p>\r\n                            <div>\r\n                                <a href={`/addressForm?id=${adrs.receiverId}`}><button type=\"button\" style={{width:\"50%\", backgroundColor:\"white\"}}>배송지 수정</button></a>\r\n                                <button \r\n                                id={adrs.receiverId}\r\n                                name = {adrs.receiverId}\r\n                                onClick={selectAdrs} \r\n                                style={{width:\"50%\", backgroundColor:\"lightpink\"}}>선택</button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div>\r\n                    <a href={`/newAddress?id=${isAddress.receiverId}`}>\r\n                        <button type=\"button\" style={{width:\"100%\"}}>+추가등록</button>\r\n                    </a>\r\n\r\n                </div>\r\n            </div>  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChangeAdrs;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\CouponList.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\AddressItems.js",["367"],"import React, { useState } from 'react';\r\n\r\nconst AddressItems = ({\r\n    data,history\r\n}) => {\r\n    // const [isAdd, setIsAdd] = useState([])\r\n\r\n    // const modifyAdrs =()=>{\r\n    //     console.log(\"배송지 수정버튼 클릭\")\r\n\r\n    // }\r\n\r\n    const selectAdrs =()=>{\r\n        console.log(\" 선택 버튼 클릭\")\r\n        // history.push(\"./payment\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n            {data.map((adrs)=>(\r\n                <div style={{border:\"1px solid\"}}>\r\n                    <div>기본배송지</div>\r\n                    <p>수령인 : {adrs.name}</p>\r\n                    <p>연락처 : {adrs.phone}</p>\r\n                    <p>주소 : {adrs.address + \"(\"+adrs.addressDetail+\")\"}</p>\r\n                    <div>\r\n                        <a href={`/addressForm?id=${adrs.receiverId}`}><button type=\"button\" style={{width:\"50%\", backgroundColor:\"white\"}}>배송지 수정</button></a>\r\n                        <button onClick={selectAdrs} style={{width:\"50%\", backgroundColor:\"lightpink\"}}>선택</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddressItems;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\AddressForm.js",["368"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\NewAddress.js",["369","370","371","372"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport authHeader from \"../../actions/userAction\"\r\nimport {Modal, Button} from \"react-bootstrap\"\r\nimport DaumPostcode from 'react-daum-postcode';\r\n\r\nconst NewAddress = ({\r\n    history\r\n}) => {\r\n    \r\n    const userAdrsUrl = \"https://childsnack-test.appspot.com/_ah/api/receiver/v1/getReceiver\"\r\n    const updateAdrsUrl = \"https://childsnack-test.appspot.com/_ah/api/receiver/v1/updateReceiver\"\r\n    const removeAdrsUrl = \"https://childsnack-test.appspot.com/_ah/api/receiver/v1/deleteReceiver?id=\"\r\n    const addUserAddres = \"https://childsnack-test.appspot.com/_ah/api/receiver/v1/insertReceiver\"\r\n\r\n    const [newAdrs,setNewAdrs] = useState({\r\n        name:'',\r\n        phone:'',\r\n        addressDetail:''\r\n    })\r\n    console.log(\"newAdrs\")\r\n    console.log(newAdrs)\r\n\r\n     //주소 모달 show\r\n     const [addShow, setAddShow] = useState(false)\r\n     const handleAddShow = () =>{setAddShow(true)}\r\n     const handleAddClose = () =>{setAddShow(false)}\r\n \r\n     //입력한 주소\r\n     const [isAddress, setIsAddress] = useState('');\r\n     console.log(\"isAddress\")\r\n     console.log(isAddress)\r\n\r\n    const handleAdrsInfo = (e) =>{  \r\n        const {value, name} = e.target;\r\n        setNewAdrs({\r\n            ...newAdrs,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n //뒤로가기\r\n    const goBack = () =>{\r\n        history.goBack();\r\n    }\r\n\r\n\r\n    const saveAddressInfo =()=>{\r\n        console.log(\"데이타 추가 등록\")\r\n        axios\r\n        .post(addUserAddres,{\r\n            id: newAdrs.receiverId,\r\n            name: newAdrs.name,\r\n            phone: newAdrs.phone,\r\n            address: isAddress,\r\n            addressDetail: newAdrs.addressDetail,\r\n        }, {headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(response)\r\n            goBack()\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"error\")\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    //카카오 주소API\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.roadAddress;\r\n        let extraAddress = ''; \r\n\r\n        if (data.addressType === 'R') {\r\n            extraAddress += data.bname;\r\n            }  if (data.bname !== '') {\r\n            \r\n            if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setIsAddress(fullAddress)\r\n        setAddShow(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n          <button onClick={goBack}>뒤로가기</button>\r\n\r\n          <div>\r\n              <p type=\"text\">수령인 : \r\n                <input \r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    // type=\"name\"\r\n                    onChange={handleAdrsInfo} \r\n                    value={newAdrs.name} \r\n                />\r\n              </p>\r\n              <p>연락처 : \r\n                  <input \r\n                    id=\"phone\"\r\n                    name=\"phone\"\r\n                    // type=\"phone\"\r\n                    onChange={handleAdrsInfo} \r\n                    value={newAdrs.phone}\r\n                  />\r\n                </p>\r\n              <div style={{display:\"flex\"}}>\r\n                <p>주소 :  \r\n                    <input \r\n                        id=\"address\"\r\n                        name=\"address\"\r\n                        type=\"address\"\r\n                        // onChange={handleAdrsInfo} \r\n                        value={isAddress}\r\n                        selected={isAddress}\r\n                    />\r\n                </p>\r\n\r\n                <Button variant=\"primary\" type=\"button\" onClick={handleAddShow}>\r\n                    주소검색\r\n                </Button>\r\n              \r\n              </div>\r\n              <p>상세주소 : \r\n                  <input \r\n                    id=\"addressDetail\"\r\n                    name=\"addressDetail\"\r\n                    type=\"addressDetail\"\r\n                    onChange={handleAdrsInfo} \r\n                    value={newAdrs.addressDetail}\r\n                  />\r\n                </p>\r\n          </div>\r\n          <button type=\"button\" onClick={saveAddressInfo}>저장</button>   \r\n            {/* 모달 주소검색 확인 */}\r\n            <Modal \r\n                show={addShow} \r\n                data-toggle=\"modal\"\r\n                onHide={handleAddClose}\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>주소검색</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <DaumPostcode onComplete={handleComplete}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                </Modal.Footer>\r\n            </Modal>   \r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default NewAddress;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\AdrsManage.js",["373"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\CheckPw.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\ChangeProfile.js",["374","375","376","377","378","379","380"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport authHeader from \"../../actions/userAction\"\r\nimport {Modal, Button} from \"react-bootstrap\"\r\n\r\nconst ChangeProfile = ({history}) => {\r\n    const updateInfo = \"https://childsnack-test.appspot.com/updateProfile\"\r\n    const phoneCodeCheck = \"https://childsnack-test.appspot.com/_ah/api/user/v1/checkAuthNum\"\r\n    const phoneCode = \"https://childsnack-test.appspot.com/_ah/api/user/v1/getAuthNum?phone=\"\r\n    const exitService = \"https://childsnack-test.appspot.com/_ah/api/user/v1/exitService\"\r\n\r\n    const infoAcount =\"https://childsnack-test.appspot.com/_ah/api/user/v1/getAccount\"\r\n\r\n\r\n\r\n    // //주소 모달 show\r\n    const [addShow, setAddShow] = useState(false)\r\n    //Phone 모달 show\r\n    const [phoneShow, setPhoneShow] = useState(false)\r\n    \r\n    //회원 정보\r\n    const [userInfo, setUserInfo]  = useState('')\r\n    console.log(\"userInfo\")\r\n    console.log(userInfo)\r\n\r\n    // //입력한 주소\r\n    // const [isAddress, setIsAddress] = useState('');\r\n    //  //입력한 주소\r\n    //  const [isAddressDetail, setIsAddressDetail] = useState('');\r\n    //등록한 번호\r\n    const [phoneInput, setPhoneInput] = useState('')\r\n    console.log(\"phoneInput\")\r\n    console.log(phoneInput)\r\n    //요청받은 코드번호\r\n    const [codeInput, setCodeInput] = useState('');\r\n    //수락여부 \r\n    const [allow,setAllow] = useState(false)\r\n    //상세주소\r\n    const [addDetail,setAddDetail] = useState(false)\r\n    //비밀번호 변경\r\n    const [newPw, setNewPw] = useState('')\r\n    console.log(\"newPw\")\r\n    console.log(newPw)\r\n    const [checkPw, setCheckPw] = useState('')\r\n    console.log(\"checkPw\")\r\n    console.log(checkPw)\r\n    const [isAuthId, setIsAuthId] = useState('')\r\n    // //회원정보 변경버튼 \r\n    // const [sendClick, setSendClick] = useState(false)\r\n    // //수정완료 버튼\r\n    // const [clickAction, setClickAction] = useState(false)\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => {setShow(true)}\r\n    const handleClose = () => {setShow(false)}\r\n    // const handleAddShow = () =>{setAddShow(true)}\r\n    // const handleAddClose = () =>{setAddShow(false)}\r\n    // const handlePhoneShow = () =>{setPhoneShow(true)}\r\n    // const handlePhoneClose = () =>{\r\n    //     setPhoneShow(false)\r\n    //     setSendClick(false)\r\n    // }\r\n    const [notherNum, setNotherNum] = useState(false)\r\n    //마켓팅 동의 버튼\r\n    const [marketing, setMarketing] = useState(false)\r\n    //인증번호 전송 후 하단 input \r\n    const [requestNum, setRequestNum] =useState(false)\r\n\r\n    const handleMarketCheck = () =>{\r\n        setMarketing(!marketing)\r\n    }\r\n    //다른 번호클릭\r\n    const handleNotherNum = () =>{\r\n        setNotherNum(true)\r\n        console.log(\"다른번호로 인증번호로 변경클릭\")\r\n    }\r\n    const handleRqstNum = (e) =>{\r\n        console.log(\"해당번호로 인증코드를 보냅니다\")\r\n    }\r\n    //수정 최종버튼 \r\n\r\n    //New Passward\r\n    const newPwChange = (e) =>{\r\n        setNewPw(e.target.value)\r\n    }\r\n    //신규 비밀번호 재입력\r\n    const checkPwChange = (e) =>{setCheckPw(e.target.value)}\r\n    //비밀번호\r\n    // const [agreeSign, setAgreeSign] = useState(false)\r\n    // const [passwordClick, setPasswordClick] = useState(false)\r\n    //상세주소 확인\r\n    const phoneNumChange = (e) =>{\r\n        console.log(\"phoneCodeChange\")\r\n        setPhoneInput(e.target.value)\r\n        console.log(phoneInput)\r\n    }\r\n    //인증코드 입력\r\n    const phoneCodeChange = (e) =>{\r\n        console.log(\"phoneCodeChange\")\r\n        setCodeInput(e.target.value)\r\n        console.log(codeInput)\r\n    }\r\n    //뒤로가기\r\n    const goBack = () =>{\r\n        history.goBack();\r\n    }\r\n\r\n    // 인증번호 요청 버튼 클릭\r\n    const handleCodeSwitch = (e) =>{\r\n        e.preventDefault()\r\n        if(phoneInput.length !== 10 && phoneInput.length !== 11 ){\r\n            alert(\"전화번호를 정확히 입력해주세요\")\r\n            return\r\n        }\r\n        axios\r\n        .get(phoneCode + phoneInput)\r\n        .then((response)=>{\r\n            if(response && response.data){\r\n            console.log(\"정상 전송\")\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            const parseJson = JSON.parse(response.data.authId)\r\n            console.log(\"response.data\")\r\n            console.log(parseJson)\r\n            setRequestNum(true)\r\n            setIsAuthId(parseJson)\r\n            // setSendClick(true);\r\n        }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    //핸드폰 인증번호 입력후 완료절차\r\n    function handlePhoneCheck() {\r\n        console.log(\"최종변경절차까지 왔음\")\r\n        if(codeInput.length !== 6 ){\r\n            alert(\"정확한 수신인증번호를 입력해주세요.\")\r\n            return;\r\n        }\r\n        else{\r\n            console.log(\"통과\")\r\n            alert(\"인증에 성공했습니다!\")\r\n        }\r\n        axios\r\n        .post(phoneCodeCheck,{\r\n            authId : isAuthId, \r\n            code : codeInput, \r\n            phone : phoneInput, \r\n            name : userInfo.name,\r\n        })\r\n        .then((response)=>{\r\n            if(response.data.code === \"1\"){\r\n                console.log(response)\r\n                setAllow(true)\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    //변경완료 확인버튼\r\n    const changeSubmit = () =>{\r\n        console.log(\"최종변경\")\r\n        axios\r\n        .post(updateInfo, {\r\n            email : userInfo.eamil, \r\n            name : userInfo.name,\r\n            password : newPw,\r\n            phone : phoneInput && userInfo.phone,\r\n        }, {headers: authHeader()})\r\n\r\n        .then((response)=>{\r\n            console.log(\"재등록 보냄\")\r\n            console.log(response)\r\n            if(response && response.data.code === \"1\"){\r\n                localStorage.getItem('user',JSON.stringify(response.payload))\r\n                alert(\"변경이 완료되었습니다\")\r\n                console.log( \"password : newPw\")\r\n                console.log(newPw)\r\n                // props.history.push(\"/myPage\")\r\n                goBack()\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            console.log(error)\r\n            console.log(error.response)\r\n            alert(error.response)\r\n        })\r\n    }\r\n  \r\n    //회원 탈퇴 \r\n    const handleRemoveId = () =>{\r\n        console.log(\"탈퇴 시작\")\r\n        axios\r\n        .get(exitService,{headers: authHeader()})\r\n        .then((response)=>{\r\n            if(response.data.code === \"1\"){\r\n                history.push(\"./Home\")\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response)\r\n            alert(error.response)\r\n        })\r\n    } \r\n\r\n    //회원탈퇴 모달\r\n    const RemoveModal = () => {\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={handleShow}>회원탈퇴</Button>\r\n                <Modal \r\n                    show={show} \r\n                    data-toggle=\"modal\"\r\n                    onHide={handleClose}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <h3>회원탈퇴를 진행할까요?</h3>\r\n                        <div>\r\n                            <button onClick={handleRemoveId}>진행할께요</button>\r\n                            <button onClick={handleClose}>취소</button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>   \r\n            </>\r\n        )\r\n    }\r\n    const phoneCertifiCheck = (\r\n        <>\r\n            {codeInput === '' && (\r\n                <button \r\n                    style={{\r\n                        width:\"48.2%\", \r\n                        fontSize: 16,\r\n                        color: \"#ffffff\",\r\n                        border: \"solid 1px #cccccc\",\r\n                        outline:\"none\",\r\n                        backgroundColor:\"#cccccc\",\r\n                        borderRadius: 4,\r\n                        fontWeight: 500,\r\n                        padding: \"11px 0 11px 0\"\r\n                    }} \r\n                    variant=\"primary\" \r\n                >\r\n                    확인\r\n                </button>\r\n            )}\r\n\r\n            {codeInput !== '' && (\r\n                <button \r\n                    style={{\r\n                        width:\"48.2%\", \r\n                        fontSize: 16,\r\n                        color: \"#ffffff\",\r\n                        border: \"solid 1px #ec9281\",\r\n                        outline:\"none\",\r\n                        backgroundColor:\"#ec9281\",\r\n                        borderRadius: 4,\r\n                        fontWeight: 500,\r\n                        padding: \"11px 0 11px 0\"\r\n                    }} \r\n                    variant=\"primary\" \r\n                    onClick={handlePhoneCheck}\r\n                >\r\n                    확인\r\n                </button>\r\n            )}\r\n        </>\r\n    )\r\n\r\n    const doneCertifiCheck = (\r\n        <>\r\n            <button \r\n                style={{\r\n                    width:\"48.2%\", \r\n                    fontSize: 16,\r\n                    color: \"#ffffff\",\r\n                    border: \"solid 1px #cccccc\",\r\n                    outline:\"none\",\r\n                    backgroundColor:\"#cccccc\",\r\n                    borderRadius: 4,\r\n                    fontWeight: 500,\r\n                    padding: \"11px 0 11px 0\"\r\n                }} \r\n                variant=\"primary\" \r\n            >\r\n                확인\r\n            </button>\r\n            <p style={{margin:0}}>*인증이 완료되었습니다.</p>\r\n        </>\r\n    )\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(infoAcount, {headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(\"get inside\")\r\n            console.log(response)\r\n            const accountId =  response.data\r\n            setUserInfo(accountId)\r\n        })\r\n    },[])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"info-topicArea\">\r\n                <a href=\"./mypage\"><button>뒤로</button></a>\r\n                <div className=\"info-topic\">개인정보 수정</div>\r\n            </div>\r\n\r\n            <div style={{textAlign:\"left\",padding :\"0 16px 0 16px\"}}>\r\n\r\n                <div className=\"user-infoContent\">\r\n                    <div \r\n                        type=\"text\"\r\n                        name=\"name\" \r\n                        value={userInfo.name} \r\n                        className=\"user-textbox\"\r\n                        placeholder=\"이름\"\r\n                    >\r\n                        {userInfo.name}\r\n                    </div>\r\n                </div>\r\n\r\n                <h>*이메일 주소는 아이디로 사용됩니다.</h>\r\n                <div className=\"user-infoContent\">\r\n                    <div \r\n                        type=\"text\"\r\n                        name=\"email\" \r\n                        value={userInfo.email}\r\n                        className=\"user-textbox\"\r\n                        placeholder=\"계정 이메일\" \r\n                    >\r\n                        {userInfo.email}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"user-blankContent\">\r\n                    <input \r\n                        style={{ outline:\"none\", border:\"none\", font: \"small-caption\", width:\"100%\"}}\r\n                        value={newPw}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"비밀번호\" \r\n                        className=\"user-textbox\"\r\n                        onChange={newPwChange}\r\n                    />\r\n                </div>\r\n\r\n                    {newPw.length <= 8 && (\r\n                        <h>*8자리 이상 입력해주세요.</h>\r\n                    )}\r\n                    <div className=\"user-blankContent\">\r\n                        <input \r\n                            style={{ outline:\"none\", border:\"none\", font: \"small-caption\", width:\"100%\"}}\r\n                            value={checkPw}\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"비밀번호 확인\" \r\n                            className=\"user-textbox\"\r\n                            onChange={checkPwChange}\r\n                        />\r\n                    </div>\r\n                    {newPw !== checkPw && (\r\n                        <h>*비밀번호가 일치하지 않습니다.</h>\r\n                    )}\r\n                    {notherNum === false && (\r\n                        <>\r\n                            <div style={{display:\"flex\", paddingBottom: 20}}>\r\n                                <div className=\"user-infoContent\" style={{width:\"100%\", marginRight:8}}>\r\n                                    <div \r\n                                        type=\"text\" \r\n                                        placeholder=\"전화번호\" \r\n                                        className=\"user-textbox\"\r\n                                        style={{width:\"100%\"}}\r\n                                    >\r\n                                        {userInfo.phone}\r\n                                    </div>\r\n                                </div>\r\n                                <button \r\n                                style={{\r\n                                    width:180, \r\n                                    marginBottom: 16,\r\n                                    fontSize: 16,\r\n                                    color: \"#de6e57\",\r\n                                    borderRadius: 4,\r\n                                    border: \"solid 1px #ec9281\",\r\n                                    backgroundColor:\"#ffffff\",\r\n                                    fontWeight: 500\r\n                                    }} \r\n                                    variant=\"primary\" \r\n                                    onClick={handleNotherNum}>\r\n                                    다른번호 인증\r\n                                </button>\r\n                            </div>\r\n                        </>\r\n                        )   \r\n                    }\r\n\r\n                    {notherNum === true && (\r\n                        <>\r\n                            <div style={{display:\"flex\"}}>\r\n                                <div className=\"user-infoContent\" style={{width:\"100%\", marginRight:8}}>\r\n                                <input \r\n                                        style={{ \r\n                                            outline:\"none\", \r\n                                            border:\"none\", \r\n                                            font: \"small-caption\", \r\n                                            width:\"100%\"\r\n                                        }}\r\n                                        className=\"user-textbox\"\r\n                                        type=\"tel\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"휴대폰 번호(- 없이 입력)\" \r\n                                        onChange={phoneNumChange}\r\n                                    />\r\n                                </div>\r\n                                {requestNum === false && (\r\n                                    <button \r\n                                        style={{\r\n                                            width:180, \r\n                                            marginBottom: 16,\r\n                                            fontSize: 16,\r\n                                            color: \"#ffffff\",\r\n                                            border: \"solid 1px #ec9281\",\r\n                                            backgroundColor:\"#ec9281\",\r\n                                            borderRadius: 4,\r\n                                            fontWeight: 500\r\n                                        }} \r\n                                        variant=\"primary\" \r\n                                        onClick={handleCodeSwitch}\r\n                                    >\r\n                                        인증번호 전송\r\n                                    </button>\r\n                                    )\r\n                                }\r\n                                {requestNum === true && (\r\n                                    <button \r\n                                        style={{\r\n                                            width:180, \r\n                                            marginBottom: 16,\r\n                                            fontSize: 16,\r\n                                            color: \"#ffffff\",\r\n                                            border: \"solid 1px #cccccc\",\r\n                                            backgroundColor:\"#cccccc\",\r\n                                            borderRadius: 4,\r\n                                            fontWeight: 500\r\n                                        }} \r\n                                        variant=\"primary\" \r\n                                    >\r\n                                        인증번호 전송\r\n                                    </button>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </>\r\n                        )   \r\n                    }\r\n                    {requestNum === false && (\r\n                        <>\r\n                            <div>\r\n\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    {requestNum === true && (\r\n                        <>\r\n                            <div className=\"user-infoContent\" style={{width:\"100%\", marginRight:8}}>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name=\"codeNum\"\r\n                                    placeholder=\"인증번호 입력\" \r\n                                    className=\"user-textbox\"\r\n                                    style={{width:\"100%\", border:\"none\"}}\r\n                                    onChange={phoneCodeChange}\r\n                                    // value={codeInput}\r\n                                />\r\n                            </div>\r\n                            <div \r\n                                className=\"user-blankContent\" \r\n                                style={{width:\"100%\", marginRight:8, border:\"none\", marginBottom:40}}\r\n                            >\r\n                                <button \r\n                                    style={{\r\n                                        width:\"50%\", \r\n                                        fontSize: 16,\r\n                                        marginRight:8,\r\n                                        color: \"#565656\",\r\n                                        border: \"solid 1px #cccccc\",\r\n                                        backgroundColor:\"#ffffff\",\r\n                                        borderRadius: 4,\r\n                                        fontWeight: 500,\r\n                                        padding: \"11px 0 11px 0\"\r\n                                    }} \r\n                                    variant=\"primary\" \r\n                                    onClick={handleCodeSwitch}\r\n                                >\r\n                                    인증번호 재전송\r\n                                </button>\r\n                            {allow? (doneCertifiCheck):(phoneCertifiCheck)}\r\n                                \r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                <hr className=\"info-lightLine\"/>\r\n                \r\n                <div type=\"button\"  onClick={handleMarketCheck}>\r\n                    {marketing && (\r\n                        <>\r\n                                <div style={{display:\"flex\"}}>\r\n                                    <div>(img1)</div>\r\n                                    <p>마케팅 및 광고 활용 동의(선택)</p>\r\n                                    <div>(img2)</div>\r\n                                    close\r\n                                </div>\r\n                                <p style={{marginLeft:32}}>- 마케팅 및 광고 활용 동의를 하지 않을 경우 혜택 및 \r\n                                    이벤트 등의 서비스 이용에 제한이 있을 수 있습니다.\r\n                                </p>\r\n                        </>\r\n                    )}\r\n                    {!marketing && (\r\n                        <>\r\n                            <div style={{display:\"flex\"}}>\r\n                                <div>(img1)</div>\r\n                                <p>마케팅 및 광고 활용 동의(선택)</p>\r\n                                <div>(img2)</div>\r\n                                open\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                \r\n                <div className=\"user-infoBtn\">\r\n                    {newPw < 9 || newPw !== checkPw || !allow || !marketing  ? (\r\n                        <div \r\n                            type=\"button\" \r\n                            className=\"user-btnbox\" \r\n                            style={{ \r\n                                color:\"#ffffff\",\r\n                                backgroundColor: \"#cccccc\", \r\n                                border:\"1px #cccccc\",\r\n                                borderRadius: 4\r\n                            }}\r\n                        >수정하기\r\n                        </div>\r\n                    ) : \r\n                    (\r\n                        <div \r\n                            onClick={changeSubmit}  \r\n                            type=\"button\" \r\n                            className=\"user-btnbox\" \r\n                            style={{ color:\"#ffffff\",backgroundColor: \"#ec9281\"}}\r\n                        >수정하기\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div type=\"button\" onClick={RemoveModal} style={{color: \"#de6e57\", fontSize:14,fontWeight:500}}>서비스 탈퇴하기</div>\r\n            </div>\r\n        </>  \r\n    );\r\n};\r\n\r\nexport default ChangeProfile;",{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","replacedBy":"384"},{"ruleId":"385","severity":1,"message":"386","line":3,"column":8,"nodeType":"387","messageId":"388","endLine":3,"endColumn":17},{"ruleId":"385","severity":1,"message":"389","line":4,"column":8,"nodeType":"387","messageId":"388","endLine":4,"endColumn":20},{"ruleId":"385","severity":1,"message":"390","line":131,"column":11,"nodeType":"387","messageId":"388","endLine":131,"endColumn":24},{"ruleId":"385","severity":1,"message":"391","line":41,"column":19,"nodeType":"387","messageId":"388","endLine":41,"endColumn":27},{"ruleId":"392","severity":1,"message":"393","line":173,"column":7,"nodeType":"394","endLine":173,"endColumn":9,"suggestions":"395"},{"ruleId":"385","severity":1,"message":"396","line":12,"column":8,"nodeType":"387","messageId":"388","endLine":12,"endColumn":17},{"ruleId":"385","severity":1,"message":"397","line":15,"column":11,"nodeType":"387","messageId":"388","endLine":15,"endColumn":25},{"ruleId":"385","severity":1,"message":"398","line":16,"column":11,"nodeType":"387","messageId":"388","endLine":16,"endColumn":25},{"ruleId":"385","severity":1,"message":"399","line":18,"column":11,"nodeType":"387","messageId":"388","endLine":18,"endColumn":22},{"ruleId":"385","severity":1,"message":"400","line":21,"column":11,"nodeType":"387","messageId":"388","endLine":21,"endColumn":27},{"ruleId":"385","severity":1,"message":"401","line":23,"column":11,"nodeType":"387","messageId":"388","endLine":23,"endColumn":23},{"ruleId":"385","severity":1,"message":"402","line":24,"column":11,"nodeType":"387","messageId":"388","endLine":24,"endColumn":18},{"ruleId":"385","severity":1,"message":"403","line":29,"column":12,"nodeType":"387","messageId":"388","endLine":29,"endColumn":20},{"ruleId":"385","severity":1,"message":"404","line":29,"column":22,"nodeType":"387","messageId":"388","endLine":29,"endColumn":33},{"ruleId":"385","severity":1,"message":"405","line":43,"column":19,"nodeType":"387","messageId":"388","endLine":43,"endColumn":27},{"ruleId":"385","severity":1,"message":"406","line":46,"column":12,"nodeType":"387","messageId":"388","endLine":46,"endColumn":23},{"ruleId":"385","severity":1,"message":"407","line":46,"column":25,"nodeType":"387","messageId":"388","endLine":46,"endColumn":39},{"ruleId":"385","severity":1,"message":"408","line":47,"column":12,"nodeType":"387","messageId":"388","endLine":47,"endColumn":21},{"ruleId":"385","severity":1,"message":"409","line":52,"column":11,"nodeType":"387","messageId":"388","endLine":52,"endColumn":20},{"ruleId":"385","severity":1,"message":"410","line":52,"column":23,"nodeType":"387","messageId":"388","endLine":52,"endColumn":35},{"ruleId":"385","severity":1,"message":"411","line":53,"column":11,"nodeType":"387","messageId":"388","endLine":53,"endColumn":21},{"ruleId":"385","severity":1,"message":"412","line":53,"column":23,"nodeType":"387","messageId":"388","endLine":53,"endColumn":36},{"ruleId":"385","severity":1,"message":"413","line":54,"column":11,"nodeType":"387","messageId":"388","endLine":54,"endColumn":22},{"ruleId":"385","severity":1,"message":"414","line":54,"column":24,"nodeType":"387","messageId":"388","endLine":54,"endColumn":38},{"ruleId":"385","severity":1,"message":"415","line":6,"column":8,"nodeType":"387","messageId":"388","endLine":6,"endColumn":20},{"ruleId":"385","severity":1,"message":"416","line":7,"column":10,"nodeType":"387","messageId":"388","endLine":7,"endColumn":21},{"ruleId":"385","severity":1,"message":"417","line":18,"column":12,"nodeType":"387","messageId":"388","endLine":18,"endColumn":21},{"ruleId":"385","severity":1,"message":"418","line":18,"column":23,"nodeType":"387","messageId":"388","endLine":18,"endColumn":35},{"ruleId":"385","severity":1,"message":"419","line":20,"column":13,"nodeType":"387","messageId":"388","endLine":20,"endColumn":28},{"ruleId":"385","severity":1,"message":"420","line":20,"column":30,"nodeType":"387","messageId":"388","endLine":20,"endColumn":48},{"ruleId":"385","severity":1,"message":"421","line":22,"column":12,"nodeType":"387","messageId":"388","endLine":22,"endColumn":22},{"ruleId":"385","severity":1,"message":"422","line":22,"column":24,"nodeType":"387","messageId":"388","endLine":22,"endColumn":37},{"ruleId":"385","severity":1,"message":"423","line":24,"column":12,"nodeType":"387","messageId":"388","endLine":24,"endColumn":21},{"ruleId":"385","severity":1,"message":"424","line":24,"column":23,"nodeType":"387","messageId":"388","endLine":24,"endColumn":35},{"ruleId":"385","severity":1,"message":"425","line":26,"column":12,"nodeType":"387","messageId":"388","endLine":26,"endColumn":17},{"ruleId":"385","severity":1,"message":"426","line":26,"column":18,"nodeType":"387","messageId":"388","endLine":26,"endColumn":26},{"ruleId":"385","severity":1,"message":"427","line":28,"column":12,"nodeType":"387","messageId":"388","endLine":28,"endColumn":21},{"ruleId":"385","severity":1,"message":"428","line":28,"column":22,"nodeType":"387","messageId":"388","endLine":28,"endColumn":34},{"ruleId":"385","severity":1,"message":"429","line":30,"column":12,"nodeType":"387","messageId":"388","endLine":30,"endColumn":17},{"ruleId":"385","severity":1,"message":"430","line":30,"column":19,"nodeType":"387","messageId":"388","endLine":30,"endColumn":27},{"ruleId":"385","severity":1,"message":"431","line":31,"column":12,"nodeType":"387","messageId":"388","endLine":31,"endColumn":17},{"ruleId":"385","severity":1,"message":"432","line":31,"column":19,"nodeType":"387","messageId":"388","endLine":31,"endColumn":27},{"ruleId":"385","severity":1,"message":"433","line":32,"column":12,"nodeType":"387","messageId":"388","endLine":32,"endColumn":19},{"ruleId":"385","severity":1,"message":"434","line":32,"column":21,"nodeType":"387","messageId":"388","endLine":32,"endColumn":31},{"ruleId":"385","severity":1,"message":"435","line":33,"column":12,"nodeType":"387","messageId":"388","endLine":33,"endColumn":20},{"ruleId":"385","severity":1,"message":"436","line":33,"column":22,"nodeType":"387","messageId":"388","endLine":33,"endColumn":33},{"ruleId":"385","severity":1,"message":"437","line":1,"column":34,"nodeType":"387","messageId":"388","endLine":1,"endColumn":43},{"ruleId":"385","severity":1,"message":"438","line":3,"column":8,"nodeType":"387","messageId":"388","endLine":3,"endColumn":18},{"ruleId":"385","severity":1,"message":"439","line":6,"column":8,"nodeType":"387","messageId":"388","endLine":6,"endColumn":13},{"ruleId":"385","severity":1,"message":"440","line":10,"column":11,"nodeType":"387","messageId":"388","endLine":10,"endColumn":22},{"ruleId":"385","severity":1,"message":"441","line":12,"column":12,"nodeType":"387","messageId":"388","endLine":12,"endColumn":20},{"ruleId":"385","severity":1,"message":"442","line":12,"column":22,"nodeType":"387","messageId":"388","endLine":12,"endColumn":33},{"ruleId":"385","severity":1,"message":"443","line":14,"column":18,"nodeType":"387","messageId":"388","endLine":14,"endColumn":25},{"ruleId":"385","severity":1,"message":"444","line":16,"column":11,"nodeType":"387","messageId":"388","endLine":16,"endColumn":15},{"ruleId":"385","severity":1,"message":"445","line":28,"column":11,"nodeType":"387","messageId":"388","endLine":28,"endColumn":16},{"ruleId":"385","severity":1,"message":"446","line":1,"column":15,"nodeType":"387","messageId":"388","endLine":1,"endColumn":23},{"ruleId":"385","severity":1,"message":"437","line":1,"column":25,"nodeType":"387","messageId":"388","endLine":1,"endColumn":34},{"ruleId":"385","severity":1,"message":"447","line":3,"column":8,"nodeType":"387","messageId":"388","endLine":3,"endColumn":19},{"ruleId":"385","severity":1,"message":"448","line":1,"column":36,"nodeType":"387","messageId":"388","endLine":1,"endColumn":42},{"ruleId":"385","severity":1,"message":"449","line":12,"column":11,"nodeType":"387","messageId":"388","endLine":12,"endColumn":18},{"ruleId":"385","severity":1,"message":"450","line":13,"column":11,"nodeType":"387","messageId":"388","endLine":13,"endColumn":20},{"ruleId":"385","severity":1,"message":"451","line":30,"column":11,"nodeType":"387","messageId":"388","endLine":30,"endColumn":21},{"ruleId":"385","severity":1,"message":"452","line":98,"column":11,"nodeType":"387","messageId":"388","endLine":98,"endColumn":27},{"ruleId":"385","severity":1,"message":"453","line":118,"column":14,"nodeType":"387","messageId":"388","endLine":118,"endColumn":28},{"ruleId":"392","severity":1,"message":"454","line":176,"column":7,"nodeType":"394","endLine":176,"endColumn":9,"suggestions":"455"},{"ruleId":"385","severity":1,"message":"446","line":1,"column":17,"nodeType":"387","messageId":"388","endLine":1,"endColumn":25},{"ruleId":"385","severity":1,"message":"456","line":3,"column":8,"nodeType":"387","messageId":"388","endLine":3,"endColumn":14},{"ruleId":"385","severity":1,"message":"457","line":17,"column":11,"nodeType":"387","messageId":"388","endLine":17,"endColumn":19},{"ruleId":"385","severity":1,"message":"458","line":18,"column":11,"nodeType":"387","messageId":"388","endLine":18,"endColumn":20},{"ruleId":"385","severity":1,"message":"459","line":24,"column":12,"nodeType":"387","messageId":"388","endLine":24,"endColumn":16},{"ruleId":"385","severity":1,"message":"451","line":25,"column":11,"nodeType":"387","messageId":"388","endLine":25,"endColumn":21},{"ruleId":"385","severity":1,"message":"460","line":26,"column":11,"nodeType":"387","messageId":"388","endLine":26,"endColumn":22},{"ruleId":"385","severity":1,"message":"461","line":28,"column":12,"nodeType":"387","messageId":"388","endLine":28,"endColumn":22},{"ruleId":"385","severity":1,"message":"462","line":28,"column":24,"nodeType":"387","messageId":"388","endLine":28,"endColumn":37},{"ruleId":"385","severity":1,"message":"463","line":29,"column":12,"nodeType":"387","messageId":"388","endLine":29,"endColumn":21},{"ruleId":"385","severity":1,"message":"464","line":29,"column":23,"nodeType":"387","messageId":"388","endLine":29,"endColumn":35},{"ruleId":"385","severity":1,"message":"465","line":34,"column":12,"nodeType":"387","messageId":"388","endLine":34,"endColumn":20},{"ruleId":"385","severity":1,"message":"445","line":96,"column":11,"nodeType":"387","messageId":"388","endLine":96,"endColumn":16},{"ruleId":"385","severity":1,"message":"466","line":97,"column":11,"nodeType":"387","messageId":"388","endLine":97,"endColumn":17},{"ruleId":"385","severity":1,"message":"467","line":8,"column":12,"nodeType":"387","messageId":"388","endLine":8,"endColumn":18},{"ruleId":"385","severity":1,"message":"468","line":9,"column":12,"nodeType":"387","messageId":"388","endLine":9,"endColumn":21},{"ruleId":"385","severity":1,"message":"469","line":8,"column":11,"nodeType":"387","messageId":"388","endLine":8,"endColumn":24},{"ruleId":"385","severity":1,"message":"470","line":8,"column":12,"nodeType":"387","messageId":"388","endLine":8,"endColumn":18},{"ruleId":"385","severity":1,"message":"471","line":5,"column":8,"nodeType":"387","messageId":"388","endLine":5,"endColumn":20},{"ruleId":"385","severity":1,"message":"472","line":12,"column":11,"nodeType":"387","messageId":"388","endLine":12,"endColumn":25},{"ruleId":"385","severity":1,"message":"473","line":7,"column":11,"nodeType":"387","messageId":"388","endLine":7,"endColumn":21},{"ruleId":"385","severity":1,"message":"474","line":3,"column":8,"nodeType":"387","messageId":"388","endLine":3,"endColumn":16},{"ruleId":"385","severity":1,"message":"475","line":5,"column":8,"nodeType":"387","messageId":"388","endLine":5,"endColumn":16},{"ruleId":"385","severity":1,"message":"476","line":6,"column":10,"nodeType":"387","messageId":"388","endLine":6,"endColumn":16},{"ruleId":"385","severity":1,"message":"477","line":14,"column":11,"nodeType":"387","messageId":"388","endLine":14,"endColumn":21},{"ruleId":"385","severity":1,"message":"478","line":15,"column":11,"nodeType":"387","messageId":"388","endLine":15,"endColumn":24},{"ruleId":"385","severity":1,"message":"479","line":16,"column":11,"nodeType":"387","messageId":"388","endLine":16,"endColumn":22},{"ruleId":"385","severity":1,"message":"480","line":17,"column":11,"nodeType":"387","messageId":"388","endLine":17,"endColumn":22},{"ruleId":"385","severity":1,"message":"481","line":24,"column":12,"nodeType":"387","messageId":"388","endLine":24,"endColumn":22},{"ruleId":"385","severity":1,"message":"482","line":26,"column":12,"nodeType":"387","messageId":"388","endLine":26,"endColumn":24},{"ruleId":"385","severity":1,"message":"483","line":26,"column":26,"nodeType":"387","messageId":"388","endLine":26,"endColumn":41},{"ruleId":"385","severity":1,"message":"484","line":27,"column":12,"nodeType":"387","messageId":"388","endLine":27,"endColumn":23},{"ruleId":"385","severity":1,"message":"485","line":27,"column":25,"nodeType":"387","messageId":"388","endLine":27,"endColumn":39},{"ruleId":"486","severity":1,"message":"487","line":50,"column":9,"nodeType":"488","messageId":"489","endLine":50,"endColumn":63},{"ruleId":"381","replacedBy":"490"},{"ruleId":"383","replacedBy":"491"},{"ruleId":"392","severity":1,"message":"492","line":43,"column":11,"nodeType":"394","endLine":43,"endColumn":13,"suggestions":"493"},{"ruleId":"392","severity":1,"message":"492","line":82,"column":7,"nodeType":"394","endLine":82,"endColumn":9,"suggestions":"494"},{"ruleId":"392","severity":1,"message":"495","line":36,"column":7,"nodeType":"394","endLine":36,"endColumn":9,"suggestions":"496"},{"ruleId":"385","severity":1,"message":"497","line":4,"column":8,"nodeType":"387","messageId":"388","endLine":4,"endColumn":20},{"ruleId":"385","severity":1,"message":"446","line":1,"column":17,"nodeType":"387","messageId":"388","endLine":1,"endColumn":25},{"ruleId":"385","severity":1,"message":"498","line":63,"column":11,"nodeType":"387","messageId":"388","endLine":63,"endColumn":17},{"ruleId":"385","severity":1,"message":"437","line":2,"column":17,"nodeType":"387","messageId":"388","endLine":2,"endColumn":26},{"ruleId":"385","severity":1,"message":"499","line":11,"column":11,"nodeType":"387","messageId":"388","endLine":11,"endColumn":22},{"ruleId":"385","severity":1,"message":"500","line":12,"column":11,"nodeType":"387","messageId":"388","endLine":12,"endColumn":24},{"ruleId":"385","severity":1,"message":"501","line":13,"column":11,"nodeType":"387","messageId":"388","endLine":13,"endColumn":24},{"ruleId":"385","severity":1,"message":"498","line":43,"column":15,"nodeType":"387","messageId":"388","endLine":43,"endColumn":21},{"ruleId":"385","severity":1,"message":"502","line":17,"column":12,"nodeType":"387","messageId":"388","endLine":17,"endColumn":19},{"ruleId":"385","severity":1,"message":"503","line":17,"column":21,"nodeType":"387","messageId":"388","endLine":17,"endColumn":31},{"ruleId":"385","severity":1,"message":"504","line":19,"column":12,"nodeType":"387","messageId":"388","endLine":19,"endColumn":21},{"ruleId":"385","severity":1,"message":"505","line":19,"column":23,"nodeType":"387","messageId":"388","endLine":19,"endColumn":35},{"ruleId":"385","severity":1,"message":"427","line":39,"column":12,"nodeType":"387","messageId":"388","endLine":39,"endColumn":21},{"ruleId":"385","severity":1,"message":"428","line":39,"column":22,"nodeType":"387","messageId":"388","endLine":39,"endColumn":34},{"ruleId":"385","severity":1,"message":"506","line":77,"column":11,"nodeType":"387","messageId":"388","endLine":77,"endColumn":24},"no-native-reassign",["507"],"no-negated-in-lhs",["508"],"no-unused-vars","'testUtils' is defined but never used.","Identifier","unusedVar","'PasswordMask' is defined but never used.","'pwInputChange' is assigned a value but never used.","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'rqustSwitch' and 'signInput.phone'. Either include them or remove the dependency array.","ArrayExpression",["509"],"'NewArrive' is defined but never used.","'productGetList' is assigned a value but never used.","'productGetItem' is assigned a value but never used.","'getMainList' is assigned a value but never used.","'getProReviewList' is assigned a value but never used.","'getStoryList' is assigned a value but never used.","'getList' is assigned a value but never used.","'itemInfo' is assigned a value but never used.","'setItemInfo' is assigned a value but never used.","'setStory' is assigned a value but never used.","'certificate' is assigned a value but never used.","'setCertificate' is assigned a value but never used.","'itemClick' is assigned a value but never used.","'eventMeal' is assigned a value but never used.","'setEventMeal' is assigned a value but never used.","'eventSnack' is assigned a value but never used.","'setEventSnack' is assigned a value but never used.","'eventCoupon' is assigned a value but never used.","'setEventCoupon' is assigned a value but never used.","'DaumPostcode' is defined but never used.","'useDispatch' is defined but never used.","'isAddress' is assigned a value but never used.","'setIsAddress' is assigned a value but never used.","'isAddressDetail' is assigned a value but never used.","'setIsAddressDetail' is assigned a value but never used.","'phoneInput' is assigned a value but never used.","'setPhoneInput' is assigned a value but never used.","'codeInput' is assigned a value but never used.","'setCodeInput' is assigned a value but never used.","'allow' is assigned a value but never used.","'setAllow' is assigned a value but never used.","'addDetail' is assigned a value but never used.","'setAddDetail' is assigned a value but never used.","'oldPw' is assigned a value but never used.","'setOldPw' is assigned a value but never used.","'newPw' is assigned a value but never used.","'setNewPw' is assigned a value but never used.","'checkPw' is assigned a value but never used.","'setCheckPw' is assigned a value but never used.","'isAuthId' is assigned a value but never used.","'setIsAuthId' is assigned a value but never used.","'useEffect' is defined but never used.","'authHeader' is defined but never used.","'axios' is defined but never used.","'cartHistory' is assigned a value but never used.","'isSubmit' is assigned a value but never used.","'setIsSubmit' is assigned a value but never used.","'setCart' is assigned a value but never used.","'logo' is assigned a value but never used.","'getId' is assigned a value but never used.","'useState' is defined but never used.","'urlPropType' is defined but never used.","'useRef' is defined but never used.","'cartUrl' is assigned a value but never used.","'reviewUrl' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'handleOptionMenu' is assigned a value but never used.","'makeOptionMenu' is defined but never used.","React Hook useEffect has missing dependencies: 'getId' and 'option'. Either include them or remove the dependency array.",["510"],"'Review' is defined but never used.","'orderUrl' is assigned a value but never used.","'updateUrl' is assigned a value but never used.","'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'removeMenu' is assigned a value but never used.","'setRemoveMenu' is assigned a value but never used.","'sendOrder' is assigned a value but never used.","'setSendOrder' is assigned a value but never used.","'receiver' is assigned a value but never used.","'wrapId' is assigned a value but never used.","'notice' is assigned a value but never used.","'orderList' is assigned a value but never used.","'userReviewURL' is assigned a value but never used.","'events' is assigned a value but never used.","'CategoryMore' is defined but never used.","'CategoryAllURL' is assigned a value but never used.","'getAllList' is assigned a value but never used.","'CartItem' is defined but never used.","'Products' is defined but never used.","'isDate' is defined but never used.","'getAccount' is assigned a value but never used.","'paymentRquest' is assigned a value but never used.","'receiverUrl' is assigned a value but never used.","'getCartList' is assigned a value but never used.","'delivInput' is assigned a value but never used.","'receiverInfo' is assigned a value but never used.","'setReceiverInfo' is assigned a value but never used.","'productInfo' is assigned a value but never used.","'setProductInfo' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["507"],["508"],"React Hook useEffect has a missing dependency: 'getId'. Either include it or remove the dependency array.",["511"],["512"],"React Hook useEffect has a missing dependency: 'productTotal'. Either include it or remove the dependency array.",["513"],"'AddressItems' is defined but never used.","'goBack' is assigned a value but never used.","'userAdrsUrl' is assigned a value but never used.","'updateAdrsUrl' is assigned a value but never used.","'removeAdrsUrl' is assigned a value but never used.","'addShow' is assigned a value but never used.","'setAddShow' is assigned a value but never used.","'phoneShow' is assigned a value but never used.","'setPhoneShow' is assigned a value but never used.","'handleRqstNum' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"518","fix":"520"},{"desc":"521","fix":"522"},"Update the dependencies array to be: [rqustSwitch, signInput.phone]",{"range":"523","text":"524"},"Update the dependencies array to be: [getId, option]",{"range":"525","text":"526"},"Update the dependencies array to be: [getId]",{"range":"527","text":"528"},{"range":"529","text":"528"},"Update the dependencies array to be: [productTotal]",{"range":"530","text":"531"},[5424,5426],"[rqustSwitch, signInput.phone]",[5489,5491],"[getId, option]",[1368,1370],"[getId]",[3265,3267],[1214,1216],"[productTotal]"]