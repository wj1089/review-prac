[{"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\index.js":"1","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\App.js":"2","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reportWebVitals.js":"3","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\Page.js":"4","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\userAction.js":"5","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\type.js":"6","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\util\\axios.js":"7","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\index.js":"8","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\userReducer.js":"9","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\message.js":"10","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\validationInfo.js":"11","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\ForgotId.js":"12","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\ForgotPw.js":"13","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Logout.js":"14","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Login.js":"15","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Signin.js":"16","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\main\\Home.js":"17","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\UserInfo.js":"18","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\MyPage.js":"19","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\ServiceCenter.js":"20","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\Navbar.js":"21","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\Products.js":"22","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\ProductDetail.js":"23","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\DownNav.js":"24","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\Review.js":"25","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\Story.js":"26","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\Event.js":"27","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\Cart.js":"28","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\Notice.js":"29","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\OrderHistory.js":"30","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\RvCenter.js":"31","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\EventCenter.js":"32","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\Coupon.js":"33","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\CartItem.js":"34","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\Category.js":"35"},{"size":795,"mtime":1612400059608,"results":"36","hashOfConfig":"37"},{"size":299,"mtime":1613910750768,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":2206,"mtime":1613913630281,"results":"40","hashOfConfig":"37"},{"size":1544,"mtime":1613552208059,"results":"41","hashOfConfig":"37"},{"size":476,"mtime":1613552418461,"results":"42","hashOfConfig":"37"},{"size":262,"mtime":1613530887475,"results":"43","hashOfConfig":"37"},{"size":159,"mtime":1612428715181,"results":"44","hashOfConfig":"37"},{"size":590,"mtime":1613530875224,"results":"45","hashOfConfig":"37"},{"size":407,"mtime":1612431383358,"results":"46","hashOfConfig":"37"},{"size":3314,"mtime":1613457451241,"results":"47","hashOfConfig":"37"},{"size":8576,"mtime":1613641352796,"results":"48","hashOfConfig":"37"},{"size":8251,"mtime":1613713317918,"results":"49","hashOfConfig":"37"},{"size":1112,"mtime":1613910761620,"results":"50","hashOfConfig":"37"},{"size":3262,"mtime":1613910740655,"results":"51","hashOfConfig":"37"},{"size":11537,"mtime":1613555114318,"results":"52","hashOfConfig":"37"},{"size":16296,"mtime":1613910743726,"results":"53","hashOfConfig":"37"},{"size":24421,"mtime":1613830443070,"results":"54","hashOfConfig":"37"},{"size":1113,"mtime":1613912846949,"results":"55","hashOfConfig":"37"},{"size":251,"mtime":1613555049801,"results":"56","hashOfConfig":"37"},{"size":4500,"mtime":1613913580027,"results":"57","hashOfConfig":"37"},{"size":2016,"mtime":1613911236735,"results":"58","hashOfConfig":"37"},{"size":7298,"mtime":1613914631372,"results":"59","hashOfConfig":"37"},{"size":1672,"mtime":1613909744983,"results":"60","hashOfConfig":"37"},{"size":1101,"mtime":1613727399351,"results":"61","hashOfConfig":"37"},{"size":220,"mtime":1613719157520,"results":"62","hashOfConfig":"37"},{"size":589,"mtime":1613727435550,"results":"63","hashOfConfig":"37"},{"size":6729,"mtime":1613910071846,"results":"64","hashOfConfig":"37"},{"size":1135,"mtime":1613914102927,"results":"65","hashOfConfig":"37"},{"size":1148,"mtime":1613912706088,"results":"66","hashOfConfig":"37"},{"size":1176,"mtime":1613911801222,"results":"67","hashOfConfig":"37"},{"size":990,"mtime":1613912289927,"results":"68","hashOfConfig":"37"},{"size":190,"mtime":1613724751360,"results":"69","hashOfConfig":"37"},{"size":1941,"mtime":1613840541162,"results":"70","hashOfConfig":"37"},{"size":1788,"mtime":1613914134089,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"uh50hp",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\index.js",[],["150","151"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\App.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reportWebVitals.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\Page.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\userAction.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\actions\\type.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\util\\axios.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\index.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\userReducer.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\reducers\\message.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\validationInfo.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\ForgotId.js",["152"],"import React, {useCallback, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport testUtils from 'react-dom/test-utils';\r\n// import validate from './validationInfo';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst ForgotId = () => {\r\n    // const phoneCode =  \"https://childsnack-test.appspot.com/_ah/api/user/v1/getAuthNum?phone=%7bparam1%7d\";\r\n    const searchEmail = 'https://childsnack-test.appspot.com/_ah/api/user/v1/findEmail?phone=';\r\n    const sendEmail = 'https://childsnack-test.appspot.com/_ah/api/user/v1/sendEmail'\r\n    \r\n    // 기본 찾기항목\r\n    const [forgotInfo,setForgotInfo] = useState({\r\n        name : '',\r\n        phone : '',\r\n    })\r\n    console.log(\"forgotInfo\")\r\n    console.log(forgotInfo)\r\n    \r\n    // 코드 요청\r\n    const [rqustSwitch, setRqustSwitch] = useState(false)\r\n    // 입력받은 코드넘버\r\n    const [rqustAuth, setRqustAuth] = useState('')\r\n    // 입력한 코드넘버\r\n    const [codeNum, setCodeNum] = useState('')\r\n    //마지막 사용자가 찾은 아이디\r\n    const [userId, setUserId] = useState('')\r\n    console.log(\"rqustAuth\")\r\n    console.log(rqustAuth)\r\n\r\n    const [agreeRqst, setAgreeRqst] = useState(false)\r\n\r\n    // 최종확인\r\n    const [finalCheck, setFinalCheck] = useState(false)\r\n\r\n    // 아이디 보여주기\r\n    // const [showId, setShowId] = useState(false)\r\n    \r\n    // 타이머\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    const codeNumChange = (e) =>{\r\n        setCodeNum(e.target.value)\r\n        console.log(\"codeNumChange\")\r\n        console.log(e.target.value)\r\n    }\r\n    \r\n    const handleChange = useCallback((e) =>{  \r\n        const {value, name} = e.target;\r\n        \r\n        setForgotInfo({\r\n            ...forgotInfo,\r\n            [name]:value\r\n        })\r\n    },[forgotInfo])\r\n\r\n    // 인증번호 요청 버튼 클릭\r\n    const handleCodeSwitch = useCallback((e) =>{\r\n        e.preventDefault()\r\n        console.log(\"sending Auth number\")\r\n        console.log(rqustSwitch)\r\n\r\n        setRqustSwitch(!rqustSwitch);\r\n        if(rqustSwitch === true){\r\n            console.log(\"통과\")\r\n        }else if(rqustSwitch === false && forgotInfo.phone === '' && forgotInfo.name === ''){\r\n            console.log(\"부합하지않음\")\r\n            alert(\"빈칸 내용을 정확히 입력해주세요\")\r\n            setRqustSwitch(false);\r\n            return\r\n        }\r\n        axios\r\n        .get(searchEmail + forgotInfo.phone + '&name=' + forgotInfo.name)\r\n        .then((response)=>{\r\n            if(response && response.data){\r\n            const parseJson = JSON.parse(response.data.authId)\r\n            console.log(\"response.data\")\r\n            console.log(parseJson)\r\n            setRqustAuth(parseJson)\r\n            setRqustSwitch(true);\r\n            setMinutes(3);\r\n            console.log(rqustSwitch)\r\n        }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    },[forgotInfo.name, forgotInfo.phone, rqustSwitch])\r\n\r\n    //인증번호 입력후 완료 절차\r\n    function handleCFcode() {\r\n        console.log(\"일단 탔음\")\r\n        console.log(\"codeNum inside\")\r\n        console.log(codeNum)\r\n        if (codeNum.length !== 6 && agreeRqst === false) {\r\n            console.log(\"return까지 왔음\")\r\n            alert(\"정확한 수신인증번호를 입력해주세요.\")\r\n            return;\r\n        }\r\n        if (minutes === 0 && seconds === 0) {\r\n            return;\r\n        }\r\n        else {\r\n            console.log(\"통과\")\r\n            setRqustSwitch(true)\r\n            setAgreeRqst(true)\r\n        }\r\n        axios\r\n          .post(sendEmail,{\r\n            authId : rqustAuth, \r\n            code : codeNum, \r\n            phone : forgotInfo.phone, \r\n            name :  forgotInfo.name\r\n        } )\r\n          .then((response) => {\r\n            if(response && response.data){\r\n                const findId = response.data.email\r\n                setUserId(findId)\r\n            }\r\n            setAgreeRqst(true)\r\n            setFinalCheck(true)\r\n          })\r\n          .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n\r\n\r\n\r\n      }\r\n      \r\n    //인증번호 발송 후 입력과정\r\n    const pressCertiBtn = (\r\n        <>\r\n            <div>\r\n                <input\r\n                    // className=\"modal-input\"\r\n                    type='text'\r\n                    name=\"codeNum\"\r\n                    value={codeNum}\r\n                    onChange={codeNumChange}\r\n                />\r\n               \r\n                <button type=\"submit\" onClick={handleCodeSwitch}>다시인증</button>\r\n                <div className=\"footer\">\r\n                    <div className=\"modal-timer\">\r\n                        인증번호가 발송되었습니다 \r\n                        <div>(남은 시간 {minutes}:\r\n                        {seconds < 10 ? `0${seconds}` : seconds})\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" onClick={handleCFcode} style={{float:'right',width:'100%',backgroundColor:\"cyan\"}}>다음</button>\r\n            </div>\r\n        </>\r\n    )\r\n    //인증요청 발송 전\r\n    const notPressCertiBtn = (\r\n        <button onClick={handleCodeSwitch} style={{float:'right'}}> 인증요청 </button>\r\n    )\r\n\r\n    const makeInputElement = () =>{\r\n        return(\r\n            <>\r\n                <div>\r\n                    <h3 style={{display:'flex',justifyContent:'center'}}>\r\n                        Did you forgot own ID?\r\n                    </h3>\r\n                    <div className=\"mid-area\">\r\n                        <input\r\n                            className=\"sign-input\" \r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            type=\"text\" \r\n                            placeholder=\"사용자 이름 입력\" \r\n                            value={forgotInfo.name}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <input \r\n                            className=\"sign-input\"\r\n                            id=\"phone\"\r\n                            name=\"phone\"\r\n                            type=\"text\"\r\n                            placeholder=\"휴대폰번호 입력\"\r\n                            value={forgotInfo.phone}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{height:100}}>\r\n                        {rqustSwitch===true ? pressCertiBtn : notPressCertiBtn}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n   \r\n  \r\n    \r\n    \r\n    \r\n    //최종 아이디 보여지는부분\r\n    const makeReqElement = () =>{\r\n        return(\r\n            <>\r\n            <div>\r\n                <h3 style={{display:'flex',justifyContent:'center'}}>\r\n                    Did you forgot own ID?\r\n                </h3>\r\n                <div className=\"mid-area\" style={{height:150}}>\r\n                    <div>고객님의 아이디를 알려드립니다.</div>\r\n                    {userId}\r\n                </div>\r\n        </div>\r\n        </>\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const countdown = setInterval(() => {\r\n          if (Number(seconds) > 0) {\r\n            setSeconds(Number(seconds) - 1);\r\n          }\r\n          if (Number(seconds) === 0) {\r\n            if (Number(minutes) === 0) {\r\n              clearInterval(countdown);\r\n            } else {\r\n              setMinutes(Number(minutes) - 1);\r\n              setSeconds(59);\r\n            }\r\n          }\r\n        }, 1000);\r\n        return () => clearInterval(countdown);\r\n      }, [minutes, seconds]);\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <div style={{border:\"1px solid\"}}>\r\n                <div className=\"full-screen\">\r\n                    <div className=\"outline\">\r\n                        {finalCheck ? makeReqElement() : makeInputElement()}\r\n                        <div>\r\n                            <a href=\"/login\"><button>back to Login</button></a>\r\n                            <a href=\"/\"><button>back to Home</button></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgotId;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\ForgotPw.js",["153","154"],"import axios from 'axios';\r\nimport React, { useState, useCallback} from 'react';\r\n// import { updateProfile } from '../actions/userAction';\r\nimport PasswordMask from 'react-password-mask';\r\n\r\n// https://childsnack-test.appspot.com/_ah/api/auth/v1/findPassword?email=\r\n\r\nconst searchPass = 'https://childsnack-test.appspot.com/_ah/api/user/v1/findPassword?email=';\r\nconst sendPassword = 'https://childsnack-test.appspot.com/_ah/api/user/v1/sendPassword';\r\n\r\nconst ForgotPw = () => {\r\n    //기본 입력항목\r\n    const [forgotPw, setForgotInfo] = useState({\r\n        email : '',\r\n        phone : ''\r\n    })\r\n    console.log(\"forgotPw\")\r\n    console.log(forgotPw)\r\n\r\n    //비밀번호 재설정 \r\n    const [pwNum,setPwNum] = useState('')\r\n    //인증번호\r\n    const [pwCodeNum, setPwCodeNum] = useState('')\r\n    //다음버튼\r\n    const [pwSwitchCheck, setPwSwitchCheck] = useState(false)\r\n    //인증요청 버튼\r\n    const [agreeCheck, setAgreeCheck] = useState(false)\r\n    //입력 받은 Auth\r\n    const [rqstPsAuth, setRqstPsAuth] = useState('')\r\n    //기본입력항목 input\r\n    const handleChange = useCallback((e) =>{  \r\n        const {value, name} = e.target;\r\n        \r\n        setForgotInfo({\r\n            ...forgotPw,\r\n            [name]:value\r\n        })\r\n    },[forgotPw])\r\n\r\n  \r\n      //다음버튼, 입력 받은 코드넘버 보내기\r\n      function handlePwCF(){\r\n        console.log(\"인증번호 수신 부분\")\r\n        console.log(\"pwCodeNum\")\r\n        console.log(pwCodeNum)\r\n        setPwSwitchCheck(!pwSwitchCheck)\r\n\r\n        if(pwCodeNum.length !== 6 && agreeCheck === false){\r\n            console.log(\"return 까지왔음\")\r\n            alert(\"정확한 수신인증번호를 입력해주세요.\")\r\n            return\r\n        }\r\n        else{\r\n            console.log(\"비밀번호 통과\")\r\n            setPwSwitchCheck(true)\r\n            setAgreeCheck(true)\r\n        }\r\n\r\n        axios\r\n        .post(sendPassword,{\r\n            authId : rqstPsAuth, \r\n            code : pwCodeNum, \r\n            email :  forgotPw.email\r\n        })\r\n\r\n        .then((response) =>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            if(response && response.data){\r\n                console.log(\"response.data\")\r\n                console.log(response.data)\r\n                setPwSwitchCheck(true)\r\n            }\r\n        })\r\n\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n\r\n    }\r\n\r\n    // const onSubmitPwChage =()=>{\r\n    //     console.log(\"pwSwitchCheck\")\r\n    //     console.log(pwSwitchCheck)\r\n    // }\r\n\r\n    //인증버튼 스위치\r\n    const handlePwCodeSwitch = (e) =>{\r\n        e.preventDefault()\r\n        setAgreeCheck(!agreeCheck)\r\n        console.log(\"agreeCheck\")\r\n        console.log(agreeCheck)\r\n        if(pwSwitchCheck === true){\r\n            console.log(\"통과\")\r\n        }else if (pwSwitchCheck === false && forgotPw.email==='' && forgotPw.phone === ''){\r\n            console.log(\"부합하지않음\")\r\n            alert(\"빈칸 내용을 정확히 입력해주세요\")\r\n            setPwSwitchCheck(false);\r\n            setAgreeCheck(false);\r\n            return\r\n        }\r\n        axios\r\n        .get(searchPass + forgotPw.email + '&phone=' + forgotPw.phone)\r\n        .then((response)=>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            if(response&& response.data){\r\n                const parseJason = JSON.parse(response.data.authId)\r\n                setRqstPsAuth(parseJason)\r\n                console.log(\"parseJason\")\r\n                console.log(parseJason)\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    //인증번호 inputChage\r\n    const inputPwCode =(e)=>{\r\n        setPwCodeNum(e.target.value)\r\n        console.log(\"pwCodeNum\")\r\n        console.log(pwCodeNum)\r\n    }\r\n\r\n  \r\n\r\n    //비밀번호 재설정 input\r\n    const pwInputChange = (e) =>{\r\n        setPwNum(e.target.value)\r\n        console.log(\"pwNum\")\r\n        console.log(pwNum)\r\n    }\r\n\r\n    console.log(\"pwSwitchCheck\")\r\n    console.log(pwSwitchCheck)\r\n\r\n    const makePwInput = () =>{\r\n        return (\r\n        <>\r\n            <div>\r\n                <input \r\n                // className=\"sign-input\" \r\n                id=\"email\"\r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"이메일계정\" \r\n                onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <input \r\n                // className=\"sign-input\"\r\n                name=\"phone\"\r\n                type=\"tel\"\r\n                placeholder=\"전화번호\"\r\n                onChange={handleChange}\r\n                />\r\n            </div>\r\n                {agreeCheck===true ? pressPwCertifi : notPressPwCertifi}\r\n            <button type=\"submit\"  onClick={handlePwCF} style={{width:\"100%\"}}>다음</button>\r\n        </>\r\n        )\r\n    }\r\n\r\n    const makePwChange = () =>{\r\n        return(\r\n        <>\r\n            {/* <div>\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"비밀번호\"\r\n                onChange={pwInputChange}\r\n                />\r\n\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"비밀번호 재입력\"\r\n                onChange={pwInputChange}\r\n                />\r\n            </div> */}\r\n\r\n            <div>\r\n                <p>등록하신 휴대전화 문자로 임시 비밀번호를 발송하였습니다.</p>\r\n                <p>다시 로그인 해주세요.</p>\r\n            </div>\r\n\r\n            <a href=\"/login\"><button type=\"button\" style={{width:\"100%\"}}>확인</button></a>\r\n        </>\r\n        )\r\n    }\r\n    \r\n    const notPressPwCertifi = (\r\n        <div>\r\n            <div style={{height:100}}>\r\n                <button type=\"button\" style={{float:\"right\"}} onClick={handlePwCodeSwitch}>인증요청</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const pressPwCertifi = (\r\n        <div>\r\n            <div style={{height:100}}>\r\n                <input\r\n                    // className=\"modal-input\"\r\n                    type='text'\r\n                    name=\"codeNum\"\r\n                    value={pwCodeNum}\r\n                    onChange={inputPwCode}\r\n                    placeholder=\"인증번호 입력\"\r\n                />\r\n               \r\n                <button \r\n                    type=\"submit\" \r\n                    onClick={handlePwCodeSwitch}\r\n                >\r\n                    다시인증\r\n                </button>\r\n\r\n                <div className=\"footer\">\r\n                    <div className=\"modal-timer\">\r\n                        {/* 인증번호가 발송되었습니다  */}\r\n                        {/* <div>(남은 시간 {minutes}:\r\n                        {seconds < 10 ? `0${seconds}` : seconds})\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" style={{float:\"right\"}} onClick={handlePwCodeSwitch}>뒤로</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n       <>\r\n            <div style={{display:'flex',justifyContent:'center', border:\"1px solid\"}}>\r\n                <div className=\"full-screen\">\r\n                    <div className=\"outline\">\r\n                    \r\n                        <h4 style={{display:'flex',justifyContent:'center'}}>\r\n                            Did you forgot own PW?\r\n                        </h4>\r\n\r\n                        <div className=\"mid-area\">\r\n                            {pwSwitchCheck === true ? makePwChange() : makePwInput()}\r\n                        </div>\r\n\r\n                        <div style={{display:'flex',justifyContent:'center'}}>\r\n                            <a href=\"/login\"><button>back to Login</button></a>\r\n                            <a href=\"/\"><button>back to Home</button></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </>\r\n    );\r\n};\r\n\r\nexport default ForgotPw;","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Logout.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Login.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\log\\Signin.js",["155"],"import React, { useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../../actions/userAction';\r\nimport validate from '../validationInfo';\r\nimport moment from 'moment';\r\nimport DatePicker from \"react-datepicker\";\r\nimport './login.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Modal, Button} from \"react-bootstrap\"\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport PasswordMask from 'react-password-mask';\r\n\r\nconst Signin = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [checkAgree, setCheckAgree] = useState(false);\r\n    const [signInput,setSignInput] = useState({\r\n            email:'',\r\n            password:'',\r\n            name:'',\r\n            phone:'',\r\n            gender:'',\r\n            pswcheck:'',\r\n            addressDetail:''\r\n        })\r\n\r\n    const {email,password,name, phone,gender,pswcheck,addressDetail} = signInput;\r\n    const [birthday, setBirthday] = useState(new Date());\r\n    const [isAddress, setIsAddress] = useState('');\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [error, setError] = useState({})\r\n\r\n    const handleShow = () => {setShow(true);}\r\n    const handleClose = () => {setShow(false);}\r\n\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.roadAddress;\r\n        let extraAddress = ''; \r\n\r\n        if (data.addressType === 'R') {\r\n            extraAddress += data.bname;\r\n            }  if (data.bname !== '') {\r\n            \r\n            if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setIsAddress(fullAddress)\r\n        setShow(false)\r\n    }\r\n\r\n\r\n    const handleCheckYn = ()=>{\r\n        setCheckAgree(!checkAgree)\r\n        setDisabled(false)\r\n    }\r\n\r\n    const handleInfoChange = (e) =>{  \r\n        const {value, name} = e.target;\r\n        setSignInput({\r\n            ...signInput,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault()\r\n        let body = {\r\n            email : email,\r\n            name : name,\r\n            address: isAddress,\r\n            addressDetail: addressDetail,\r\n            birthday : moment(birthday).format('YYMMDD'),\r\n            gender: gender,\r\n            phone : phone,\r\n            password : password,\r\n            pswcheck : pswcheck\r\n        };\r\n        // checkValidate를 등록하여 \r\n        // validation이 통과할 경우,다음 단계로 진입을 하는 형식\r\n\r\n        let checkValidate = validate(body);\r\n        if(!checkValidate.success){\r\n            alert(checkValidate.message.content);\r\n        }\r\n        console.log('진입 성공')\r\n        dispatch(registerUser(body))\r\n        .then((response)=>{\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            localStorage.getItem('user',JSON.stringify(response.payload))\r\n            alert(\"정상가입 성공!\")\r\n            props.history.push(\"/login\")\r\n        })\r\n\r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    const LogModal = () => {\r\n        return (\r\n            <>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                주소 찾기\r\n            </Button>\r\n            <Modal \r\n                show={show} \r\n                data-toggle=\"modal\"\r\n                onHide={handleClose}\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <DaumPostcode onComplete={handleComplete}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                </Modal.Footer>\r\n            </Modal>   \r\n            </>\r\n        );\r\n    };\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"full-screen\">\r\n                <div className=\"outline\">\r\n                    <header><h2> Please Sign Account </h2></header>\r\n                    <div className=\"mid-area\">\r\n                        <div>\r\n                            <input \r\n                                className=\"sign-input\" \r\n                                id=\"email\"\r\n                                name=\"email\" \r\n                                type=\"email\" \r\n                                placeholder=\"아이디\" \r\n                                value={signInput.email} \r\n                                onChange={handleInfoChange} \r\n                            />\r\n                            {error.email && <p>{error.email}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <PasswordMask \r\n                                className=\"sign-input\" \r\n                                id=\"password\"\r\n                                name=\"password\" \r\n                                type=\"text\" \r\n                                placeholder=\"비밀번호\" \r\n                                value={signInput.password} \r\n                                onChange={handleInfoChange} \r\n                            />\r\n                            {error.password && <p>{error.password}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <PasswordMask \r\n                                className=\"sign-input\" \r\n                                id=\"pswcheck\"\r\n                                name=\"pswcheck\" \r\n                                type=\"text\" \r\n                                placeholder=\"비밀번호 확인\"\r\n                                value={signInput.pswcheck}\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                                {error.pswcheck && <p>{error.pswcheck}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input \r\n                                className=\"sign-input\" \r\n                                value={signInput.name} name=\"name\" \r\n                                type=\"text\" \r\n                                placeholder=\"이름\" \r\n                                onChange={handleInfoChange} \r\n                            />\r\n                                {error.name && <p>{error.name}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input \r\n                                className=\"sign-input\"\r\n                                value={signInput.phone}\r\n                                name=\"phone\"\r\n                                type=\"tel\"\r\n                                placeholder=\"휴대폰\"\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                                {error.phone && <p>{error.phone}</p>}\r\n                        </div>\r\n\r\n                        {/* 다음주소 API */}\r\n                        <div>\r\n                            <div style={{display:\"flex\"}}>\r\n                                <input \r\n                                    className=\"sign-input\" \r\n                                    type=\"text\" \r\n                                    id=\"address\" \r\n                                    name=\"address\"\r\n                                    placeholder=\"도로명주소\"\r\n                                    value={isAddress}\r\n                                    selected={isAddress}\r\n                                />\r\n                                <LogModal type=\"button\" value=\"도로명주소 찾기\" />\r\n                                {error.address && <p>{error.address}</p>}\r\n                            </div>\r\n\r\n                            <input \r\n                                className=\"sign-input\" \r\n                                type=\"text\" \r\n                                id=\"addressDetail\" \r\n                                name=\"addressDetail\"\r\n                                placeholder=\"상세주소\" \r\n                                value={signInput.addressDetail}\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                            {error.addressDetail && <p>{error.addressDetail}</p>}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <DatePicker\r\n                                className=\"sign-input\"\r\n                                name=\"birthday\"\r\n                                value={birthday}\r\n                                selected={birthday}     \r\n                                onChange={date => setBirthday(date)}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div \r\n                            className=\"sign-input\"  \r\n                            style={{display:\"flex\", \r\n                            justifyContent:'center', \r\n                            alignItems:'center',\r\n                            backgroundColor:'white'\r\n                            }}   \r\n                        >\r\n                            <div>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    name=\"gender\" \r\n                                    value=\"male\" \r\n                                    onChange={handleInfoChange} \r\n                                />\r\n                                Male\r\n                            </div>\r\n                            \r\n                            <div>\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    name=\"gender\" \r\n                                    value=\"female\" \r\n                                    onChange={handleInfoChange} \r\n                                />\r\n                                Female\r\n                            </div>\r\n                            {error.gender && <p>{error.gender}</p>}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div style={{display:\"flex\"}}>\r\n                        <input style={{width:30, height:30}} onClick={handleCheckYn} type=\"checkbox\" /> \r\n                        <p>개인정보 수집/이용에 동의합니다.</p>\r\n                    </div>\r\n\r\n                    <div style={{display:\"flex\", paddingLeft:50}}>\r\n                        <a href=\"/login\"><button >back to Login</button></a>\r\n\r\n                        {(checkAgree === true) && (\r\n                            <form onSubmit={onSubmit} style={{marginLeft:50}}>\r\n                                <button type=\"submit\" value=\"submit\" >Sign in</button>\r\n                            </form>\r\n                            )\r\n                        }\r\n                        {(checkAgree === false) && (\r\n                            <form style={{marginLeft:50}}>\r\n                                <button type=\"submit\" value=\"submit\" disabled={!disabled}>Sign in</button>\r\n                            </form>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Signin);\r\n\r\n\r\n","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\main\\Home.js",["156","157","158","159","160","161","162","163","164","165","166","167","168"],"import axios from 'axios';\r\nimport React,{ useEffect, useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Navbar from '../navi/Navbar';\r\nimport authHeader from \"../../actions/userAction\"\r\nimport Products from \"../products/Products\"\r\nimport DownNav from '../navi/DownNav';\r\nimport Review from '../review/Review';\r\nimport Story from '../story/Story';\r\nimport Event from '../event/Event'\r\nimport \"./home.css\"\r\n\r\nconst Home = () => {\r\n    const productGetList = \"https://childsnack-test.appspot.com/_ah/api/product/v1/getProductList?count=10&startCursor=0\";\r\n    const productGetItem = \"https://childsnack-test.appspot.com/_ah/api/product/v1/get?id=\"\r\n    const getAllList = \"https://childsnack-test.appspot.com/_ah/api/category/v1/getAllList\"\r\n    const getMainList = \"https://childsnack-test.appspot.com/_ah/api/category/v1/getMainList\"\r\n    \r\n    const getReviewList = \"https://childsnack-test.appspot.com/_ah/api/review/v1/getReviewList?count=10&startCursor=0\"\r\n    const getProReviewList = \"https://childsnack-test.appspot.com/_ah/api/review/v1/getProductReviewList?count=10&startCursor=0&productId=\"\r\n    \r\n    const getStoryList = \"https://childsnack-test.appspot.com/_ah/api/blogcontent/v1/list?count=5&startCursor=0\"\r\n    const getList = \"https://childsnack-test.appspot.com/_ah/api/category/v1/getList?id=\"\r\n    const eventList = \"https://childsnack-test.appspot.com/_ah/api/event/v1/getAllEvent?type=1\"\r\n\r\n\r\n\r\n    //임의로 넣은 product info\r\n    const [itemInfo, setItemInfo] = useState([])\r\n    //상품 전체 리스트\r\n    const [itemList,setItemList] = useState([])\r\n    //MD 추천 리스트\r\n    const [mdRecommend, setMdRecommend] = useState([])\r\n    //상품후기\r\n    const [userReview, setUserReview] = useState([])\r\n    //Tag 추천\r\n    const [tagRecommend, setTagRecommend] = useState([])\r\n    //중간베너\r\n    // const [mdRecommend, setMdRecommend] = useState([])\r\n    //인기상품\r\n    const [hotProduct, setHotProduct] = useState([])\r\n    //스토리\r\n    const [story, setStory] = useState([])\r\n    // const [mdRecommend, setMdRecommend] = useState([])\r\n\r\n    //이벤트\r\n    const [event, setEvent] = useState([])\r\n\r\n    const [certificate, setCertificate] = useState('')\r\n    const [itemClick, setItemClick] = useState(false)\r\n\r\n\r\n  \r\n\r\n\r\n\r\n    //신상품 리스트 가져오기\r\n    useEffect(()=>{\r\n        axios\r\n        .get(getAllList)\r\n        .then((response)=>{\r\n            //신상품\r\n            console.log(\"\")\r\n            console.log(response.data)\r\n            if(response.data.items[6]){\r\n                const listArr = [];\r\n                response.data.items[6].products.map((item)=>listArr.push({\r\n                    id: item.productId,\r\n                    img: item.thumnail,\r\n                    content: makeGetItemElement(\r\n                        item.originClassification,\r\n                        item.name,\r\n                        item.retailPrice,\r\n                        item.price,\r\n                        )\r\n                }))\r\n                    setItemList(listArr)\r\n            }\r\n\r\n            //tag추천\r\n            if(response.data.items[0]){\r\n                const listArr = [];\r\n                response.data.items[0].products.map((item)=>listArr.push({\r\n                    id: item.productId,\r\n                    img: item.thumnail,\r\n                    tag : item.tags,\r\n                    content: makeTagRecomendElement(\r\n                        item.originClassification,\r\n                        item.name,\r\n                        item.retailPrice,\r\n                        item.price,\r\n                        )\r\n                }))\r\n                setTagRecommend(listArr)\r\n            }\r\n\r\n            //hotProduct추천\r\n            if(response.data.items[4]){\r\n                const listArr = [];\r\n                response.data.items[4].products.map((item)=>listArr.push({\r\n                    id: item.productId,\r\n                    img: item.thumnail,\r\n                    content: makeHotProductElement(\r\n                        item.originClassification,\r\n                        item.name,\r\n                        item.retailPrice,\r\n                        item.price,\r\n                        )\r\n                }))\r\n                setHotProduct(listArr)\r\n            }\r\n\r\n            //md 추천\r\n            if(response.data.items[1]){\r\n                const listArr = [];\r\n                response.data.items[1].products.map((item)=>listArr.push({\r\n                    id: item.productId,\r\n                    img: item.thumnail,\r\n                    content: makeMdRecomendElement(\r\n                        item.originClassification,\r\n                        item.name,\r\n                        item.retailPrice,\r\n                        item.price,\r\n                    )\r\n                }))\r\n                setMdRecommend(listArr)\r\n            }\r\n                setItemClick(true)\r\n            });\r\n    }, []);\r\n\r\n \r\n\r\n    // 상품 후기 불러오기\r\n    useEffect(()=>{\r\n        axios\r\n        .get(getReviewList, {headers: authHeader()})\r\n        .then((response)=>{\r\n            const listArr = [];\r\n            response.data.item.map((review)=>listArr.push({\r\n                id : review.id,\r\n                img : review.product.thumnail,\r\n                content: makeReviewElement(\r\n                    review.product.name,\r\n                    review.point,\r\n                    review.description\r\n                )\r\n            }))\r\n            setUserReview(listArr)\r\n        })\r\n    },[])\r\n\r\n\r\n\r\n    // const ticket = localStorage.getItem(\"user\")\r\n    // console.log(\"ticket\")\r\n    // console.log(ticket)\r\n    \r\n    // console.log(\"headers\")\r\n    // console.log(authHeader())\r\n    \r\n    \r\n    // , {headers: authHeader()}\r\n\r\n    // 상단 event bener\r\n    useEffect(()=>{\r\n        axios\r\n        .get(eventList)\r\n        .then((response)=>{\r\n            console.log(\"event bener 내부 response\")\r\n            console.log(response)\r\n            const listArr = [];\r\n            response.data.items.map((event)=>listArr.push({\r\n                id : event.id,\r\n                img : event.thumbnail\r\n            }))\r\n            setEvent(listArr)\r\n            console.log(\"listArr\")\r\n            console.log(listArr)\r\n        })\r\n    },[])\r\n\r\n    //스토리\r\n    useEffect(()=>{\r\n        console.log(\"스토리\")\r\n        axios\r\n        .get(getStoryList, {headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(\"스토리 들어옴\")\r\n            console.log(response)\r\n        })\r\n    })\r\n\r\n\r\n    //상품이용 후기 \r\n    function makeReviewElement (name,point,description){\r\n        return(\r\n            <>\r\n                <div className=\"reviewText\">\r\n                    <p className=\"reviewName\">{name}</p>\r\n                    <p className=\"reviewPoint\">{point}</p>\r\n                    <p className=\"reviewDescrip\">{description}</p>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    //신상품\r\n    function makeGetItemElement(name, originClassification,retailPrice,price) {\r\n        return (\r\n          <>\r\n            <div className=\"contentText\">\r\n              <p className=\"contentName\">{name}</p>\r\n              <p className=\"contentCompany\">{originClassification}</p>\r\n\r\n              <div style={{display:\"flex\", alignItems:\"center\"}}>\r\n                <p className=\"contentRetailPrice\">{retailPrice}</p>\r\n                <p className=\"contentPrice\">{price}</p>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n\r\n    ///MD추천\r\n    function makeMdRecomendElement(name,price,retailPrice) {\r\n        return (\r\n          <>\r\n            <div className=\"mdAdviceText\">\r\n                <p className=\"mdAdviceName\">{name}</p>\r\n                <div style={{display:\"flex\", alignItems:\"center\"}}>\r\n                    <p className=\"contentRetailPrice\">{retailPrice}</p>\r\n                    <p className=\"contentPrice\">{price}</p>\r\n                </div>\r\n                <div>\"더보기\"</div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n\r\n    //tag추천\r\n    function makeTagRecomendElement(name,price,retailPrice) {\r\n        return (\r\n          <>\r\n            <div className=\"tagRecomText\">\r\n                <p className=\"tagRecomName\">{name}</p>\r\n                <div style={{display:\"flex\", alignItems:\"center\"}}>\r\n                    <p className=\"contentRetailPrice\">{retailPrice}</p>\r\n                    <p className=\"contentPrice\">{price}</p>\r\n                </div>\r\n                <div>\"더보기\"</div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n\r\n    //hotProduct 추천\r\n    function makeHotProductElement(name,price,retailPrice) {\r\n        return (\r\n          <>\r\n            <div className=\"reviewText\">\r\n                <p className=\"reviewName\">{name}</p>\r\n                <div style={{display:\"flex\", alignItems:\"center\"}}>\r\n                    <p className=\"contentRetailPrice\">{retailPrice}</p>\r\n                    <p className=\"contentPrice\">{price}</p>\r\n                </div>\r\n                <div>\"더보기\"</div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"full-screen\">\r\n\r\n\r\n                <div className=\"screen-main\">\r\n                    <div className=\"main-center\">\r\n\r\n                    <div className=\"nav-header\">\r\n                        <Navbar />\r\n                    </div>\r\n                    {/* marginTop:\"60px\",  */}\r\n                        <div style={{\r\n                            width:\"100%\",\r\n                            // height:328.3,\r\n                            border:\"1px solid\", \r\n                            backgroundColor:\"lightgray\"}}>\r\n                            <div>\r\n                                <Event \r\n                                    data={event}\r\n                                    eventImg=\"evt-img\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <body style={{ border:\"1px solid\"}}>\r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\"}}>\r\n                                <h3>신상품</h3>\r\n                                <p style={{float:'right'}}>더보기</p>\r\n                            </div>\r\n                            <div style={{display:\"flex\", alignContent:\"center\",justifyContent:\"center\", height:400, border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <Products \r\n                                    data={itemList}\r\n                                    containerCss=\"itemContainer\"\r\n                                    contentCss=\"contentLayout\"\r\n                                    imgCss=\"imgLayout\"\r\n                                />\r\n                            </div>\r\n\r\n                            \r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\", padding:\" 20px 0 0 20px\"}}>\r\n                                <h3>MD 추천</h3>\r\n                                <p style={{float:'right'}}>더보기</p>\r\n                            </div>\r\n                            <div style={{display:\"flex\", alignContent:\"center\",justifyContent:\"center\", height:400, border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <Products \r\n                                    data={mdRecommend}\r\n                                    containerCss=\"itemContainer\"\r\n                                    contentCss=\"contentLayout\"\r\n                                    imgCss=\"imgLayout\"\r\n                                />\r\n                            </div>\r\n\r\n                            \r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\"}}>\r\n                                <h3>상품후기</h3>\r\n                                <p style={{float:'right'}}>더보기</p>\r\n                            </div>\r\n                            <div style={{display:\"flex\", height:400, border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <Review \r\n                                    data={userReview}\r\n                                    reviewContainer=\"rw-containter\"\r\n                                    reviewcontent=\"rw-content\"\r\n                                    reviewImg= \"rw-img\"\r\n                                />\r\n                            </div>\r\n\r\n                            \r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\"}}>\r\n                                <h3>#TAG 추천</h3>\r\n                                <p style={{float:'right'}}>더보기</p>\r\n                            </div>\r\n                            <div style={{display:\"flex\", alignContent:\"center\",justifyContent:\"center\", height:400, border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <Products \r\n                                    data={tagRecommend}\r\n                                    containerCss=\"itemContainer\"\r\n                                    contentCss=\"contentLayout\"\r\n                                    imgCss=\"imgLayout\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\"}}>\r\n                                <h3>중간 베너</h3>\r\n                                <p style={{float:'right'}}>더보기</p>\r\n                            </div>\r\n                            <div style={{ height:400, border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <Event \r\n                                    data={event}\r\n                                    eventImg=\"evt-img\"\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\"}}>\r\n                                <h3>인기상품</h3>\r\n                                <p style={{float:'right'}}>더보기</p>\r\n                            </div>\r\n                            <div style={{ height:400,display:\"flex\", alignContent:\"center\",justifyContent:\"center\",border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <Products \r\n                                    data={hotProduct}\r\n                                    containerCss=\"itemContainer\"\r\n                                    contentCss=\"contentLayout\"\r\n                                    imgCss=\"imgLayout\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\"}}>\r\n                                <h3>스토리</h3>\r\n                                <p style={{float:'right'}}>더보기</p>\r\n                            </div>\r\n                            <div style={{ height:400, border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <Story\r\n                                    data={story}\r\n                                    containerCss=\"itemContainer\"\r\n                                    contentCss=\"contentLayout\"\r\n                                    imgCss=\"imgLayout\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div style={{ height:400, border:\"1px solid\",textAlign:\"center\"}}>\r\n                                <div style={{ width:\"100%\",height: 70, border:\"1px solid\",display:\"flex\"}}>\r\n                                    <h3>하단 베너</h3>\r\n                                    <p style={{float:'right'}}>더보기</p>\r\n                                </div>\r\n                            </div>\r\n                        </body>\r\n\r\n                        <footer style={{backgroundColor:\"lightBlue\", height:400, border:\"1px solid\"}}>\r\n                            <div>\r\n                                footer\r\n                            </div>\r\n                        </footer>\r\n\r\n                        <DownNav />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Home);\r\n\r\n","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\UserInfo.js",["169"],"import axios from 'axios';\r\nimport { withRouter} from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport authHeader from \"../../actions/userAction\"\r\nimport {Modal, Button} from \"react-bootstrap\"\r\nimport \"./userinfo.css\"\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst UserInfo = ({props,history}) => {\r\n    const userInfomation = \"https://childsnack-test.appspot.com/_ah/api/user/v1/getAccount\"\r\n    const exitService = \"https://childsnack-test.appspot.com/_ah/api/user/v1/exitService\"\r\n    const phoneCode = \"https://childsnack-test.appspot.com/_ah/api/user/v1/getAuthNum?phone=\"\r\n    const phoneCodeCheck = \"https://childsnack-test.appspot.com/_ah/api/user/v1/checkAuthNum\"\r\n    const updateInfo = \"https://childsnack-test.appspot.com/updateProfile\"\r\n\r\n    const [clickAction, setClickAction] = useState(false)\r\n\r\n    const [passwordClick, setPasswordClick] = useState(false)\r\n\r\n    //회원정보 변경버튼 \r\n    const [sendClick, setSendClick] = useState(false)\r\n    console.log(\"sendClick\")\r\n    console.log(sendClick)\r\n\r\n    const [show, setShow] = useState(false);\r\n    //주소 모달 show\r\n    const [addShow, setAddShow] = useState(false)\r\n    //Phone 모달 show\r\n    const [phoneShow, setPhoneShow] = useState(false)\r\n    //비밀번호\r\n    const [agreeSign, setAgreeSign] = useState(false)\r\n\r\n    const handleShow = () => {setShow(true)}\r\n    const handleClose = () => {setShow(false)}\r\n    const handleAddShow = () =>{setAddShow(true)}\r\n    const handleAddClose = () =>{setAddShow(false)}\r\n    const handlePhoneShow = () =>{setPhoneShow(true)}\r\n    const handlePhoneClose = () =>{\r\n        setPhoneShow(false)\r\n        setSendClick(false)\r\n    }\r\n    //회원 정보\r\n    const [userInfo, setUserInfo]  = useState('')\r\n    //입력한 주소\r\n    const [isAddress, setIsAddress] = useState('');\r\n     //입력한 주소\r\n     const [isAddressDetail, setIsAddressDetail] = useState('');\r\n    //등록한 번호\r\n    const [phoneInput, setPhoneInput] = useState('')\r\n    //요청받은 코드번호\r\n    const [codeInput, setCodeInput] = useState('');\r\n    //수락여부 \r\n    const [allow,setAllow] = useState(false)\r\n    //상세주소\r\n    const [addDetail,setAddDetail] = useState(false)\r\n    //비밀번호 변경\r\n    const [oldPw, setOldPw] = useState('')\r\n    const [newPw, setNewPw] = useState('')\r\n    const [checkPw, setCheckPw] = useState('')\r\n    const [isAuthId, setIsAuthId] = useState('')\r\n    //Old Passward\r\n    const oldPwChange = (e) =>{setOldPw(e.target.value)}\r\n    //New Passward\r\n    const newPwChange = (e) =>{setNewPw(e.target.value)}\r\n    //신규 비밀번호 재입력\r\n    const checkPwChange = (e) =>{\r\n    setCheckPw(e.target.value)\r\n    }\r\n\r\n    //validation check Passward\r\n    const validatePw = () =>{\r\n        // if(userInfo.password !== oldPw){\r\n        //     alert(\"기존비밀번호와 다릅니다!\")\r\n        //     return\r\n        // }else{\r\n        //     console.log(\"통과\")\r\n        // }\r\n        if(oldPw.length < 6 || newPw.length < 6 ){\r\n            alert(\"비밀번호는 6자 이상으로 설정해주세요!\")\r\n            console.log(\"비밀번호 6자 이상으로 설정해주세요!.\")\r\n            return\r\n        }\r\n        if(oldPw === newPw){\r\n            alert(\"과거 비밀번호와 같습니다.\")\r\n            console.log(\"과거 비밀번호와 같습니다.\")\r\n            return\r\n        }\r\n        if(checkPw !== newPw || checkPw.length < 6){\r\n            alert(\"입력한 비밀번호가 틀립니다.\")\r\n            console.log(\"입력한 비밀번호가 틀립니다.\")\r\n            return\r\n        }else{\r\n            setAgreeSign(true)\r\n            console.log(\"통과\")\r\n            alert(\"통과\")\r\n            setNewPw(newPw)\r\n            setPasswordClick(false)\r\n        }\r\n    }\r\n\r\n     //상세주소 확인\r\n     const phoneNumChange = (e) =>{\r\n        console.log(\"phoneCodeChange\")\r\n        setPhoneInput(e.target.value)\r\n        console.log(phoneInput)\r\n    }\r\n\r\n    //신규번호 확인\r\n    const addDetailChange = (e) =>{\r\n        console.log(\"isAddressDetail\")\r\n        setIsAddressDetail(e.target.value)\r\n        console.log(isAddressDetail)\r\n    }\r\n    //인증코드 확인\r\n    const phoneCodeChange = (e) =>{\r\n        console.log(\"phoneCodeChange\")\r\n        setCodeInput(e.target.value)\r\n        console.log(codeInput)\r\n    }\r\n    // //뒤로가기\r\n    const goBack = () =>{\r\n        history.goBack();\r\n    }\r\n    //카카오 주소API\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.roadAddress;\r\n        let extraAddress = ''; \r\n\r\n        if (data.addressType === 'R') {\r\n            extraAddress += data.bname;\r\n            }  if (data.bname !== '') {\r\n            \r\n            if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setIsAddress(fullAddress)\r\n        setAddShow(false)\r\n        setAllow(true)\r\n    }\r\n\r\n    const handleClickEvent = () =>{\r\n        setClickAction(!clickAction)\r\n        console.log(\"clickAction\")\r\n        console.log(clickAction)\r\n    }\r\n    const handleAddDetailSwitch = () =>{\r\n        setAddDetail(!addDetail)\r\n        console.log(\"addDetail\")\r\n        console.log(addDetail)\r\n    }\r\n\r\n    //비밀번호 변경 여부 버튼\r\n    const handlePwClick = () =>{\r\n        setPasswordClick(!passwordClick)\r\n        console.log(passwordClick)\r\n        setAgreeSign(false)\r\n    }\r\n\r\n    // 인증번호 요청 버튼 클릭\r\n    const handleCodeSwitch = (e) =>{\r\n        e.preventDefault()\r\n        console.log(\"sendClick\")\r\n        console.log(sendClick)\r\n        // setReqstPhoneCode(!reqstPhoneCode);\r\n        // setSendClick(!sendClick);\r\n        if(sendClick === false && phoneInput.length !== 10 && phoneInput.length !== 11 ){\r\n            alert(\"전화번호를 정확히 입력해주세요\")\r\n            setSendClick(false);\r\n            return\r\n        }\r\n        axios\r\n        .get(phoneCode + phoneInput)\r\n        .then((response)=>{\r\n            if(response && response.data){\r\n            console.log(\"response\")\r\n            console.log(response)\r\n            const parseJson = JSON.parse(response.data.authId)\r\n            console.log(\"response.data\")\r\n            console.log(parseJson)\r\n            setIsAuthId(parseJson)\r\n            setSendClick(true);\r\n        }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    //핸드폰 인증번호 입력후 완료절차\r\n    function handlePhoneCheck() {\r\n        console.log(\"최종변경절차까지 왔음\")\r\n        if(codeInput.length !== 6 ){\r\n            alert(\"정확한 수신인증번호를 입력해주세요.\")\r\n            return;\r\n        }\r\n        else{\r\n            console.log(\"통과\")\r\n        }\r\n        axios\r\n        .post(phoneCodeCheck,{\r\n            authId : isAuthId, \r\n            code : codeInput, \r\n            phone : phoneInput, \r\n            name : userInfo.name,\r\n        })\r\n        .then((response)=>{\r\n            if(response.data.code === \"1\"){\r\n                console.log(response)\r\n                setSendClick(false);\r\n                setAllow(true)\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    }\r\n\r\n    //변경완료 확인버튼\r\n    const changeSubmit = () =>{\r\n        console.log(\"최종변경\")\r\n        axios\r\n        .post(updateInfo, {\r\n            oldPassword : oldPw,\r\n            password : newPw,\r\n            address: isAddress,\r\n            addressDetail: isAddressDetail,\r\n            name : userInfo.name,\r\n        }, {headers: authHeader()})\r\n\r\n        .then((response)=>{\r\n            console.log(\"재등록 보냄\")\r\n            console.log(response)\r\n            if(response && response.data.code === \"1\"){\r\n                localStorage.getItem('user',JSON.stringify(response.payload))\r\n                alert(\"변경이 완료되었습니다\")\r\n                console.log( \"password : newPw\")\r\n                console.log(newPw)\r\n                // props.history.push(\"/myPage\")\r\n                goBack()\r\n            }\r\n        })\r\n        \r\n        .catch((error)=>{\r\n            console.log(\"error log\")\r\n            console.log(error)\r\n            console.log(error.response)\r\n            alert(error.response)\r\n        })\r\n    }\r\n\r\n\r\n    //회원 탈퇴 \r\n    const handleRemoveId = () =>{\r\n        console.log(\"탈퇴 시작\")\r\n        axios\r\n        .get(exitService,{headers: authHeader()})\r\n        .then((response)=>{\r\n            if(response.data.code === \"1\"){\r\n                props.history.push(\"./Home\")\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response)\r\n            alert(error.response)\r\n        })\r\n    } \r\n    \r\n\r\n    //전화번호 신규등록 모달\r\n    const PhoneModal = () => {\r\n        return (\r\n            <Button variant=\"primary\" onClick={handlePhoneShow}>\r\n                인증하기\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    //주소지 신규등록 모달\r\n    const AddresModal = () => {\r\n        return (\r\n            <Button variant=\"primary\" onClick={handleAddShow}>\r\n                주소검색\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    //회원탈퇴 모달\r\n    const RemoveModal = () => {\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={handleShow}>회원탈퇴</Button>\r\n                <Modal \r\n                    show={show} \r\n                    data-toggle=\"modal\"\r\n                    onHide={handleClose}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <h3>회원탈퇴를 진행할까요?</h3>\r\n                        <div>\r\n                            <button onClick={handleRemoveId}>진행할께요</button>\r\n                            <button onClick={handleClose}>취소</button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>   \r\n            </>\r\n        )\r\n    }\r\n\r\n    //모달 등록번호입력\r\n    const beforeChangePn= (\r\n        <>\r\n            <div>\r\n                <input \r\n                    value={phoneInput}\r\n                    type=\"text\" \r\n                    placeholder=\"번호를 입력해주세요.\" \r\n                    onChange={phoneNumChange}\r\n                    style={{border: \"1px solid\", width:300, height:30}}\r\n                />\r\n                <button \r\n                    type=\"button\"\r\n                    style={{float:\"right\", width:100}}\r\n                    onClick={handleCodeSwitch}\r\n                >\r\n                    인증요청\r\n                </button>\r\n            </div>\r\n            <button style={{float:\"right\"}} onClick={handlePhoneClose}>취소</button>\r\n        </>\r\n    )\r\n\r\n    //모달 인증코드입력\r\n    const phoneForm = (\r\n        <>\r\n            <div style={{width:\"100%\"}}>\r\n                <input \r\n                    value={codeInput}\r\n                    type='text'\r\n                    name=\"codeNum\"\r\n                    placeholder=\"인증번호\" \r\n                    onChange={phoneCodeChange}\r\n                    style={{border: \"1px solid\", width:300, height:30, float:\"left\"}}\r\n                />\r\n                <button \r\n                    type=\"button\" \r\n                    style={{width:100}}\r\n                    onClick={handleCodeSwitch}\r\n                >\r\n                    다시인증\r\n                </button>\r\n            </div>\r\n            <div style={{height:100,width:300}}>\r\n                <button style={{float:\"right\"}} onClick={handlePhoneCheck}>확인</button>\r\n                <button style={{float:\"right\"}} onClick={handlePhoneClose}>취소</button>\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n    // 신규 비밀번호 등록\r\n    const pwForm = (\r\n        <>\r\n            <p style={{textAlign:'left'}}>비밀번호 : </p>\r\n            <div style={{width:250, border:\"1px solid\", textAlign:'left'}}>\r\n                <p>기존 비밀번호</p>\r\n                <input value={oldPw} onChange={oldPwChange} style={{width:\"100%\"}} type=\"text\" placeholder=\"기존 비밀번호를 입력해주세요.\" />\r\n                <p>새로운 비밀번호</p>\r\n                <input value={newPw} onChange={newPwChange} style={{width:\"100%\"}} type=\"text\" placeholder=\"새로운 비밀번호를 입력해주세요.\" />\r\n                <input value={checkPw} onChange={checkPwChange} style={{width:\"100%\"}} type=\"text\" placeholder=\"다시 한번 입력해주세요.\" />\r\n                \r\n                \r\n                <button type=\"button\" onClick={handlePwClick}>취소</button>\r\n                <button onClick={validatePw}>확인</button>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    // 비밀번호 변경 전\r\n    const beforeChange = (\r\n        <>\r\n            <div style={{display:\"flex\"}}>\r\n                <p>비밀번호</p>\r\n                {agreeSign === false && (\r\n                    <div \r\n                    value={oldPw}\r\n                    type=\"text\" \r\n                    placeholder=\"비밀번호\" \r\n                    style={{border: \"1px solid\", width:100,height:30}} \r\n                    >\r\n                    {oldPw}\r\n                    </div>\r\n                )}\r\n                {agreeSign === true && (\r\n                    <div \r\n                    value={newPw}\r\n                    type=\"text\" \r\n                    placeholder=\"비밀번호\" \r\n                    style={{border: \"1px solid\", width:100,height:30}} \r\n                    >\r\n                    {newPw}\r\n                    </div>\r\n                )}\r\n                \r\n                <button type=\"button\" onClick={handlePwClick}>변경하기</button>\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n    //사용자 정보 수정 전\r\n    const provideInfo = (\r\n        <>\r\n            <div className=\"user-infoContent\">\r\n                <p>계정 이메일</p>\r\n                <div \r\n                    name=\"email\" \r\n                    value={userInfo.email}\r\n                    style={{border: \"1px solid\",height:30}}  \r\n                    placeholder=\"계정 이메일\" \r\n                >\r\n                    {userInfo.email}\r\n                </div>\r\n            </div>\r\n\r\n            <div  className=\"user-infoContent\"s>\r\n                <p>이름</p>\r\n                <div \r\n                    type=\"text\"\r\n                    name=\"name\" \r\n                    value={userInfo.name} \r\n                    style={{border: \"1px solid\", width:100,height:30}}  \r\n                    placeholder=\"이름\"\r\n                >\r\n                    {userInfo.name}\r\n                </div>\r\n            </div>\r\n\r\n            <div  className=\"user-infoContent\">\r\n                <p>생년월일</p>\r\n                <div \r\n                    name=\"birth\" \r\n                    value={userInfo.birth}\r\n                    style={{border: \"1px solid\", width:100,height:30}}  \r\n                    placeholder=\"생년월일\" \r\n                >\r\n                    {userInfo.birthday}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <p>비밀번호</p>\r\n                <div \r\n                    type=\"text\" \r\n                    placeholder=\"비밀번호\" \r\n                    style={{border: \"1px solid\", width:100,height:30}} \r\n                >\r\n                    {\"*******\"}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <p>전화번호</p>\r\n                <div \r\n                    type=\"text\" \r\n                    placeholder=\"전화번호\" \r\n                    style={{border: \"1px solid\", width:100, height:30}}\r\n                >\r\n                    {userInfo.phone}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <p>주소</p> \r\n                <div \r\n                    value={userInfo.address}\r\n                    type=\"text\" \r\n                    placeholder=\"주소\" \r\n                    style={{border: \"1px solid\",height:30}}\r\n                >\r\n                    {userInfo.address}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <p>상세주소</p> \r\n                <div \r\n                    value={userInfo.addressDetail}\r\n                    type=\"text\" \r\n                    placeholder=\"상세주소\" \r\n                    style={{border: \"1px solid\",width: 100,height:30}}\r\n                >\r\n                    {userInfo.addressDetail}\r\n                </div>\r\n            </div>\r\n\r\n            <a href=\"./myPage\"><button>마이페이지</button></a>\r\n            <button type=\"button\" onClick={handleClickEvent}>수정하기</button>\r\n        </>\r\n    )\r\n\r\n\r\n\r\n    //사용자 정보 수정 후\r\n    const modifiedInfo = (\r\n        <>\r\n            <div  className=\"user-infoContent\">\r\n                <p>계정 이메일</p>\r\n                <div \r\n                    name=\"email\" \r\n                    value={userInfo.email}\r\n                    style={{border: \"1px solid\",height:30}}  \r\n                    placeholder=\"계정 이메일\" \r\n                >\r\n                    {userInfo.email}\r\n                </div>\r\n            </div>\r\n\r\n            <div  className=\"user-infoContent\"s>\r\n                <p>이름</p>\r\n                <div \r\n                    type=\"text\"\r\n                    name=\"name\" \r\n                    value={userInfo.name} \r\n                    style={{border: \"1px solid\", width:100,height:30}}  \r\n                    placeholder=\"이름\"\r\n                >\r\n                    {userInfo.name}\r\n                </div>\r\n            </div>\r\n\r\n            <div  className=\"user-infoContent\">\r\n                <p>생년월일</p>\r\n                <div \r\n                    name=\"birth\" \r\n                    value={userInfo.birth}\r\n                    style={{border: \"1px solid\", width:100,height:30}}  \r\n                    placeholder=\"생년월일\" \r\n                >\r\n                    {userInfo.birthday}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <div>{passwordClick ? pwForm : beforeChange}</div>\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <p>전화번호</p>\r\n                <div \r\n                    type=\"text\" \r\n                    placeholder=\"전화번호\" \r\n                    style={{border: \"1px solid\", width:100, height:30}}\r\n                >\r\n                    {allow === true && (\r\n                        phoneInput\r\n                    )}\r\n                    {allow === false && (\r\n                        userInfo.phone\r\n                    )}\r\n                </div>\r\n                <PhoneModal type=\"button\" />\r\n            </div>\r\n\r\n            <div className=\"user-infoContent\">\r\n                <p>주소</p> \r\n                    <div \r\n                        type=\"text\" \r\n                        id=\"address\" \r\n                        name=\"address\"\r\n                        placeholder=\"주소\" \r\n                        value={isAddress}\r\n                        selected={isAddress}\r\n                        style={{border: \"1px solid\", maxWidth: 250}}\r\n                    >\r\n                        {allow === true && (\r\n                            isAddress\r\n                        )}\r\n                        {allow === false && (\r\n                            userInfo.address\r\n                        )}\r\n                    </div>\r\n                <AddresModal type=\"button\"/>\r\n            </div>\r\n            <div className=\"user-infoContent\">\r\n                <p>상세주소</p> \r\n                {addDetail === true && (\r\n                <>\r\n                    <input \r\n                        value={isAddressDetail}\r\n                        type=\"text\" \r\n                        placeholder=\"상세주소\" \r\n                        style={{border: \"1px solid\",width: 100,height:30}}\r\n                        onChange={addDetailChange}\r\n                    />\r\n                    <button onClick={handleAddDetailSwitch}>취소</button>\r\n                </>\r\n                )}\r\n                \r\n                {addDetail === false && (\r\n                <>\r\n                    <div \r\n                        value={userInfo.addressDetail}\r\n                        type=\"text\" \r\n                        placeholder=\"상세주소\" \r\n                        style={{border: \"1px solid\",width: 100,height:30}}\r\n                        onChange={addDetailChange}\r\n                    >\r\n                        {userInfo.addressDetail}\r\n                    </div>\r\n                    <button onClick={handleAddDetailSwitch}>입력하기</button>\r\n                </>\r\n                )}\r\n            </div>\r\n            <button onClick={handleClickEvent}>뒤로가기</button>\r\n            <button onClick={changeSubmit}>변경확인</button>\r\n        </>\r\n    )\r\n\r\n    //회원정보 진입시 첫화면\r\n    useEffect(()=>{\r\n        console.log(\"useEffect 들어옴\")\r\n        axios\r\n        .get(userInfomation,{headers: authHeader()})\r\n        .then((response)=>{\r\n            console.log(\"response 들어옴\")\r\n            console.log(response.data)\r\n            const userInfo = response.data\r\n            setUserInfo(userInfo)\r\n            console.log(\"userInfo.address\")\r\n            console.log(userInfo.address)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error.response.data.error.message)\r\n            alert(error.response.data.error.message)\r\n        })\r\n    },[])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>회원정보수정</h1>\r\n                <div \r\n                style={{display:\"flex\", justifyContent:\"center\",width:600, border:\"1px solid\", textAlign:\"right\"}}>\r\n                    <div style={{width:500, border:\"1px solid\", backgroundColor:\"lightGray\"}}>\r\n                        {!clickAction ? provideInfo : modifiedInfo}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* 모달 번호인증 확인 */}\r\n                <Modal \r\n                    show={phoneShow} \r\n                    data-toggle=\"modal\"\r\n                    onHide={handlePhoneClose}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>번호인증</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div style={{textAlign:\"center\"}}>\r\n                            <div style={{textAlign:\"center\"}}>\r\n                                <p >신규 번호</p>\r\n                                {sendClick ?  phoneForm : beforeChangePn}\r\n                            </div>\r\n                            <br />\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>   \r\n\r\n                {/* 모달 주소검색 확인 */}\r\n                <Modal \r\n                    show={addShow} \r\n                    data-toggle=\"modal\"\r\n                    onHide={handleAddClose}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>주소검색</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <DaumPostcode onComplete={handleComplete}/>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </Modal>   \r\n                {/* 모달 회원탈퇴여부 확인 */}\r\n                <RemoveModal type=\"button\" />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(UserInfo);","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\MyPage.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\ServiceCenter.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\Navbar.js",["170","171","172","173"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\Products.js",["174","175","176"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\products\\ProductDetail.js",["177"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\navi\\DownNav.js",["178"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\Review.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\story\\Story.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\Event.js",["179"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Review from '../review/Review';\r\n\r\nconst Event = ({\r\n    data,\r\n    eventImg\r\n}) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {data.map((event)=>(\r\n                    <img className={eventImg} src={event.img} alt={event.id} />\r\n                ))}\r\n            </div>  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Event;\r\nEvent.propTypes ={\r\n    data:PropTypes.arrayOf(PropTypes.object),\r\n    eventImg : PropTypes.string\r\n}\r\nPropTypes.defaultType={\r\n    data:[],\r\n    eventImg : \"evt-img\"\r\n}","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\Cart.js",["180","181","182","183","184"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\Notice.js",["185"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\OrderHistory.js",["186"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\review\\RvCenter.js",["187"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\event\\EventCenter.js",["188"],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\user\\Coupon.js",[],"C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\cart\\CartItem.js",["189","190"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CartItem = ({\r\n    data,\r\n    containerLayout,\r\n    contentLayout,\r\n    imgLayout\r\n}) => {\r\n    const cartUserItem = \"https://childsnack-test.appspot.com/_ah/api/cart/v1/get?id=\"\r\n\r\n    const query = window.location.search\r\n    console.log(query)\r\n    const urlParams = new URLSearchParams(query)\r\n    console.log(urlParams)\r\n    const getId = urlParams.get('id')\r\n    console.log(getId)\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(\"카트 id로 불러오기\")\r\n        axios\r\n        .get(cartUserItem + getId)\r\n        .then((response)=>{\r\n            console.log(response)\r\n            //여기서 id를 못받아옴\r\n\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <p>carItem</p>   \r\n                <div>\r\n                    {data.map((cartItem)=>(\r\n                        <div className={containerLayout} alt={cartItem.id}>\r\n                            <div className={contentLayout}>\r\n                            <div style={{border:\"1px solid\",display: \"flex\"}}>\r\n                                <img className={imgLayout} src={cartItem.img} alt={cartItem.id} />\r\n                                {cartItem.content}\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CartItem;\r\nCartItem.propTypes ={\r\n    data: PropTypes.arrayOf(PropTypes.object),\r\n    containerLayout : PropTypes.string,\r\n    contentLayout : PropTypes.string,\r\n    imgLayout: PropTypes.string,\r\n}\r\n\r\nPropTypes.defaultType = {\r\n    data :[],\r\n    containerLayout : 'cartContainer',\r\n    contencontentLayouttCss : 'cartContent',\r\n    imgLayout : 'cartImg'\r\n}\r\n","C:\\Users\\wj108\\OneDrive\\바탕 화면\\parkdev\\project\\src\\components\\categorys\\Category.js",["191"],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":17},{"ruleId":"196","severity":1,"message":"200","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":20},{"ruleId":"196","severity":1,"message":"201","line":131,"column":11,"nodeType":"198","messageId":"199","endLine":131,"endColumn":24},{"ruleId":"196","severity":1,"message":"202","line":34,"column":19,"nodeType":"198","messageId":"199","endLine":34,"endColumn":27},{"ruleId":"196","severity":1,"message":"203","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":14},{"ruleId":"196","severity":1,"message":"204","line":7,"column":8,"nodeType":"198","messageId":"199","endLine":7,"endColumn":15},{"ruleId":"196","severity":1,"message":"205","line":14,"column":11,"nodeType":"198","messageId":"199","endLine":14,"endColumn":25},{"ruleId":"196","severity":1,"message":"206","line":15,"column":11,"nodeType":"198","messageId":"199","endLine":15,"endColumn":25},{"ruleId":"196","severity":1,"message":"207","line":17,"column":11,"nodeType":"198","messageId":"199","endLine":17,"endColumn":22},{"ruleId":"196","severity":1,"message":"208","line":20,"column":11,"nodeType":"198","messageId":"199","endLine":20,"endColumn":27},{"ruleId":"196","severity":1,"message":"209","line":23,"column":11,"nodeType":"198","messageId":"199","endLine":23,"endColumn":18},{"ruleId":"196","severity":1,"message":"210","line":29,"column":12,"nodeType":"198","messageId":"199","endLine":29,"endColumn":20},{"ruleId":"196","severity":1,"message":"211","line":29,"column":22,"nodeType":"198","messageId":"199","endLine":29,"endColumn":33},{"ruleId":"196","severity":1,"message":"212","line":43,"column":19,"nodeType":"198","messageId":"199","endLine":43,"endColumn":27},{"ruleId":"196","severity":1,"message":"213","line":49,"column":12,"nodeType":"198","messageId":"199","endLine":49,"endColumn":23},{"ruleId":"196","severity":1,"message":"214","line":49,"column":25,"nodeType":"198","messageId":"199","endLine":49,"endColumn":39},{"ruleId":"196","severity":1,"message":"215","line":50,"column":12,"nodeType":"198","messageId":"199","endLine":50,"endColumn":21},{"ruleId":"196","severity":1,"message":"216","line":8,"column":10,"nodeType":"198","messageId":"199","endLine":8,"endColumn":21},{"ruleId":"196","severity":1,"message":"217","line":11,"column":12,"nodeType":"198","messageId":"199","endLine":11,"endColumn":20},{"ruleId":"196","severity":1,"message":"218","line":11,"column":22,"nodeType":"198","messageId":"199","endLine":11,"endColumn":33},{"ruleId":"196","severity":1,"message":"219","line":16,"column":11,"nodeType":"198","messageId":"199","endLine":16,"endColumn":15},{"ruleId":"196","severity":1,"message":"220","line":21,"column":11,"nodeType":"198","messageId":"199","endLine":21,"endColumn":21},{"ruleId":"196","severity":1,"message":"221","line":1,"column":15,"nodeType":"198","messageId":"199","endLine":1,"endColumn":23},{"ruleId":"196","severity":1,"message":"222","line":1,"column":25,"nodeType":"198","messageId":"199","endLine":1,"endColumn":34},{"ruleId":"196","severity":1,"message":"223","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":19},{"ruleId":"224","severity":1,"message":"225","line":93,"column":7,"nodeType":"226","endLine":93,"endColumn":9,"suggestions":"227"},{"ruleId":"196","severity":1,"message":"221","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"228","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":14},{"ruleId":"196","severity":1,"message":"229","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":16},{"ruleId":"196","severity":1,"message":"230","line":11,"column":11,"nodeType":"198","messageId":"199","endLine":11,"endColumn":20},{"ruleId":"196","severity":1,"message":"231","line":38,"column":11,"nodeType":"198","messageId":"199","endLine":38,"endColumn":23},{"ruleId":"196","severity":1,"message":"232","line":43,"column":11,"nodeType":"198","messageId":"199","endLine":43,"endColumn":25},{"ruleId":"224","severity":1,"message":"233","line":119,"column":7,"nodeType":"226","endLine":119,"endColumn":9,"suggestions":"234"},{"ruleId":"196","severity":1,"message":"235","line":8,"column":12,"nodeType":"198","messageId":"199","endLine":8,"endColumn":18},{"ruleId":"196","severity":1,"message":"236","line":9,"column":12,"nodeType":"198","messageId":"199","endLine":9,"endColumn":21},{"ruleId":"196","severity":1,"message":"237","line":8,"column":11,"nodeType":"198","messageId":"199","endLine":8,"endColumn":24},{"ruleId":"196","severity":1,"message":"238","line":8,"column":12,"nodeType":"198","messageId":"199","endLine":8,"endColumn":18},{"ruleId":"196","severity":1,"message":"221","line":2,"column":28,"nodeType":"198","messageId":"199","endLine":2,"endColumn":36},{"ruleId":"224","severity":1,"message":"225","line":34,"column":7,"nodeType":"226","endLine":34,"endColumn":9,"suggestions":"239"},{"ruleId":"196","severity":1,"message":"240","line":9,"column":12,"nodeType":"198","messageId":"199","endLine":9,"endColumn":20},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'testUtils' is defined but never used.","Identifier","unusedVar","'PasswordMask' is defined but never used.","'pwInputChange' is assigned a value but never used.","'setError' is assigned a value but never used.","'Navbar' is defined but never used.","'DownNav' is defined but never used.","'productGetList' is assigned a value but never used.","'productGetItem' is assigned a value but never used.","'getMainList' is assigned a value but never used.","'getProReviewList' is assigned a value but never used.","'getList' is assigned a value but never used.","'itemInfo' is assigned a value but never used.","'setItemInfo' is assigned a value but never used.","'setStory' is assigned a value but never used.","'certificate' is assigned a value but never used.","'setCertificate' is assigned a value but never used.","'itemClick' is assigned a value but never used.","'useDispatch' is defined but never used.","'isSubmit' is assigned a value but never used.","'setIsSubmit' is assigned a value but never used.","'logo' is assigned a value but never used.","'cartSwitch' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'urlPropType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getId'. Either include it or remove the dependency array.","ArrayExpression",["243"],"'Review' is defined but never used.","'Products' is defined but never used.","'updateUrl' is assigned a value but never used.","'productTimes' is assigned a value but never used.","'handleCountNum' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'makeCartelement'. Either include it or remove the dependency array.",["244"],"'notice' is assigned a value but never used.","'orderList' is assigned a value but never used.","'userReviewURL' is assigned a value but never used.","'events' is assigned a value but never used.",["245"],"'category' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"246","fix":"250"},"Update the dependencies array to be: [getId]",{"range":"251","text":"252"},"Update the dependencies array to be: [makeCartelement]",{"range":"253","text":"254"},{"range":"255","text":"252"},[2785,2787],"[getId]",[3322,3324],"[makeCartelement]",[812,814]]